<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[做最好的自己]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.bestzhangjin.com/"/>
  <updated>2016-04-01T15:20:55.637Z</updated>
  <id>http://www.bestzhangjin.com/</id>
  
  <author>
    <name><![CDATA[Jin Zhang]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Javaweb框架]]></title>
    <link href="http://www.bestzhangjin.com/2016/04/01/Hibernate/"/>
    <id>http://www.bestzhangjin.com/2016/04/01/Hibernate/</id>
    <published>2016-04-01T06:15:00.000Z</published>
    <updated>2016-04-01T15:20:55.637Z</updated>
    <content type="html"><![CDATA[<p>主要内容：<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u6301_u4E45_u5C42Hibernate"><a href="#u7B2C_u4E00_u7AE0__u6301_u4E45_u5C42Hibernate" class="headerlink" title="第一章 持久层Hibernate"></a>第一章 持久层Hibernate</h1><p>本章介绍：本章讲解Hibernate基础，核心，与Mysql集合开发</p>
<h2 id="1-Hibernate_u57FA_u7840"><a href="#1-Hibernate_u57FA_u7840" class="headerlink" title="1.Hibernate基础"></a>1.Hibernate基础</h2><p>1.1 介绍<br>Hibernate提供与数据库无关的API接口，可以让开发人员不关心数据库的差异，而是关心业务层的开发。Hibernate对JDBC进行了轻量级的封装。<br>Hibernate是一个JDO工具，通过文件把值对象和数据库表之间建立起映射关系。我们通过操作这些值对象和Hibernate提供的一些基本类就可以达到使用数据库目的。<br>操作数据库经历了三个阶段:操作JDBC,封装JDBC，ORM；这里只是介绍ORM。<br>ORM（Object Relational Mapping）对象关系映射是解决面向对象与关系数据库存在的不匹配的技术，ORM通过描述对象和数据库之间映射的元数据将java对象自动持久化到关系数据库。<br>数据实体3种表现形式：数据实体，数据表，映射对象。<br>部分流行ORM产品：Apache OJB,Hibernate,iBATIS,Cayenne等。<br>持久层框架方向：直接编写JDBC等SQL语句（eg:iBATIS）;O/R Mapping(eg:Hibernate)和JDO技术；EJB中实体Bean技术。</p>
<p>1.2 Hibernate配置与开发流程<br>(1)添加库包<br>下载MYSQL驱动mysql-connector-java-5.0.8-bin.jar<br>下载Hibernate安装包hibernate-3.0.zip<br>根目录下核心包:hibernate3.jar<br>lib目录下必需包：<br>cglib-2.1.jar、asm-attr.jar、asm.jar:CGLIB库，Hibernate用来实现PO字节码的动态生成；<br>dom4j-1.6.jar:dom4j类似于jdom,是一个XML API，用来读写XML文件；<br>commons-collections-2.1.1.jar:Apache Commons包中的一个，包含一些Apache开发的集合类，比java.util.*强大；<br>commons-logging-1.0.4.jar、log4j-1.2.9.jar:日志功能。<br>其他包非必需，这里不介绍，需要时查询资料。</p>
<p>项目下新建lib文件夹，将需要导入的库包复制到lib目录，选中包右键-&gt;Build Path-&gt;Add To Build Path添加库包</p>
<p>(2)Hibernate配置文件<br>配置文件包含一系列属性的配置，Hibernate根据这些属性来连接数据库。<br>配置有两种：properties与xml<br>properties与xml配置文件可以同时使用，当同时使用两种类型的配置文件时，在XML配置文件中的设置会覆盖properties配置文件的相同属性。</p>
<p>A.properties<br>hibernate.properties样例<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hibernate.dialect=net<span class="class">.sf</span><span class="class">.Hibernate</span><span class="class">.dialect</span><span class="class">.MYSQLDialect</span> <span class="comment">//指定数据库使用SQL方言</span></span><br><span class="line">hibernate<span class="class">.connection</span><span class="class">.driver_class</span>=com<span class="class">.mysql</span><span class="class">.jdbc</span><span class="class">.Driver</span> <span class="comment">//指定驱动程序</span></span><br><span class="line">hibernate<span class="class">.connection</span><span class="class">.url</span>=jdbc:mysql:<span class="comment">//localhost:3306/test //指定数据库的URL</span></span><br><span class="line">hibernate<span class="class">.connection</span><span class="class">.username</span>=root <span class="comment">//指定数据库的用户名</span></span><br><span class="line">hibernate<span class="class">.connection</span><span class="class">.password</span>=<span class="number">123456</span> <span class="comment">//指定数据库密码</span></span><br><span class="line">hibernate.show_sql=true <span class="comment">//默认为false，为true时运行时控制台输出SQL语句</span></span><br></pre></td></tr></table></figure></p>
<p>默认文件名hibernate.properties<br>样例位置：Hibernate软件包的etc目录<br>在项目中放置位置：必须在CLASSPATH指定位置中，如主程序执行位置或者WEB-INF/classes中<br>获取SessionFactory:<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Configuration cfg=<span class="keyword">new</span> Configuration().addClass(com.demo.hiberate.beans.User.<span class="keyword">class</span>);<span class="comment">//加载com/demo/hibernate.beans/User.hbm.xml</span></span><br><span class="line">SessionFactory session=cfg.buildSessionFactory();</span><br></pre></td></tr></table></figure></p>
<p>B.XML<br>XML格式配置文件除了基本的Hibernate配置信息，还可以指定具体的持久化类映射文件，避免将持久化类配置文件编码在程序中。<br>hibernate.cfg.xml样例<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE hibernate-configuration PUBLIC</span><br><span class="line">	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"</span><br><span class="line">	"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">hibernate-configuration</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">session-factory</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"myeclipse.connection.profile"</span>&gt;</span>JDBC for MySQL<span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 显示执行的sql语句 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"show_sql"</span>&gt;</span>true<span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 连接字符串 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"connection.url"</span>&gt;</span>jdbc:mysql://localhost:3306/test<span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库用户名 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"connection.username"</span>&gt;</span>root<span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库密码 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"connection.password"</span>&gt;</span>123456<span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据库驱动 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"connection.driver_class"</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 使用的方言 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">property</span> <span class="attribute">name</span>=<span class="value">"dialect"</span>&gt;</span>org.hibernate.dialect.MySQLDialect<span class="tag">&lt;/<span class="title">property</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 映射文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">mapping</span> <span class="attribute">resource</span>=<span class="value">"com/demo/hibernate/beans/User.hbm.xml"</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">session-factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">hibernate-configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>默认文件名hibernate.cfg.xml<br>样例位置：Hibernate软件包的etc目录<br>在项目中放置位置：必须在CLASSPATH指定位置中，如主程序执行位置或者WEB-INF/classes中<br>获取SessionFactory:<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SessionFactory session=<span class="keyword">new</span> <span class="keyword">Configuration</span>().configure().buildSessionFactory();</span><br><span class="line">//默认XML文件名称是hibernate.cfg.xml，也可以指定文件的名称如下</span><br><span class="line">SessionFactory session=<span class="keyword">new</span> <span class="keyword">Configuration</span>().configure(<span class="string">"dbt.cfg.xml"</span>).buildSessionFactory();</span><br></pre></td></tr></table></figure></p>
<p>(3)开发流程<br>包含三步：创建Hibernate配置/映射文件/持久化类、编写DAO层、编写Service层。</p>
<p>1.3 实例<br>通过用户名密码实现用户验证。<br>编写流程:创建数据库；添加配置文件hibernate.cfg.xml;编写映射文件User.hbm.xml;编写持久化类User.java;编写辅助类HibernateSessionFactory.java;编写DAO类UserDAO.java;编写Service类UserService.java。</p>
<p>(1)添加驱动和库包</p>
<p>(2)创建数据库hibernate，数据表user</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>类型</th>
<th>空</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>int</td>
<td>no</td>
<td><auto_increment></auto_increment></td>
</tr>
<tr>
<td>username</td>
<td>varchar(48)</td>
<td>yes</td>
<td>null</td>
</tr>
<tr>
<td>password</td>
<td>varchar(48)</td>
<td>yes</td>
<td>null</td>
</tr>
<tr>
<td>email</td>
<td>varchar(48)</td>
<td>yes</td>
<td>null</td>
</tr>
</tbody>
</table>
<p>添加一组数据1,admin,admin,12345@qq.com</p>
<p>(3)添加配置文件hibernate.cfg.xml<br>在项目的src目录下添加hibernate.cfg.xml<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>(4)编写映射文件User.hbm.xml<br>hibernate映射文件包含了对象/关系映射(O/R Mapping)所需的元数据，元数据包含持久化类声明和属性到数据库的映射;<br>映射文件负责持久化类与数据库表之间的映射，根元素是hibernate-mapping,并通过package指定类所在的包；<br>每一个表使用一个class定义，name属性表示类的名称，table表示关联的表名，通过property子元素来映射类的变量名与数据库表字段名之间的映射关系。<br>User.hbm.xml<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>(5)编写持久化类User.java<br>Hibernate使用简单的java对象(Plain Old/Ordinary Java Objects就是POJOs)编程模型持久化；POJO类似javabean,通过getter、sertter方法访问属性。<br>POJO规则：<br>a.为属性值声明set/get方法；<br>b.实现一个默认的无参构造方法;<br>c.提供一个标识属性；<br>d.使用非final类。<br>User.java<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>备注:getXXX()、setXXX方法必须如getUsername形式，getUSERNAME、getusername等运行会提示异常</p>
<p>(6)编写辅助类HibernateSessionFactory.java<br>Hibernate的Session是一个持久化管理器，通过它可以从数据库中存取User。<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SessionFactory</span> sessionFactory = new <span class="type">Configuration</span><span class="literal">()</span>.configure<span class="literal">()</span>.buildSessionFactory<span class="literal">()</span>;</span><br></pre></td></tr></table></figure></p>
<p>对configure()调用装载hibernate.cfg.xml配置文件并初始化为一个Configuration实例；SessionFactory通常只是初始化一次。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p>(7)编写DAO类UserDAO.java<br>DAO(Data Access Object)层，就是数据访问接口，为基于Hibernate开发，通常将业务层与数据层分开；DAO层只是负责调用Hibernate API实现CRUD操作，Service层面向用户负责调用DAO层代码；使得数据层不用关心业务功能，更好实现移植。<br>这里编写一个DAO类UserDAO.java实现根据用户名查询用户对象；使用HibernateSession</p>
<h2 id="2-Hibernate_u6838_u5FC3"><a href="#2-Hibernate_u6838_u5FC3" class="headerlink" title="2.Hibernate核心"></a>2.Hibernate核心</h2><h2 id="3-Hibernate_u2014_u2014mysql_u5F00_u53D1"><a href="#3-Hibernate_u2014_u2014mysql_u5F00_u53D1" class="headerlink" title="3.Hibernate——mysql开发"></a>3.Hibernate——mysql开发</h2><h1 id="u9519_u8BEF_u603B_u7ED3"><a href="#u9519_u8BEF_u603B_u7ED3" class="headerlink" title="错误总结"></a>错误总结</h1><h2 id="1-hibernate_uFF0C_u81EA_u5DF1_u5199_u7684xxx-hbm-xml_u6587_u4EF6__u51FA_u73B0_u9519_u8BEF_uFF1AAttribute__u201Ccolumn_u201D_must_be_declared_for_element_type_u201Dproperty_u201D"><a href="#1-hibernate_uFF0C_u81EA_u5DF1_u5199_u7684xxx-hbm-xml_u6587_u4EF6__u51FA_u73B0_u9519_u8BEF_uFF1AAttribute__u201Ccolumn_u201D_must_be_declared_for_element_type_u201Dproperty_u201D" class="headerlink" title="1.hibernate，自己写的xxx.hbm.xml文件 出现错误：Attribute “column” must be declared for element type”property”"></a>1.hibernate，自己写的xxx.hbm.xml文件 出现错误：Attribute “column” must be declared for element type”property”</h2><p>因为复制了hibernate.cfg.xml的头部文件<br>&lt;?xmlversion=’1.0’ encoding=’UTF-8’?&gt;<br>&lt;!DOCTYPE hibernate-configuration PUBLIC<br>         “-//Hibernate/Hibernate Configuration DTD 3.0//EN”<br>         “<a href="http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;&gt;" target="_blank" rel="external">http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd&quot;&gt;</a></p>
<p>改为mapping的头文件就行了<br>&lt;?xmlversion=”1.0” encoding=”UTF-8”?&gt;<br>&lt;!DOCTYPEhibernate-mapping PUBLIC<br>         “-//Hibernate/Hibernate Mapping DTD 3.0//EN”<br>         “<a href="http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;" target="_blank" rel="external">http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd&quot;&gt;</a></p>
<h2 id="2-org-hibernate-PropertyNotFoundException_3ACould_not_find_a_setter_for_property_username_in_class_com-zhang-hibernate-User"><a href="#2-org-hibernate-PropertyNotFoundException_3ACould_not_find_a_setter_for_property_username_in_class_com-zhang-hibernate-User" class="headerlink" title="2.org.hibernate.PropertyNotFoundException:Could not find a setter for property username in class com.zhang.hibernate.User"></a>2.org.hibernate.PropertyNotFoundException:Could not find a setter for property username in class com.zhang.hibernate.User</h2><p>编写持久化类User.java时getXXX()、setXXX方法必须如getUsername形式，getUSERNAME、getusername等运行会提示异常</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：<br>]]>
    
    </summary>
    
      <category term="Javaweb" scheme="http://www.bestzhangjin.com/tags/Javaweb/"/>
    
      <category term="框架" scheme="http://www.bestzhangjin.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Javaweb" scheme="http://www.bestzhangjin.com/categories/Javaweb/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Web页面设计技巧总结]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/30/Web_skill/"/>
    <id>http://www.bestzhangjin.com/2016/03/30/Web_skill/</id>
    <published>2016-03-30T01:30:00.000Z</published>
    <updated>2016-03-30T01:31:44.373Z</updated>
    <content type="html"><![CDATA[<p>主要内容：Web页面设计技巧总结<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u7F51_u9875_u63D2_u5165_u65E5_u5386"><a href="#u7B2C_u4E00_u7AE0__u7F51_u9875_u63D2_u5165_u65E5_u5386" class="headerlink" title="第一章 网页插入日历"></a>第一章 网页插入日历</h1>]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：Web页面设计技巧总结<br>]]>
    
    </summary>
    
      <category term="网页设计" scheme="http://www.bestzhangjin.com/tags/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="网页设计" scheme="http://www.bestzhangjin.com/categories/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[jQuery教程]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/30/jQuery/"/>
    <id>http://www.bestzhangjin.com/2016/03/30/jQuery/</id>
    <published>2016-03-30T01:30:00.000Z</published>
    <updated>2016-04-02T15:28:34.613Z</updated>
    <content type="html"><![CDATA[<p>主要内容：<br>说明：本教程使用webstorm和jquery-1.9.1<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u73AF_u5883_u642D_u5EFA"><a href="#u7B2C_u4E00_u7AE0__u73AF_u5883_u642D_u5EFA" class="headerlink" title="第一章 环境搭建"></a>第一章 环境搭建</h1><h2 id="1-jQuery_u4ECB_u7ECD"><a href="#1-jQuery_u4ECB_u7ECD" class="headerlink" title="1.jQuery介绍"></a>1.jQuery介绍</h2><p>jQuery是一套跨浏览器的JavaScript库，简化HTML与JavaScript之间的操作。它是轻量级的js库 ，兼容CSS3，还兼容各种浏览器。jQuery使用户能更方便地处理HTML documents、events、实现动画效果，并且方便地为网站提供AJAX交互。jQuery还有一个比较大的优势是，它的文档说明很全，而且各种应用也说得很详细，同时还有许多成熟的插件可供选择。jQuery能够使用户的html页面保持代码和html内容分离，也就是说，不用再在html里面插入一堆js来调用命令了，只需定义id即可。</p>
<h2 id="2-_u73AF_u5883_u642D_u5EFA"><a href="#2-_u73AF_u5883_u642D_u5EFA" class="headerlink" title="2.环境搭建"></a>2.环境搭建</h2><p>下载jQuery文件库：<br><a href="http://jquery.com" target="_blank" rel="external">http://jquery.com</a><br>或者<br><a href="http://www.jq22.com/jquery-info122" target="_blank" rel="external">http://www.jq22.com/jquery-info122</a><br>下载完jQuery框架文件后，不需要安装，使用<script>文件导入标记，将jQuery框架文件导入页面中即可，在页面的<head></head>中加入如下代码：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">language</span>=<span class="value">"javascript"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"文件目录/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>加入上述代码后，便完成了jQuery框架开发环境的搭建。</p>
<h2 id="3-JavaScript_u4E0EjQuery_u5173_u7CFB"><a href="#3-JavaScript_u4E0EjQuery_u5173_u7CFB" class="headerlink" title="3.JavaScript与jQuery关系"></a>3.JavaScript与jQuery关系</h2><p>jQuery本身就是JavaScript，只不过是把JavaScript代码包装成拿过来就能实现特定功能的代码库！我们想改变页面中所有段落标签<p>中的文本内容：<br>javaScript代码：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> page_p = <span class="built_in">document</span>.getElementsByTagName(<span class="string">"p"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;page_p.length;i++)&#123;</span><br><span class="line">	page_p[i].innerHTML=<span class="string">"改变后的内容"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>jQuery代码：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(</span><span class="string">"p"</span>).html(<span class="string">"改变后的内容"</span>);</span><br></pre></td></tr></table></figure></p>
<p>以上两段代码完成的功能是一样的。jQuery更加的简洁方便，我们在处理DOM时不必关心功能的实现细节。<br>$()就是jQuery中的函数，它的功能是获得（）中指定的标签元素。如示例中$(“p”)会得到一组P标签元素,其中“p”表示CSS中的标签选择器。$()中的()不一定是指定元素，也可能是函数。<br>在jQuery中 $()方法等价于jQuery()方法,前者比较常用，是后者的简写。一般只有在$()与其它语言冲突时才会使用jQuery()方法。</p>
<h2 id="4-_u5E94_u7528_u5B9E_u4F8B"><a href="#4-_u5E94_u7528_u5B9E_u4F8B" class="headerlink" title="4.应用实例"></a>4.应用实例</h2><p>用webstorm新建一个项目Test,新建index.html、style.css,导入jquery.js<br><img src="/img/jquery/1.png" alt="image"><br>index.html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>初识jQuery<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">"style.css"</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"test"</span>&gt;</span>初识jQuery<span class="tag">&lt;/<span class="title">div</span>&gt;</span><span class="comment">&lt;!-- test标签在css中设置属性 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">button</span> <span class="attribute">onclick</span>=<span class="value">"sayHello()"</span>&gt;</span>点我<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="comment">&lt;!-- 方法调用 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sayHello</span>(<span class="params"></span>)</span>&#123;<span class="comment">//方法定义</span></span><br><span class="line">        $(<span class="string">"#test"</span>).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>style.css<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#test&#123;</span><br><span class="line">    display:none;</span><br><span class="line">    width:100px;</span><br><span class="line">    height:40px;</span><br><span class="line">    border:2px solid red;<span class="comment">&lt;!-- 边框 --&gt;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/jquery/2.png" alt="image"><br>点击按钮如下：<br><img src="/img/jquery/3.png" alt="image"></p>
<h1 id="u7B2C_u4E8C_u7AE0_jQuery_u9009_u62E9_u5668"><a href="#u7B2C_u4E8C_u7AE0_jQuery_u9009_u62E9_u5668" class="headerlink" title="第二章 jQuery选择器"></a>第二章 jQuery选择器</h1><h2 id="1-_u57FA_u7840_u9009_u62E9_u5668"><a href="#1-_u57FA_u7840_u9009_u62E9_u5668" class="headerlink" title="1.基础选择器"></a>1.基础选择器</h2><p>(1)#id<br>通过一个id号去查找一个元素，使用格式： $(“#选择的id”)。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>#id选择器<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"my_id1"</span>&gt;</span>div内容1<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"my_id2"</span>&gt;</span>div内容2<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    $(<span class="string">"#my_id2"</span>).html($(<span class="string">"#my_id1"</span>).html());<span class="comment">//将my_id2处内容设置成与my_id1相同 $("#my_id1").html()获得my_id1处内容</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>运行:<br><img src="/img/jquery/4.png" alt="image"></p>
<p>(2)element选择器<br>jQuery中可以根据元素名/element（<div>、<span>等）查找元素，格式如下：<br>$(“element”)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">button</span> <span class="attribute">id</span>=<span class="value">"btn"</span>&gt;</span>点我<span class="tag">&lt;/<span class="title">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"my_id"</span>&gt;</span>div显示<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">	$(<span class="string">"div"</span>).css(<span class="string">"font-weight"</span>,<span class="string">"bold"</span>);<span class="comment">//将div中内容字体加粗</span></span><br><span class="line">    $(<span class="string">"button"</span>).attr(<span class="string">"disabled"</span>,<span class="string">"true"</span>);<span class="comment">//将按钮设置为灰色(不可以点击)</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(3).class 选择器<br>可以通过类别（class）属性查找元素。调用格式如下：<br>$(“.class”)<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.red</span><span class="rules">&#123; <span class="rule"><span class="attribute">color</span>:<span class="value">red</span></span>;&#125;</span></span><br><span class="line"><span class="class">.green</span><span class="rules">&#123; <span class="rule"><span class="attribute">color</span>:<span class="value">green</span></span>;&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>index.html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>.class选择器<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">"style.css"</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"red"</span> <span class="attribute">id</span>=<span class="value">"div_id"</span>&gt;</span>我是红色<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>我是绿色<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="keyword">var</span> $className=$(<span class="string">"#div_id"</span>).attr(<span class="string">"class"</span>);<span class="comment">//调用元素的attr()方法获取元素的类别名-----attr()函数</span></span><br><span class="line">    $(<span class="string">"p"</span>).html($className);<span class="comment">//标签p位置显示.red类的类名</span></span><br><span class="line">    <span class="keyword">var</span> $redHTML = $(<span class="string">".red"</span>).html();</span><br><span class="line">    $(<span class="string">".green"</span>).html($redHTML);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/jquery/5.png" alt="image"></p>
<p>(4)<em> 选择器<br>“</em>”号选择器，它的功能是获取页面中的全部元素，包括<head>、<body>、<script>这些元素,格式为：<br>$(“*”)<br>由于该选择器的特殊性，它常与其他元素组合使用，表示获取其他元素中的全部子元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>*选择器<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://libs.baidu.com/jquery/1.9.0/jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Button1"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"button"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Text1"</span> <span class="attribute">type</span>=<span class="value">"text"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Radio1"</span> <span class="attribute">type</span>=<span class="value">"radio"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Checkbox1"</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    $(<span class="string">"form *"</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);<span class="comment">//设置form下所有子标签为灰色 不可以</span></span><br><span class="line">    $(<span class="string">"div *"</span>).html(<span class="string">"div *选择器"</span>);<span class="comment">//设置div下所有子标签显示内容"div *选择器"</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/jquery/6.png" alt="image"></p>
<p>(5)sele1,sele2,seleN选择器<br>精确的选择任意多个指定的元素,调用格式如下：<br>$(“sele1,sele2,seleN”)<br>每个选择器之间用“，”号隔开，它们可以是之前提及的各种类型选择器，如$(“#id”)、$(“.class”)、$(“selector”)选择器等。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"red"</span>&gt;</span>red<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>green<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"blue"</span>&gt;</span>blue<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    $(<span class="string">".red,.green,#blue"</span>).html(<span class="string">"我们是红绿蓝"</span>);<span class="comment">//全部标签内容设置成指定值</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(6)ance desc选择器<br>层次性选择器可以快速定位某一层次的一个或多个元素，ance desc选择器就是其中之一，格式如下：<br>$(“ance desc”)<br>ance desc是使用空格隔开的两个参数。ance参数（ancestor祖先的简写）表示父元素；desc参数（descendant后代的简写）表示后代元素，即包括子元素、孙元素等等。两个参数都可以通过选择器来获取。<br>index.html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"> <span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"utf-8"</span>/&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">title</span>&gt;</span>ance desc选择器<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">"style.css"</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span>&gt;</span>宽度随着文字增加而增加</span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    $(<span class="string">"div label"</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>);<span class="comment">//将div下所有label标签背景色改为red</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">div</span>, <span class="tag">p</span>, <span class="tag">label</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">float</span>:<span class="value"> left</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> solid <span class="number">1px</span> <span class="hexcolor">#666</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">5px</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="tag">label</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">20px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">height</span>:<span class="value"><span class="number">20px</span></span><br><span class="line"></span></span></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行:<br><img src="/img/jquery/7.png" alt="image"></p>
<p>(7)parent &gt; child选择器<br>与ance desc选择器相比，parent &gt; child选择器的范围要小些，child参数获取的元素都是parent选择器的子元素,它所选择的目标是子集元素，相当于一个家庭中的子辈们，但不包括孙辈，格式如下：<br>$(“parent &gt; child”)</p>
<p>(8)prev + next选择器<br>通过prev + next选择器就可以查找与“prev”元素紧邻的下一个“next”元素，格式如下：<br>$(“prev + next”)<br>其中参数prev为任何有效的选择器，参数“next”为另外一个有效选择器<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"p+span"</span>)<span class="comment">//选择p后面的第一个span</span></span><br></pre></td></tr></table></figure></p>
<p>(9)prev ~ siblings选择器<br>与prev + next层次选择器相同，prev ~ siblings选择器也是查找prev 元素之后的相邻元素，但前者只获取第一个相邻的元素，而后者则获取prev 元素后面全部相邻的元素，格式如下：<br>$(“prev ~ siblings”)<br>siblings选择器获取的元素都是prev元素之后的同辈元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"p ~ label"</span>).css(<span class="string">"border"</span>, <span class="string">"solid 1px red"</span>);<span class="comment">//选中p后面的两个label</span></span><br><span class="line">   </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u8FC7_u6EE4_u9009_u62E9_u5668"><a href="#2-_u8FC7_u6EE4_u9009_u62E9_u5668" class="headerlink" title="2.过滤选择器"></a>2.过滤选择器</h2><p>(1):first :last过滤选择器<br>过滤选择器是根据某过滤规则进行元素的匹配，书写时以“：”号开头,通常用于查找集合元素中的某一位置的单个元素。<br>:first :last得到一组相同标签元素中的第1个和最后一个元素<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>:first，:last过滤器<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>橘子<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"li:first"</span>).css(<span class="string">"background-color"</span>, <span class="string">"green"</span>);<span class="comment">//葡萄背景绿色</span></span><br><span class="line">        $(<span class="string">"li:last"</span>).css(<span class="string">"background-color"</span>,<span class="string">"red"</span>)<span class="comment">//苹果背景红色</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(2):eq(index)过滤选择器<br>从一组标签元素数组中，灵活选择任意的一个标签元素，使用格式<br>:eq(index)<br>其中参数index表示索引号（即：一个整数），它从0开始，如果index的值为3，表示选择的是第4个元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>:eq(index)过滤选择器<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>橘子<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ol</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"li:eq(3)"</span>).css(<span class="string">"background-color"</span>, <span class="string">"#60F"</span>);<span class="comment">//改变苹果背景颜色</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(3):contains(text)过滤选择器<br>:contains(text)选择器按照文本内容来查找一个或多个元素，它的功能是选择包含指定字符串的全部元素，它通常与其他元素结合使用，获取包含“text”字符串内容的全部元素对象。其中参数text表示页面中的文字。<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">&lt;body&gt;</span></span><br><span class="line">    <span class="variable">&lt;div&gt;</span>:contains(text)过滤选择器<span class="variable">&lt;/div&gt;</span></span><br><span class="line">    <span class="variable">&lt;ol&gt;</span></span><br><span class="line">        <span class="variable">&lt;li&gt;</span>强大的<span class="string">"jQuery"</span><span class="variable">&lt;/li&gt;</span></span><br><span class="line">        <span class="variable">&lt;li&gt;</span><span class="string">"javascript"</span>也很实用<span class="variable">&lt;/li&gt;</span></span><br><span class="line">        <span class="variable">&lt;li&gt;</span><span class="string">"jQuery"</span>前端必学<span class="variable">&lt;/li&gt;</span></span><br><span class="line">        <span class="variable">&lt;li&gt;</span><span class="string">"java"</span>是一种开发语言<span class="variable">&lt;/li&gt;</span></span><br><span class="line">        <span class="variable">&lt;li&gt;</span>前端利器——<span class="string">"jQuery"</span><span class="variable">&lt;/li&gt;</span></span><br><span class="line">    <span class="variable">&lt;/ol&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="variable">&lt;script type="text/javascript"&gt;</span></span><br><span class="line">        $(<span class="string">"li:contains('jQuery')"</span>).css(<span class="string">"background"</span>, <span class="string">"green"</span>);//改变包含<span class="string">"jQuery"</span>字符内容的背景色</span><br><span class="line">    <span class="variable">&lt;/script&gt;</span></span><br><span class="line"><span class="variable">&lt;/body&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(4):has(selector)过滤选择器<br>:has(selector)获取选择器中包含指定元素名称的全部元素，其中selector参数就是包含的元素名称，是被包含元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>:has(selector)过滤选择器<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">p</span>&gt;</span>aa<span class="tag">&lt;/<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">label</span>&gt;</span>bb<span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">p</span>&gt;</span>cc<span class="tag">&lt;/<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">label</span>&gt;</span>dd<span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">p</span>&gt;</span>ee<span class="tag">&lt;/<span class="title">p</span>&gt;</span><span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">     <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"li:has('p')"</span>).css(<span class="string">"background-color"</span>, <span class="string">"blue"</span>);<span class="comment">//带有p标签的aa,cc,ee背景色改变</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(5):hidden过滤选择器<br>:hidden过滤选择器的功能是获取全部不可见的元素，这些不可见的元素中包括type属性值为hidden的元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>显示隐藏元素的内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidstr"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"我已隐藏起来"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="keyword">var</span> $strHTML = $(<span class="string">"input:hidden"</span>).val();</span><br><span class="line">    $(<span class="string">"div"</span>).html($strHTML);<span class="comment">//显示“我已隐藏起来”</span></span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(6):visible过滤选择器<br>:visible过滤选择器获取的是全部可见的元素，也就是说，只要不将元素的display属性值设置为“none”，那么，都可以通过该选择器获取。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>:visible过滤选择器<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"display:none"</span>&gt;</span>橘子<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="comment">&lt;!-- 不显示 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"display:block"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"display:"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">style</span>=<span class="value">"display:none"</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"li:visible"</span>).css(<span class="string">"background-color"</span>,<span class="string">"blue"</span>);<span class="comment">//显示的香蕉，葡萄，苹果背景色都blue</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(7)[attribute=value]与[attribute!=value]属性选择器<br>[attribute=value]属性选择器的功能是获取与属性名和属性值完全相同的全部元素，其中[]是专用于属性选择器的括号符，参数attribute表示属性名称，value参数表示属性值。[attribute!=value]与[attribute=value]正好相反！<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>[attribute=value]属性选择器<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"蔬菜"</span>&gt;</span>茄子<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"水果"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"蔬菜"</span>&gt;</span>芹菜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"水果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"水果"</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"li[title='蔬菜']"</span>).css(<span class="string">"background-color"</span>, <span class="string">"green"</span>);<span class="comment">//改变"title"属性值为"蔬菜"的背景颜色</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(8)[attribute*=value]属性选择器<br>获取属性值中包含指定内容的全部元素，其中[]是专用于属性选择器的括号符，参数attribute表示属性名称，value参数表示对应的属性值。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>attribute*=value]属性选择器<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"蔬菜"</span>&gt;</span>茄子<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"水果"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"蔬菜"</span>&gt;</span>芹菜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"人参果"</span>&gt;</span>小西红柿<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span> <span class="attribute">title</span>=<span class="value">"水果"</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"li[title*='果']"</span>).css(<span class="string">"background-color"</span>, <span class="string">"green"</span>);<span class="comment">//改变"title"属性值包含"果"的背景色</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(9):first-child与:last-child子元素过滤选择器<br>:first过滤选择器可以获取指定父元素中的首个子元素，但该选择器返回的只有一个元素，并不是一个集合，而使用:first-child子元素过滤选择器则可以获取每个父元素中返回的首个子元素，它是一个集合，常用多个集合数据的选择处理。<br>:last-child获取每个父元素中返回的最后一个子元素，它也是一个集合，常用多个集合数据的选择处理。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>改变每个"蔬菜水果"中第一行的背景色<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>芹菜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>茄子<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>萝卜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>大白菜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>西红柿<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ol</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>橘子<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">li</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ol</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"li:first-child"</span>).css(<span class="string">"background-color"</span>, <span class="string">"green"</span>);<span class="comment">//改变每个"蔬菜水果"中第一行的背景色--芹菜，橘子</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(10)练习<br>开始显示1,2,3,4,5和更多<br>点击更多显示到8，点击简化恢复显示1,2,3,4,5.<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"Content-Type"</span> <span class="attribute">content</span>=<span class="value">"text/html; charset=utf-8"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>挑战题<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span>&gt;</span>1<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span>&gt;</span>2<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span>&gt;</span>3<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span>&gt;</span>4<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span>&gt;</span>5<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"no"</span> <span class="attribute">style</span>=<span class="value">"display:none"</span>&gt;</span>6<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"no"</span> <span class="attribute">style</span>=<span class="value">"display:none"</span>&gt;</span>7<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">li</span> <span class="attribute">class</span>=<span class="value">"no"</span> <span class="attribute">style</span>=<span class="value">"display:none"</span>&gt;</span>8<span class="tag">&lt;/<span class="title">li</span>&gt;</span><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"#"</span>&gt;</span>更多<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://libs.baidu.com/jquery/1.9.0/jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $(<span class="string">"a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> text = $(<span class="string">"a"</span>).text();</span><br><span class="line">                <span class="keyword">if</span>(text == <span class="string">"更多"</span>)&#123;</span><br><span class="line">                    $(<span class="string">"a"</span>).html(<span class="string">"简化"</span>);</span><br><span class="line">                    $(<span class="string">"li[class=no]"</span>).show();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    $(<span class="string">"a"</span>).html(<span class="string">"更多"</span>);</span><br><span class="line">                    $(<span class="string">"li[class=no]"</span>).hide();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u8868_u5355_u9009_u62E9_u5668"><a href="#3-_u8868_u5355_u9009_u62E9_u5668" class="headerlink" title="3.表单选择器"></a>3.表单选择器</h2><p>(1):input表单选择器<br>:input表单选择器返回全部的表单元素，不仅包括所有<input>标记的表单元素，而且还包括<textarea>、<select> 和 <button>标记的表单元素，因此，它选择的表单元素是最广的。<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.bg_blue</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> blue</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>修改全部表单元素的背景色<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"Input Button"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span>&gt;</span>Option<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">select</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">textarea</span> <span class="attribute">rows</span>=<span class="value">"3"</span> <span class="attribute">cols</span>=<span class="value">"8"</span>&gt;</span><span class="tag">&lt;/<span class="title">textarea</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span>&gt;</span></span><br><span class="line">        Button<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#frmTest :input"</span>).addClass(<span class="string">"bg_blue"</span>);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/8.png" alt="image"></p>
<p>(2):text表单文本选择器<br>获取表单中全部单行的文本输入框元素，单行的文本输入框就像一个不换行的字条工具<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>修改多个单行输入框元素的背景色<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">id</span>=<span class="value">"Text1"</span> <span class="attribute">value</span>=<span class="value">"我是小纸条"</span>/&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">textarea</span> <span class="attribute">rows</span>=<span class="value">"3"</span> <span class="attribute">cols</span>=<span class="value">"8"</span>&gt;</span><span class="tag">&lt;/<span class="title">textarea</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Text2"</span> <span class="attribute">value</span>=<span class="value">"我也是小纸条"</span>/&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span>&gt;</span></span><br><span class="line">        Button<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#frmTest :text"</span>).addClass(<span class="string">"bg_blue"</span>);<span class="comment">//两个input标签的背景色改变 对于&lt;textarea&gt;区域文本、按钮元素无效</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>备注:<br>:text对<input type="password" id="Text2" value="我也是小纸条"/><br />无效</p>
<p>(3):password表单密码选择器<br>:password选择器，它的功能是获取表单中全部的密码输入文本框元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>修改多个密码输入框元素的背景色<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">id</span>=<span class="value">"Text1"</span> <span class="attribute">value</span>=<span class="value">"单行文本输入框"</span>/&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"password"</span> <span class="attribute">id</span>=<span class="value">"Text2"</span> <span class="attribute">value</span>=<span class="value">"密码文本输入框"</span>/&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">textarea</span> <span class="attribute">rows</span>=<span class="value">"3"</span> <span class="attribute">cols</span>=<span class="value">"8"</span>&gt;</span>区域文本输入框<span class="tag">&lt;/<span class="title">textarea</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"password"</span> <span class="attribute">id</span>=<span class="value">"Text3"</span> <span class="attribute">value</span>=<span class="value">""</span>/&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span>&gt;</span></span><br><span class="line">        Button<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#frmTest :password"</span>).addClass(<span class="string">"bg_red"</span>);<span class="comment">//type="password"的两个input框背景色改变</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(4):radio单选按钮选择器<br>使用:radio选择器可轻松获取表单中的全部单选按钮元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>将表单中单选按钮设为不可用<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"Input Button"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Radio1"</span> <span class="attribute">type</span>=<span class="value">"radio"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"Radio1"</span>&gt;</span></span><br><span class="line">        男<span class="tag">&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Radio2"</span> <span class="attribute">type</span>=<span class="value">"radio"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"Radio2"</span>&gt;</span></span><br><span class="line">        女<span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span>&gt;</span></span><br><span class="line">        Button<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#frmTest :radio"</span>).attr(<span class="string">"disabled"</span>,<span class="string">"true"</span>);<span class="comment">//type="radio"的两个input不可以，变成灰色</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(5):checkbox复选框选择器<br>:checkbox选择器可以快速定位并获取表单中的复选框元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>将表单的全部复选框设为不可用<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"Input Button"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Checkbox1"</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"Checkbox1"</span>&gt;</span></span><br><span class="line">        西红柿<span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Checkbox2"</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"Checkbox2"</span>&gt;</span></span><br><span class="line">        茄子<span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Checkbox3"</span> <span class="attribute">type</span>=<span class="value">"checkbox"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">label</span> <span class="attribute">for</span>=<span class="value">"Checkbox3"</span>&gt;</span></span><br><span class="line">        黄瓜<span class="tag">&lt;/<span class="title">label</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span>&gt;</span></span><br><span class="line">        Button<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#frmTest :checkbox"</span>).attr(<span class="string">"disabled"</span>,<span class="string">"true"</span>);<span class="comment">//type="checkbox"的复选框不可用</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(6):submit提交按钮选择器<br>通常情况下，一个表单中只允许有一个“type”属性值为“submit”的提交按钮，使用:submit选择器可获取表单中的这个提交按钮元素。<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.bg_red</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> blue</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value">Orange</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>修改表单中提交按钮的背景色<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"Input Button"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"点我就提交了"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">button</span>&gt;</span></span><br><span class="line">        Button<span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="comment">//$("#frmTest submit").addClass("bg_red");无效</span></span><br><span class="line">        $(<span class="string">"#frmTest input:submit"</span>).addClass(<span class="string">"bg_red"</span>);<span class="comment">//设置type="submit"的input标签(按钮)背景色</span></span><br><span class="line">        $(<span class="string">"#frmTest input:submit"</span>).attr(<span class="string">"value"</span>,<span class="string">"提交"</span>);<span class="comment">//更改显示内容</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(7):image图像域选择器<br>当一个<input>元素的“type”属性值设为“image”时，该元素就是一个图像域，使用:image选择器可以快速获取该类全部元素。<br>使用:image选择器只能获取<input>图像域，而不能获取<img>格式的图像元素。<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.bg_green</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> green</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"><span class="number">159px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">height</span>:<span class="value"><span class="number">42px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">20px</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>修改表单中图像元素的背景色<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"image"</span> <span class="attribute">src</span>=<span class="value">"http://img.mukewang.com/52b284ea00016b2902590070.jpg"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">img</span> <span class="attribute">alt</span>=<span class="value">""</span> <span class="attribute">src</span>=<span class="value">"http://img.mukewang.com/52b284ea00016b2902590070.jpg"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#frmTest :image"</span>).addClass(<span class="string">"bg_green"</span>);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/9.png" alt="image"></p>
<p>(8):button表单按钮选择器<br>表单中包含许多类型的按钮，而使用:button选择器能获取且只能获取“type”属性值为“button”的<input>和<button>这两类普通按钮元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>修改表单中按钮元素的背景色<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Button1"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"我是普通按钮"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"Submit1"</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"点我就提交"</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">button</span>&gt;</span> 我也是普通按钮 <span class="tag">&lt;/<span class="title">button</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#frmTest :button"</span>).addClass(<span class="string">"bg_blue"</span>);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/10.png" alt="image"></p>
<p>(9):checked选中状态选择器<br>有一些元素存在选中状态，如复选框、单选按钮元素，选中时“checked”属性值为“checked”，调用:checked可以获取处于选中状态的全部元素。<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;将处于选中状态的元素设为不可用&lt;/h3&gt;</span><br><span class="line">    &lt;<span class="keyword">form</span> id=<span class="string">"frmTest"</span> action=<span class="string">"#"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> id=<span class="string">"Radio1"</span> <span class="keyword">type</span>=<span class="string">"radio"</span> checked=<span class="string">"checked"</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> id=<span class="string">"Label1"</span> <span class="keyword">for</span>=<span class="string">"Radio1"</span>&gt;</span><br><span class="line">        苹果&lt;/<span class="keyword">label</span>&gt;&lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> id=<span class="string">"Radio2"</span> <span class="keyword">type</span>=<span class="string">"radio"</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> id=<span class="string">"Label2"</span> <span class="keyword">for</span>=<span class="string">"Radio2"</span>&gt;</span><br><span class="line">        桔子&lt;/<span class="keyword">label</span>&gt;&lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> id=<span class="string">"Checkbox1"</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> checked=<span class="string">"checked"</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> id=<span class="string">"Label3"</span> <span class="keyword">for</span>=<span class="string">"Checkbox1"</span>&gt;</span><br><span class="line">        荔枝&lt;/<span class="keyword">label</span>&gt;&lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> id=<span class="string">"Checkbox2"</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> id=<span class="string">"Label4"</span> <span class="keyword">for</span>=<span class="string">"Checkbox2"</span>&gt;</span><br><span class="line">        葡萄&lt;/<span class="keyword">label</span>&gt;&lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> id=<span class="string">"Checkbox3"</span> <span class="keyword">type</span>=<span class="string">"checkbox"</span> checked=<span class="string">"checked"</span> /&gt;</span><br><span class="line">    &lt;<span class="keyword">label</span> id=<span class="string">"Label5"</span> <span class="keyword">for</span>=<span class="string">"Checkbox3"</span>&gt;</span><br><span class="line">        香蕉&lt;/<span class="keyword">label</span>&gt;&lt;<span class="keyword">br</span> /&gt;</span><br><span class="line">    &lt;/<span class="keyword">form</span>&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script <span class="keyword">type</span>=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        $(<span class="string">"#frmTest :checked"</span>).attr(<span class="string">"disabled"</span>, true);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/11.png" alt="image"></p>
<p>(10):selected选中状态选择器<br>与:checked选择器相比，:selected选择器只能获取<select>下拉列表框中全部处于选中状态的<option>选项元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>获取处于选中状态元素的内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">id</span>=<span class="value">"frmTest"</span> <span class="attribute">action</span>=<span class="value">"#"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">select</span> <span class="attribute">id</span>=<span class="value">"Select1"</span> <span class="attribute">multiple</span>=<span class="value">"multiple"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"0"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"1"</span> <span class="attribute">selected</span>=<span class="value">"selected"</span>&gt;</span>桔子<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"2"</span>&gt;</span>荔枝<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"3"</span> <span class="attribute">selected</span>=<span class="value">"selected"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"4"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">select</span>&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span><span class="tag">&lt;<span class="title">br</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="keyword">var</span> $txtOpt = $(<span class="string">"#frmTest :selected"</span>).text();</span><br><span class="line">        $(<span class="string">"#tip"</span>).html(<span class="string">"选中内容为:"</span> + $txtOpt);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/12.png" alt="image"></p>
<h1 id="u7B2C_u4E09_u7AE0__u64CD_u4F5CDOM_u5143_u7D20"><a href="#u7B2C_u4E09_u7AE0__u64CD_u4F5CDOM_u5143_u7D20" class="headerlink" title="第三章 操作DOM元素"></a>第三章 操作DOM元素</h1><h2 id="1-_u4F7F_u7528attr_28_29_u65B9_u6CD5_u63A7_u5236_u5143_u7D20_u7684_u5C5E_u6027"><a href="#1-_u4F7F_u7528attr_28_29_u65B9_u6CD5_u63A7_u5236_u5143_u7D20_u7684_u5C5E_u6027" class="headerlink" title="1.使用attr()方法控制元素的属性"></a>1.使用attr()方法控制元素的属性</h2><p>attr()方法的作用是设置或者返回元素的属性，其中attr(属性名)格式是获取元素属性名的值，attr(属性名，属性值)格式则是设置元素属性名的值。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>attr()方法设置元素属性<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"http://127.0.0.1"</span> <span class="attribute">id</span>=<span class="value">"a1"</span>&gt;</span>点我就变<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>我改变后的地址是：<span class="tag">&lt;<span class="title">span</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#a1"</span>).attr(<span class="string">"href"</span> , <span class="string">"best.com"</span>);<span class="comment">//将href设置成best.com</span></span><br><span class="line">        <span class="keyword">var</span> $url = $(<span class="string">"#a1"</span>).attr(<span class="string">"href"</span>);<span class="comment">//获取id=a1的href属性的值</span></span><br><span class="line">        $(<span class="string">"#tip"</span>).html($url);<span class="comment">//id=tip设置值为$url</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u64CD_u4F5C_u5143_u7D20_u7684_u5185_u5BB9"><a href="#2-_u64CD_u4F5C_u5143_u7D20_u7684_u5185_u5BB9" class="headerlink" title="2.操作元素的内容"></a>2.操作元素的内容</h2><p>使用html()和text()方法操作元素的内容，当两个方法的参数为空时，表示获取该元素的内容，而如果方法中包含参数，则表示将参数值设置为元素内容。<br>html()方法可以获取元素的HTML内容，因此，原文中的格式代码也被一起获取，而text()方法只是获取元素中的文本内容，并不包含HTML格式代码<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>html()和text()方法设置元素内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"html"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"text"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"html_2"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"text_2"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="keyword">var</span> $content = <span class="string">"&lt;b&gt;唉，我又变胖了！&lt;/b&gt;"</span>;</span><br><span class="line">        $(<span class="string">"#html"</span>).html($content);</span><br><span class="line">        $(<span class="string">"#text"</span>).text($content);</span><br><span class="line">        $(<span class="string">"#html_2"</span>).html($(<span class="string">"h3"</span>).html());</span><br><span class="line">        $(<span class="string">"#text_2"</span>).text($(<span class="string">"h3"</span>).text());</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/13.png" alt="image"></p>
<h2 id="3-_u64CD_u4F5C_u5143_u7D20_u7684_u6837_u5F0F"><a href="#3-_u64CD_u4F5C_u5143_u7D20_u7684_u6837_u5F0F" class="headerlink" title="3.操作元素的样式"></a>3.操作元素的样式</h2><p>通过addClass()和css()方法可以方便地操作元素中的样式，前者括号中的参数为增加元素的样式名称，后者直接将样式的属性内容写在括号中。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">title</span>&gt;</span>操作元素样式<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"jquery.js"</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">link</span> <span class="attribute">href</span>=<span class="value">"style.css"</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">style</span> <span class="attribute">type</span>=<span class="value">"text/css"</span>&gt;</span><span class="css">&lt;!<span class="tag">--</span> <span class="tag">blue</span> <span class="tag">--</span>&gt;</span><br><span class="line">            <span class="class">.blue</span></span><br><span class="line">            <span class="rules">&#123;</span><br><span class="line">             <span class="rule"><span class="attribute">background-color</span>:<span class="value">Blue</span></span>;</span><br><span class="line">             <span class="rule"><span class="attribute">color</span>:<span class="value">White</span></span>;</span><br><span class="line">            &#125;</span></span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h3</span>&gt;</span>css()方法设置元素样式<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"content"</span>&gt;</span>我穿了一件红色外衣<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">p</span>&gt;</span>addClass方法<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">            $(<span class="string">"#content"</span>).css(&#123;<span class="string">"background-color"</span>:<span class="string">"#ff0000"</span>,<span class="string">"color"</span>:<span class="string">"White"</span>&#125;);</span><br><span class="line">            $(<span class="string">"p"</span>).addClass(<span class="string">"blue"</span>);</span><br><span class="line">        </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/14.png" alt="image"></p>
<h2 id="4-_u79FB_u9664_u5C5E_u6027_u548C_u6837_u5F0F"><a href="#4-_u79FB_u9664_u5C5E_u6027_u548C_u6837_u5F0F" class="headerlink" title="4.移除属性和样式"></a>4.移除属性和样式</h2><p>使用removeAttr(name)和removeClass(class)分别可以实现移除元素的属性和样式的功能，前者方法中参数表示移除属性名，后者方法中参数则表示移除的样式名。<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">div</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">8px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">180px</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.blue</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> Blue</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.white</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> White</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>removeClass()方法移除元素样式<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"content"</span><span class="value">class="blue</span> <span class="attribute">white</span>"&gt;</span>我脱下了一件蓝色外衣<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"localhost"</span>&gt;</span><span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"div_1"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"div_2"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"#content"</span>).removeClass(<span class="string">"blue white"</span>);</span><br><span class="line">        <span class="keyword">var</span> $var1=$(<span class="string">"a"</span>).attr(<span class="string">"href"</span>);</span><br><span class="line">        $(<span class="string">"#div_1"</span>).html($var1);</span><br><span class="line">        $(<span class="string">"a"</span>).removeAttr(<span class="string">"href"</span>);</span><br><span class="line">        $var1=$(<span class="string">"a"</span>).attr(<span class="string">"href"</span>);</span><br><span class="line">        $(<span class="string">"#div_2"</span>).html($var1);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/15.png" alt="image"></p>
<h2 id="5-_u4F7F_u7528append_28_29_u65B9_u6CD5_u5411_u5143_u7D20_u5185_u8FFD_u52A0_u5185_u5BB9"><a href="#5-_u4F7F_u7528append_28_29_u65B9_u6CD5_u5411_u5143_u7D20_u5185_u8FFD_u52A0_u5185_u5BB9" class="headerlink" title="5.使用append()方法向元素内追加内容"></a>5.使用append()方法向元素内追加内容</h2><p>append(content)方法的功能是向指定的元素中追加内容，被追加的content参数，可以是字符、HTML元素标记，还可以是一个返回字符串内容的函数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>append()方法追加内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>hello <span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">rethtml</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> $html = <span class="string">"&lt;div id='test' title='hi'&gt;我是调用函数创建的&lt;/div&gt;"</span></span><br><span class="line">            <span class="keyword">return</span> $html;</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">"body"</span>).append(rethtml());<span class="comment">//向页面追加div（我是调用函数创建的）</span></span><br><span class="line">        $(<span class="string">"p"</span>).append(<span class="string">"你好"</span>);<span class="comment">//向p标签追加内容</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-_u4F7F_u7528appendTo_28_29_u65B9_u6CD5_u5411_u88AB_u9009_u5143_u7D20_u5185_u63D2_u5165_u5185_u5BB9"><a href="#6-_u4F7F_u7528appendTo_28_29_u65B9_u6CD5_u5411_u88AB_u9009_u5143_u7D20_u5185_u63D2_u5165_u5185_u5BB9" class="headerlink" title="6.使用appendTo()方法向被选元素内插入内容"></a>6.使用appendTo()方法向被选元素内插入内容</h2><p>appendTo()方法也可以向指定的元素内插入内容，它的使用格式是：<br>$(content).appendTo(selector)<br>参数content表示需要插入的内容，参数selector表示被选的元素，即把content内容插入selector元素内，默认是在尾部。<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h3&gt;appendTo()方法插入内容&lt;/h3&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;span class=<span class="string">"green"</span>&gt;小乌龟&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;span class=<span class="string">"blue"</span>&gt;小兔子&lt;/span&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    //注意：class用<span class="string">''</span></span><br><span class="line">        var <span class="variable">$html</span> = <span class="string">"&lt;span class='red'&gt;小青蛙&lt;/span&gt;"</span></span><br><span class="line">        $(<span class="variable">$html</span>).appendTo(<span class="string">"div"</span>);//<span class="variable">$html</span>追加到div</span><br><span class="line">        var <span class="variable">$hh</span>=<span class="string">"&lt;span class='blue'&gt;小小&lt;/span&gt;"</span>;//这是值；添加下面代码只会追加小兔子一行,不会追加这行</span><br><span class="line">       // $(<span class="string">".blue"</span>).appendTo(<span class="string">"div"</span>);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/16.png" alt="image"><br>去掉如下行的注释后<br><figure class="highlight smalltalk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">// <span class="char">$(</span><span class="comment">".blue"</span>).appendTo(<span class="comment">"div"</span>);</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/17.png" alt="image"></p>
<h2 id="7-_u4F7F_u7528before_28_29_u548Cafter_28_29_u5728_u5143_u7D20_u524D_u540E_u63D2_u5165_u5185_u5BB9"><a href="#7-_u4F7F_u7528before_28_29_u548Cafter_28_29_u5728_u5143_u7D20_u524D_u540E_u63D2_u5165_u5185_u5BB9" class="headerlink" title="7.使用before()和after()在元素前后插入内容"></a>7.使用before()和after()在元素前后插入内容</h2><p>使用before()和after()方法可以在元素的前后插入内容，它们分别表示在整个元素的前面和后面插入指定的元素或内容，调用格式分别为：<br>$(selector).before(content)和$(selector).after(content)<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>after()方法在元素之后插入内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>我们交个朋友吧！<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>追加后.green的全部内容:<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="keyword">var</span> $html = <span class="string">"&lt;span class='red'&gt;兄弟。&lt;/span&gt;"</span></span><br><span class="line">        $(<span class="string">".green"</span>).before(<span class="string">"你好啊！"</span>);<span class="comment">//前面加</span></span><br><span class="line">        $(<span class="string">".green"</span>).after($html);<span class="comment">//后面加</span></span><br><span class="line">        $(<span class="string">"div"</span>).html($(<span class="string">".green"</span>).html());<span class="comment">//.green内容没变</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/18.png" alt="image"></p>
<h2 id="8-_u4F7F_u7528clone_28_29_u65B9_u6CD5_u590D_u5236_u5143_u7D20"><a href="#8-_u4F7F_u7528clone_28_29_u65B9_u6CD5_u590D_u5236_u5143_u7D20" class="headerlink" title="8.使用clone()方法复制元素"></a>8.使用clone()方法复制元素</h2><p>调用clone()方法可以生成一个被选元素的副本，即复制了一个被选元素，包含它的节点、文本和属性，它的调用格式为：<br>$(selector).clone()<br>其中参数selector可以是一个元素或HTML内容。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用clone()方法复制元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span> <span class="attribute">title</span>=<span class="value">"hi"</span>&gt;</span>我是美猴王<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"body"</span>).append($(<span class="string">".red"</span>).clone());</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/19.png" alt="image"></p>
<h2 id="9-_u66FF_u6362_u5185_u5BB9"><a href="#9-_u66FF_u6362_u5185_u5BB9" class="headerlink" title="9.替换内容"></a>9.替换内容</h2><p>replaceWith()和replaceAll()方法都可以用于替换元素或元素中的内容。</p>
<hr>
<p>调用时，内容和被替换元素所在的位置不同：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="function"><span class="title">replaceWith</span><span class="params">(content)</span></span>$(<span class="attribute">content</span>).<span class="function"><span class="title">replaceAll</span><span class="params">(selector)</span></span></span><br></pre></td></tr></table></figure></p>
<p>参数selector为被替换的元素，content为替换的内容。<br>使用replaceWith()方法替换之后，旧元素完全由新替换的元素所取代。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用replaceAll()方法替换元素内容<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span> <span class="attribute">title</span>=<span class="value">"hi"</span>&gt;</span>原内容1<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span> <span class="attribute">title</span>=<span class="value">"hi"</span>&gt;</span>原内容2<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>原内容3<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        <span class="keyword">var</span> $html = <span class="string">"&lt;span class='red' title='hi'&gt;替换内容&lt;/span&gt;"</span>; </span><br><span class="line">        $(<span class="string">".green"</span>).replaceWith($html);</span><br><span class="line">        $($html).replaceAll(<span class="string">".red"</span>);</span><br><span class="line">        <span class="comment">//$("nihao").replaceAll($("p"));//不能替换内容</span></span><br><span class="line">        $(<span class="string">"p"</span>).html(<span class="string">"替换标签p的内容"</span>);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/20.png" alt="image"></p>
<h2 id="10-_u4F7F_u7528wrap_28_29_u548CwrapInner_28_29_u65B9_u6CD5_u5305_u88F9_u5143_u7D20_u548C_u5185_u5BB9"><a href="#10-_u4F7F_u7528wrap_28_29_u548CwrapInner_28_29_u65B9_u6CD5_u5305_u88F9_u5143_u7D20_u548C_u5185_u5BB9" class="headerlink" title="10.使用wrap()和wrapInner()方法包裹元素和内容"></a>10.使用wrap()和wrapInner()方法包裹元素和内容</h2><p>wrap()和wrapInner()方法都可以进行元素的包裹，但前者用于包裹元素本身，后者则用于包裹元素中的内容，它们的调用格式分别为：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="function"><span class="title">wrap</span><span class="params">(wrapper)</span></span></span><br><span class="line">$(selector).<span class="function"><span class="title">wrapInner</span><span class="params">(wrapper)</span></span></span><br></pre></td></tr></table></figure></p>
<p>参数selector为被包裹的元素，wrapper参数为包裹元素的格式。<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">span</span></span><br><span class="line"><span class="rules">&#123;<span class="rule"><span class="attribute">color</span>:<span class="value"> White</span></span>;<span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">8px</span></span></span>;&#125;</span></span><br><span class="line"><span class="class">.red</span></span><br><span class="line"><span class="rules">&#123;<span class="rule"><span class="attribute">background-color</span>:<span class="value"> Red</span></span>;&#125;</span></span><br><span class="line"><span class="tag">div</span></span><br><span class="line"><span class="rules">&#123;<span class="rule"><span class="attribute">border</span>:<span class="value"><span class="number">2px</span> solid <span class="hexcolor">#00ff00</span></span></span></span>&#125;</span><br></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用wrapInner()方法包裹元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span> <span class="attribute">title</span>=<span class="value">'hi'</span>&gt;</span>我的身体有点歪<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>我被div包围了<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">".red"</span>).wrapInner(<span class="string">"&lt;i&gt;&lt;/i&gt;"</span>);</span><br><span class="line">        $(<span class="string">"p"</span>).wrap(<span class="string">"&lt;div&gt;&lt;/div&gt;"</span>);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/21.png" alt="image"></p>
<h2 id="11-_u4F7F_u7528each_28_29_u65B9_u6CD5_u904D_u5386_u5143_u7D20"><a href="#11-_u4F7F_u7528each_28_29_u65B9_u6CD5_u904D_u5386_u5143_u7D20" class="headerlink" title="11.使用each()方法遍历元素"></a>11.使用each()方法遍历元素</h2><p>each()方法可以遍历指定的元素集合，在遍历时，通过回调函数返回遍历元素的序列号，调用格式为：<br><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">selector</span>).<span class="keyword">each</span>(<span class="function"><span class="keyword">function</span><span class="params">(<span class="keyword">index</span>)</span>)</span></span><br></pre></td></tr></table></figure></p>
<p>参数function为遍历时的回调函数，index为遍历元素的序列号，它从0开始。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用each()方法遍历元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>桃子<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>荔枝<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="string">"span"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">index</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (index == <span class="number">1</span>) &#123;</span><br><span class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"class"</span>, <span class="string">"red"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/22.png" alt="image"></p>
<h2 id="12-_u4F7F_u7528remove_28_29_u548Cempty_28_29_u65B9_u6CD5_u5220_u9664_u5143_u7D20"><a href="#12-_u4F7F_u7528remove_28_29_u548Cempty_28_29_u65B9_u6CD5_u5220_u9664_u5143_u7D20" class="headerlink" title="12.使用remove()和empty()方法删除元素"></a>12.使用remove()和empty()方法删除元素</h2><p>remove()方法删除所选元素本身和子元素，该方法可以通过添加过滤参数指定需要删除的某些元素，而empty()方法则只删除所选元素的子元素。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用empty()方法删除元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span>&gt;</span>桃子<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"green"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"red"</span>&gt;</span>荔枝<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>p1<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>p2<span class="tag">&lt;/<span class="title">div</span>&gt;</span>        </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    $(<span class="string">"span"</span>).remove(<span class="string">".red"</span>);</span><br><span class="line">    $(<span class="string">"div"</span>).empty();</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>移除前：<br><img src="/img/jquery/23.png" alt="image"><br>移除后：<br><img src="/img/jquery/24.png" alt="image"></p>
<h1 id="u7B2C_u56DB_u7AE0_jQuery_u4E8B_u4EF6"><a href="#u7B2C_u56DB_u7AE0_jQuery_u4E8B_u4EF6" class="headerlink" title="第四章 jQuery事件"></a>第四章 jQuery事件</h1><h2 id="1-_u9875_u9762_u52A0_u8F7D_u65F6_u89E6_u53D1ready_28_29_u4E8B_u4EF6"><a href="#1-_u9875_u9762_u52A0_u8F7D_u65F6_u89E6_u53D1ready_28_29_u4E8B_u4EF6" class="headerlink" title="1.页面加载时触发ready()事件"></a>1.页面加载时触发ready()事件</h2><p>ready()事件类似于onLoad()事件，但前者只要页面的DOM结构加载后便触发，而后者必须在页面全部元素加载成功才触发，ready()可以写多个，按顺序执行。此外，下列写法是相等的：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;)等价于$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;&#125;);</span><br></pre></td></tr></table></figure></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>页面载入时触发ready()事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"tip"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"点下我"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"div2"</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span>     </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $(<span class="string">"#btntest"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#tip"</span>).html(<span class="string">"我被点击了！"</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $(<span class="string">"#div2"</span>).html(<span class="string">"我被加载了"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>运行：<br><img src="/img/jquery/25.png" alt="image"><br>点击按钮后：<br><img src="/img/jquery/26.png" alt="image"></p>
<h2 id="2-_u4F7F_u7528bind_28_29_u65B9_u6CD5_u7ED1_u5B9A_u5143_u7D20_u7684_u4E8B_u4EF6"><a href="#2-_u4F7F_u7528bind_28_29_u65B9_u6CD5_u7ED1_u5B9A_u5143_u7D20_u7684_u4E8B_u4EF6" class="headerlink" title="2.使用bind()方法绑定元素的事件"></a>2.使用bind()方法绑定元素的事件</h2><p>bind()方法绑定元素的事件非常方便，绑定前，需要知道被绑定的元素名，绑定的事件名称，事件中执行的函数内容就可以，它的绑定格式如下：<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="keyword">bind</span>(event,[<span class="type">data</span>] <span class="function"><span class="keyword">function</span></span>)</span><br></pre></td></tr></table></figure></p>
<p>参数event为事件名称，多个事件名称用空格隔开，function为事件执行的函数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>bind()方法绑多个事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"点击或移出就不可用了"</span> /&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"#btntest"</span>).bind(<span class="string">"click mouseout"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//点击或者鼠标移出按钮就不可用</span></span><br><span class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u4F7F_u7528hover_28_29_u65B9_u6CD5_u5207_u6362_u4E8B_u4EF6"><a href="#3-_u4F7F_u7528hover_28_29_u65B9_u6CD5_u5207_u6362_u4E8B_u4EF6" class="headerlink" title="3.使用hover()方法切换事件"></a>3.使用hover()方法切换事件</h2><p>hover()方法的功能是当鼠标移到所选元素上时，执行方法中的第一个函数，鼠标移出时，执行方法中的第二个函数，实现事件的切实效果，调用格式如下：<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(</span>selector).hover(over，<span class="keyword">out</span>);</span><br></pre></td></tr></table></figure></p>
<p>over参数为移到所选元素上触发的函数，out参数为移出元素时触发的函数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>hover()方法切换事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>鼠标移入时为橘红色，否则没有颜色<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"div"</span>).hover(</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).addClass(<span class="string">"orange"</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).removeClass(<span class="string">"orange"</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="4-_u4F7F_u7528toggle_28_29_u65B9_u6CD5_u7ED1_u5B9A_u591A_u4E2A_u51FD_u6570"><a href="#4-_u4F7F_u7528toggle_28_29_u65B9_u6CD5_u7ED1_u5B9A_u591A_u4E2A_u51FD_u6570" class="headerlink" title="4.使用toggle()方法绑定多个函数"></a>4.使用toggle()方法绑定多个函数</h2><p>toggle()方法可以在元素的click事件中绑定两个或两个以上的函数，同时，它还可以实现元素的隐藏与显示的切换，绑定多个函数的调用格式如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="function"><span class="title">toggle</span><span class="params">(fun1()</span></span>,<span class="function"><span class="title">fun2</span><span class="params">()</span></span>,<span class="function"><span class="title">funN</span><span class="params">()</span></span>,...)</span><br></pre></td></tr></table></figure></p>
<p>其中，fun1，fun2就是多个函数的名称<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>toggle()方法绑定多个函数<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"点一下我"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"div1"</span>&gt;</span>我是动态显示的<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">id</span>=<span class="value">"div2"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//点击按钮id=div1显示或者隐藏</span></span><br><span class="line">            $(<span class="string">"#btntest"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"#div1"</span>).toggle();<span class="comment">//等价show() hide()</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//点击id=div2时顺序切换苹果，香蕉，葡萄</span></span><br><span class="line">           $(<span class="string">"#div2"</span>).toggle(</span><br><span class="line">               <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 $(<span class="keyword">this</span>).html(<span class="string">"香蕉"</span>);</span><br><span class="line">                 &#125;,</span><br><span class="line">               <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                 $(<span class="keyword">this</span>).html(<span class="string">"葡萄"</span>);</span><br><span class="line">                 &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>运行<br><img src="/img/jquery/27.png" alt="image"><br>点击按钮“我是动态显示的”隐藏或者显示切换，点击div2苹果，香蕉，葡萄循环切换<br><img src="/img/jquery/28.png" alt="image"></p>
<h2 id="5-_u4F7F_u7528unbind_28_29_u65B9_u6CD5_u79FB_u9664_u5143_u7D20_u7ED1_u5B9A_u7684_u4E8B_u4EF6"><a href="#5-_u4F7F_u7528unbind_28_29_u65B9_u6CD5_u79FB_u9664_u5143_u7D20_u7ED1_u5B9A_u7684_u4E8B_u4EF6" class="headerlink" title="5.使用unbind()方法移除元素绑定的事件"></a>5.使用unbind()方法移除元素绑定的事件</h2><p>unbind()方法可以移除元素已绑定的事件，它的调用格式如下：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).unbind(event,<span class="function"><span class="keyword">fun</span>)</span></span><br></pre></td></tr></table></figure></p>
<p>其中参数event表示需要移除的事件名称，多个事件名用空格隔开，fun参数为事件执行时调用的函数名称。<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">div</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">160px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> solid <span class="number">1px</span> <span class="hexcolor">#ccc</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">8px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.color</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> Orange</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.backcolor</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> Orange</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> White</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>unbind()移除绑定的事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"btntest"</span> <span class="attribute">type</span>=<span class="value">"button"</span> <span class="attribute">value</span>=<span class="value">"移除事件"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>点击和双击效果不同哦<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">////单击div时文字变橘色</span></span><br><span class="line">            $(<span class="string">"div"</span>).bind(<span class="string">"click"</span>,</span><br><span class="line">            <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).removeClass(<span class="string">"backcolor"</span>).addClass(<span class="string">"color"</span>);</span><br><span class="line">                <span class="comment">//双击div时背景变橘色</span></span><br><span class="line">            &#125;).bind(<span class="string">"dblclick"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).removeClass(<span class="string">"color"</span>).addClass(<span class="string">"backcolor"</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="comment">//点击按钮移除div使用事件</span></span><br><span class="line">            $(<span class="string">"#btntest"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="string">"div"</span>).unbind();<span class="comment">//使用unbind()方法移除已绑定的全部事件。</span></span><br><span class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);<span class="comment">//按钮（点击后）设置为不可用 此时div保持最近设置的状态</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>备注:$(“div”).unbind(“click”);//只是移除点击事件</p>
<h2 id="6-_u4F7F_u7528one_28_29_u65B9_u6CD5_u7ED1_u5B9A_u5143_u7D20_u7684_u4E00_u6B21_u6027_u4E8B_u4EF6"><a href="#6-_u4F7F_u7528one_28_29_u65B9_u6CD5_u7ED1_u5B9A_u5143_u7D20_u7684_u4E00_u6B21_u6027_u4E8B_u4EF6" class="headerlink" title="6.使用one()方法绑定元素的一次性事件"></a>6.使用one()方法绑定元素的一次性事件</h2><p>one()方法可以绑定元素任何有效的事件，但这种方法绑定的事件只会触发一次，它的调用格式如下：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).one(event,[data],<span class="function"><span class="keyword">fun</span>)</span></span><br></pre></td></tr></table></figure></p>
<p>参数event为事件名称，data为触发事件时携带的数据，fun为触发该事件时执行的函数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>one()方法执行一次绑定事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>请点击我一下<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>div被点击了0次<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> intI = <span class="number">0</span>;</span><br><span class="line">            $(<span class="string">"div"</span>).one(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                intI++;</span><br><span class="line">                $(<span class="keyword">this</span>).css(<span class="string">"font-size"</span>, intI + <span class="string">"px"</span>);<span class="comment">//div中字体调整</span></span><br><span class="line">                $(<span class="string">"p"</span>).html(<span class="string">"div被点击了"</span>+intI+<span class="string">"次"</span>);<span class="comment">//点击一次后显示1次，之后点击再也没有反应</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="7-_u8C03_u7528trigger_28_29_u65B9_u6CD5_u624B_u52A8_u89E6_u53D1_u6307_u5B9A_u7684_u4E8B_u4EF6"><a href="#7-_u8C03_u7528trigger_28_29_u65B9_u6CD5_u624B_u52A8_u89E6_u53D1_u6307_u5B9A_u7684_u4E8B_u4EF6" class="headerlink" title="7.调用trigger()方法手动触发指定的事件"></a>7.调用trigger()方法手动触发指定的事件</h2><p>trigger()方法可以直接手动触发元素指定的事件，这些事件可以是元素自带事件，也可以是自定义的事件，该事件必须能执行，调用格式为：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="function"><span class="title">trigger</span><span class="params">(event)</span></span></span><br></pre></td></tr></table></figure></p>
<p>其中event参数为需要手动触发的事件名称。<br>style.css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">div</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">160px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> solid <span class="number">1px</span> <span class="hexcolor">#ccc</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">8px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.color</span></span><br><span class="line"><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">color</span>:<span class="value"> Orange</span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>html<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>trigger()手动触发事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">"请输入姓名"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span>我一开始就是橘色<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="comment">//指定输入框默认为选中状态(select事件)</span></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           $(<span class="string">"input"</span>).trigger(<span class="string">"select"</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            </span><br><span class="line">    <span class="comment">//自定义事件</span></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//指定change-color事件与其函数</span></span><br><span class="line">            $(<span class="string">"div"</span>).bind(<span class="string">"change-color"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).addClass(<span class="string">"color"</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="comment">//调用自定义的change-color函数</span></span><br><span class="line">            $(<span class="string">"div"</span>).trigger(<span class="string">"change-color"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/29.png" alt="image"></p>
<h2 id="8-_u6587_u672C_u6846_u7684focus_u548Cblur_u4E8B_u4EF6"><a href="#8-_u6587_u672C_u6846_u7684focus_u548Cblur_u4E8B_u4EF6" class="headerlink" title="8.文本框的focus和blur事件"></a>8.文本框的focus和blur事件</h2><p>focus事件在元素获取焦点时触发，如点击文本框时，触发该事件；而blur事件则在元素丢失焦点时触发，如点击除文本框的任何元素，都会触发该事件。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>表单中文本框的focus和blur事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"txtest"</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">value</span>=<span class="value">""</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"input"</span>)</span><br><span class="line">            .bind(<span class="string">"focus"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//点击框时</span></span><br><span class="line">                $(<span class="string">"div"</span>).html(<span class="string">"请输入您的姓名！"</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            .bind(<span class="string">"blur"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//移出框点击其他地方</span></span><br><span class="line">                <span class="keyword">if</span> ($(<span class="keyword">this</span>).val().length == <span class="number">0</span>)</span><br><span class="line">                    $(<span class="string">"div"</span>).html(<span class="string">"你的名称不能为空！"</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/30.png" alt="image"></p>
<h2 id="9-_u4E0B_u62C9_u5217_u8868_u6846_u7684change_u4E8B_u4EF6"><a href="#9-_u4E0B_u62C9_u5217_u8868_u6846_u7684change_u4E8B_u4EF6" class="headerlink" title="9.下拉列表框的change事件"></a>9.下拉列表框的change事件</h2><p>当一个元素的值发生变化时，将会触发change事件，例如在选择下拉列表框中的选项时，就会触change事件。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>下拉列表的change事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">select</span> <span class="attribute">id</span>=<span class="value">"seltest"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"葡萄"</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"苹果"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"荔枝"</span>&gt;</span>荔枝<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"香焦"</span>&gt;</span>香焦<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">select</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"#seltest"</span>).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//选中苹果时背景色红色，否则绿色</span></span><br><span class="line">                <span class="keyword">if</span> ($(<span class="keyword">this</span>).val() == <span class="string">"苹果"</span>)</span><br><span class="line">                    $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>, <span class="string">"red"</span>);</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    $(<span class="keyword">this</span>).css(<span class="string">"background-color"</span>, <span class="string">"green"</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/jquery/31.png" alt="image"></p>
<h2 id="10-_u8C03_u7528live_28_29_u65B9_u6CD5_u7ED1_u5B9A_u5143_u7D20_u7684_u4E8B_u4EF6"><a href="#10-_u8C03_u7528live_28_29_u65B9_u6CD5_u7ED1_u5B9A_u5143_u7D20_u7684_u4E8B_u4EF6" class="headerlink" title="10.调用live()方法绑定元素的事件"></a>10.调用live()方法绑定元素的事件</h2><p>与bind()方法相同，live()方法与可以绑定元素的可执行事件，除此相同功能外，live()方法还可以绑定动态元素，即使用代码添加的元素事件，格式如下：<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(selector).live(event,[data],<span class="function"><span class="keyword">fun</span>)</span></span><br></pre></td></tr></table></figure></p>
<p>参数event为事件名称，data为触发事件时携带的数据，fun为触发该事件时执行的函数。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>live()方法绑多个事件<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">   <span class="comment">// 使用live()方法绑定，页面中按钮元素的单击事件，而这个按钮是通过追加的方式添加至页面的。</span></span><br><span class="line">   <span class="comment">//点击或移出按钮，按钮就变灰色不可用</span></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"#btntest"</span>).live(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//点击事件</span></span><br><span class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">"#btntest"</span>).live(<span class="string">"mouseout"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;<span class="comment">//移出事件</span></span><br><span class="line">                $(<span class="keyword">this</span>).attr(<span class="string">"disabled"</span>, <span class="string">"true"</span>);</span><br><span class="line">            &#125;)</span><br><span class="line">            $(<span class="string">"body"</span>).append(<span class="string">"&lt;input id='btntest' type='button' value='点击或移出就不可用了' /&gt;"</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>备注:以上代码可以简化为$(“#btntest”).live(“click mouseout”, function () {}…</p>
<h1 id="u7B2C_u4E94_u7AE0_jQuery__u52A8_u753B_u7279_u6548"><a href="#u7B2C_u4E94_u7AE0_jQuery__u52A8_u753B_u7279_u6548" class="headerlink" title="第五章  jQuery 动画特效"></a>第五章  jQuery 动画特效</h1><h2 id="1-_u8C03_u7528show_28_29_u548Chide_28_29_u65B9_u6CD5_u663E_u793A_u548C_u9690_u85CF_u5143_u7D20"><a href="#1-_u8C03_u7528show_28_29_u548Chide_28_29_u65B9_u6CD5_u663E_u793A_u548C_u9690_u85CF_u5143_u7D20" class="headerlink" title="1.调用show()和hide()方法显示和隐藏元素"></a>1.调用show()和hide()方法显示和隐藏元素</h2><p>show()和hide()方法用于显示或隐藏页面中的元素，调用格式分别为：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(selector).<span class="function"><span class="title">hide</span><span class="params">(speed,[callback])</span></span></span><br><span class="line">$(selector).<span class="function"><span class="title">show</span><span class="params">(speed,[callback])</span></span></span><br></pre></td></tr></table></figure></p>
<p>参数speed设置隐藏或显示时的速度值，可为“slow”、“fast”或毫秒数值，可选项参数callback为隐藏或显示动作执行完成后调用的函数名。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>使用show()和hide()方法显示和隐藏元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h4</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">//通过点击h4实现ul表的隐藏与显示</span></span><br><span class="line">            $(<span class="string">"h4"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> ($(<span class="string">"#hidval"</span>).val() == <span class="number">0</span>) &#123;</span><br><span class="line">                    $(<span class="string">"ul"</span>).show();</span><br><span class="line">                    $(<span class="string">"#hidval"</span>).val(<span class="number">1</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    $(<span class="string">"ul"</span>).hide();</span><br><span class="line">                    $(<span class="string">"#hidval"</span>).val(<span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="2-show_28_29_u548Chide_28_29_u65B9_u6CD5_u7684_u52A8_u753B_u6548_u679C"><a href="#2-show_28_29_u548Chide_28_29_u65B9_u6CD5_u7684_u52A8_u753B_u6548_u679C" class="headerlink" title="2.show()和hide()方法的动画效果"></a>2.show()和hide()方法的动画效果</h2><p>show()和hide()增加“speed”参数可以实现动画效果的显示与隐藏，同时，如果添加了方法的回调函数，它将在显示或隐藏执行成功后被调用。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">h3</span>&gt;</span>show()和hide()方法动画方式显示和隐藏元素<span class="tag">&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">h4</span>&gt;</span>我喜欢吃的水果<span class="tag">&lt;/<span class="title">h4</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span>&gt;</span>苹果<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span>&gt;</span>甘桔<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">li</span>&gt;</span>梨<span class="tag">&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">input</span> <span class="attribute">id</span>=<span class="value">"hidval"</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">"0"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">        $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">"h4"</span>).bind(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> ($(<span class="string">"#hidval"</span>).val() == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//缓慢的展开ul列表</span></span><br><span class="line">                    $(<span class="string">"ul"</span>).show(<span class="number">1500</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="comment">//1500（ms）也可以用"slow"</span></span><br><span class="line">                        $(<span class="string">"#hidval"</span>).val(<span class="number">1</span>);</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//快速地收起ul表</span></span><br><span class="line">                    $(<span class="string">"ul"</span>).hide(<span class="string">"fast"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                        $(<span class="string">"#hidval"</span>).val(<span class="number">0</span>);</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;);</span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u8C03_u7528toggle_28_29_u65B9_u6CD5_u5B9E_u73B0_u52A8_u753B_u5207_u6362_u6548_u679C"><a href="#3-_u8C03_u7528toggle_28_29_u65B9_u6CD5_u5B9E_u73B0_u52A8_u753B_u5207_u6362_u6548_u679C" class="headerlink" title="3.调用toggle()方法实现动画切换效果"></a>3.调用toggle()方法实现动画切换效果</h2><h1 id="u6CE8_u610F_u4E8B_u9879_uFF1A"><a href="#u6CE8_u610F_u4E8B_u9879_uFF1A" class="headerlink" title="注意事项："></a>注意事项：</h1><p>1.平台上输入$($)代码时，一些用户的浏览器会造成崩溃，所以您做这个练习时可使用粘贴的方式，不要直接输入。</p>
</script></p>]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：<br>说明：本教程使用webstorm和jquery-1.9.1<br>]]>
    
    </summary>
    
      <category term="jQuery" scheme="http://www.bestzhangjin.com/tags/jQuery/"/>
    
      <category term="jQuery" scheme="http://www.bestzhangjin.com/categories/jQuery/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[webstorm应用与常见问题]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/30/webstorm/"/>
    <id>http://www.bestzhangjin.com/2016/03/30/webstorm/</id>
    <published>2016-03-30T01:30:00.000Z</published>
    <updated>2016-03-30T02:22:49.475Z</updated>
    <content type="html"><![CDATA[<p>主要内容：<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u5E38_u89C1_u95EE_u9898"><a href="#u7B2C_u4E00_u7AE0__u5E38_u89C1_u95EE_u9898" class="headerlink" title="第一章 常见问题"></a>第一章 常见问题</h1><h2 id="1-_u6253_u5F00_u7F51_u9875_u4E2D_u6587_u4E71_u7801"><a href="#1-_u6253_u5F00_u7F51_u9875_u4E2D_u6587_u4E71_u7801" class="headerlink" title="1.打开网页中文乱码"></a>1.打开网页中文乱码</h2><p>方法1：<br>你页面里面</p>
<p><meta charset="utf-8"><br>方法2：<br>file —–&gt;  settings 搜索encoding<br>在fileencoding下，将IDE Encoding，Project Encoding和下面的Default Encoding for properties file都更改为utf-8。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：<br>]]>
    
    </summary>
    
      <category term="webstorm" scheme="http://www.bestzhangjin.com/tags/webstorm/"/>
    
      <category term="webstorm" scheme="http://www.bestzhangjin.com/categories/webstorm/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android开发]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/24/android/"/>
    <id>http://www.bestzhangjin.com/2016/03/24/android/</id>
    <published>2016-03-24T11:42:20.000Z</published>
    <updated>2016-03-26T03:31:49.200Z</updated>
    <content type="html"><![CDATA[<p>主要内容：<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u73AF_u5883_u642D_u5EFA"><a href="#u7B2C_u4E00_u7AE0__u73AF_u5883_u642D_u5EFA" class="headerlink" title="第一章 环境搭建"></a>第一章 环境搭建</h1><p>Windows10+jdk8+android studio<br>android studio下载<a href="http://www.android-studio.org/" target="_blank" rel="external">http://www.android-studio.org/</a></p>
<h1 id="u7B2C_u4E8C_u7AE0_Android_u57FA_u7840_u77E5_u8BC6"><a href="#u7B2C_u4E8C_u7AE0_Android_u57FA_u7840_u77E5_u8BC6" class="headerlink" title="第二章 Android基础知识"></a>第二章 Android基础知识</h1><h2 id="1-_u4ECB_u7ECD"><a href="#1-_u4ECB_u7ECD" class="headerlink" title="1.介绍"></a>1.介绍</h2><p>本阶段包含Android理论知识，是Android应用开发的根基，要想以后有更长足的提高，这部分的知识需要耐心学习实践,在这里你将渐渐熟悉Android的方方面面目录结构：<br><img src="/img/android/1.png" alt="image"><br>Manifests：配置目录AndroidManifest.xml默认内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0"encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line"><span class="attribute">package</span>=<span class="value">"com.example.administrator.helloworld"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">application</span></span><br><span class="line"><span class="attribute">android:allowBackup</span>=<span class="value">"true"</span>//是否允许备份应用的数据，默认是<span class="attribute">true</span>,当备份数据的时候，它的数据会被备份下来。如果设为<span class="attribute">false</span>，那么绝对不会备份应用的数据，即使是备份整个系统。</span><br><span class="line"><span class="attribute">android:icon</span>=<span class="value">"@mipmap/ic_launcher"</span>//应用程序图标</span><br><span class="line"><span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span>	//应用程序名字</span><br><span class="line"><span class="attribute">android:theme</span>=<span class="value">"@style/AppTheme"</span>&gt;</span><span class="comment">&lt;!--声明作为程序入口的Activity--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line"><span class="attribute">android:name</span>=<span class="value">".MainActivity"</span>//<span class="attribute">Activity</span>用来与用户交互的主要工具，是用户打开程序的初始界面<span class="attribute">.</span>此处为引用程序默认启动的<span class="attribute">Activity</span></span><br><span class="line"><span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span>//IntentFilter类表示Intent过滤器,大部分情况下,每一个component都会定义一个或多个IntentFilter,用于表明其可处理的Intent(Intent用于启动Activity,Service,以及BroadcastReceiver三种组件,同时还是组件之间通信的重要媒介。)。定义的方法:在<span class="tag">&lt;<span class="title">activity</span>&gt;</span>,<span class="tag">&lt;<span class="title">receiver</span>&gt;</span>,<span class="tag">&lt;<span class="title">service</span>&gt;</span>元素中增加一个或多个<span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span>子元素//android.intent.action.MAIN决定一个应用程序最先启动那个组 件,android.intent.category.LAUNCHER决定应用程序是否显示在程序列表里(说白了就是是否在桌面上显示一个图标)</span><br><span class="line">这两个属性组合情况：</span><br><span class="line">第一种情况：有MAIN,无LAUNCHER，程序列表中无图标</span><br><span class="line">原因：android.intent.category.LAUNCHER决定应用程序是否显示在程序列表里 </span><br><span class="line">第二种情况：无MAIN,有LAUNCHER，程序列表中无图标</span><br><span class="line">原因：android.intent.action.MAIN决定应用程序最先启动的Activity，如果没有Main，则不知启动哪个Activity，故也不会有图标出现</span><br><span class="line">所以这两个属性一般成对出现。</span><br><span class="line">如果一个应用中有两个组件intent-filter都添加了android.intent.action.MAIN和</span><br><span class="line">android.intent.category.LAUNCHER这两个属性， 则这个应用将会显示两个图标， 写在前面的组件先运行。</span><br><span class="line"><span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span>/&gt;</span>//"android.intent.action.MAIN"这个action的filter都能通过action测试</span><br><span class="line"><span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span>/&gt;</span>//如果一个intent没有定义category,则所有filter都可以通过category测试</span><br><span class="line"><span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Res：资源文件夹<br>Layout：布局 menu：菜单 mipmap：图片 values：dimens尺寸 strings字符串 styles样式</p>
<h2 id="2-Activity_u7EC4_u4EF6"><a href="#2-Activity_u7EC4_u4EF6" class="headerlink" title="2.Activity组件"></a>2.Activity组件</h2><p>Activity是Android四大基本组件之一，可以通过setContentView方法绑定一个布局用于呈现界面与用户进行交互，是Android开发必不可少的学习内容<br>核心内容：1.认识Activity 2.Activity绑定视图3.启动Activity软件环境：Android Studio<br>(1)认识ActivityActivity就是界面字符串引用规范(string.xml)<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">android:label=<span class="string">"@string/app_name"</span>Strings.xml:&lt;resources&gt;</span><br><span class="line">&lt;<span class="type">string</span> <span class="property">name</span>=<span class="string">"app_name"</span>&gt;HelloWorld&lt;/<span class="type">string</span>&gt;</span><br><span class="line">&lt;<span class="type">string</span> <span class="property">name</span>=<span class="string">"hello_world"</span>&gt;Hello world!&lt;/<span class="type">string</span>&gt;</span><br><span class="line">&lt;<span class="type">string</span> <span class="property">name</span>=<span class="string">"action_settings"</span>&gt;Settings&lt;/<span class="type">string</span>&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure></p>
<p>java下的mainactivity：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);<span class="comment">//指定一个视图用来呈现视图，去掉则运行时没有界面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>R.java：自动生成</p>
<p>(2)Activity绑定视图<br>修改activity绑定的布局：点击Layout右键单击-&gt;new-&gt;layout resource fille<br><img src="/img/android/2.png" alt="image"><br>生成的mylayout.xml内容如下：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0"encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line"><span class="attribute">android:orientation</span>=<span class="value">"vertical"</span>//<span class="attribute">vertical:</span>垂直布局，如往里面拉按钮将垂直排布</span><br><span class="line"></span><br><span class="line"><span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line"><span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>java下的mainactivity<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">setContentView(R.layout.activity_main);<span class="comment">//指定一个视图用来呈现视图，去掉则运行时没有界面,将setContentView(R.layout.activity_main);改为setContentView(R.layout.mylayout);就完成了</span></span><br></pre></td></tr></table></figure></p>
<p>(3)启动Activity<br>本课讲解如何创建一个 Activity，如何在 Manifest 文件中对Activity进行配置，以及如何使用 startActivity 函数启动一个 Activity。<br>java目录下mainactivity如下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.mylayout);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>res目录的layout下的mylayout.xml：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line">//此处是一个按钮</span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"启动另外一个Ativity"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnStartAnotherAty"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>主程序mainactivity下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.mylayout);</span><br><span class="line">    findViewById(R.id.btnStartAnotherAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>创建一个新的activity<br>注意：在java目录下也可以<br><img src="/img/android/3.png" alt="image"><br>新建的activity让其.xml输出如下<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView <span class="string">android:</span>text=<span class="string">"这是另外一个activity"</span> <span class="string">android:</span>layout_width=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">    android:</span>layout_height=<span class="string">"wrap_content"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main中点击事件修改如下：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,AnotherAty.<span class="keyword">class</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如此可以运行：<br>点击按钮-&gt;进入另外一个界面，按返回键回到按钮界面<br>改成如下可以跳转到网页<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line"><span class="comment">// startActivity(new Intent(MainActivity.this,AnotherAty.class));</span></span><br><span class="line">     startActivity(<span class="keyword">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(<span class="string">"http://jikexueyuan.com"</span>)));</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u8BA4_u8BC6_Activity__u7684_u751F_u547D_u5468_u671F"><a href="#2-_u8BA4_u8BC6_Activity__u7684_u751F_u547D_u5468_u671F" class="headerlink" title="2.认识 Activity 的生命周期"></a>2.认识 Activity 的生命周期</h2><p>核心内容：查看帮助文档;Activity生命周期<br>(1)查看帮助文档<br>帮助文档：<br>如下选中Documentation for Android SDK进行下载<br><img src="/img/android/4.png" alt="image"><br>之后有以下文件，打开就可以<br>F:/Android/sdk/docs/develop/index.html<br>之后点击develop-&gt;reference   点击See all API packages. 搜索activity如下，随便点击一个，因为都是继承来自activity的<br><img src="/img/android/5.png" alt="image"><br><img src="/img/android/6.png" alt="image"><br>选中android.app.Activity下拉如下：activity的生命周期图<br><img src="/img/android/7.png" alt="image"><br>如何看开发文档(是一本书)<br>点击develop下的API Guides从上往下看，整个能够看完就会是一个安卓高手<br><img src="/img/android/8.png" alt="image"></p>
<p>(2)认识 Activity 的生命周期<br>在mainactivity中添加如下代码：<br>和帮助文档一样—–7个函数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        System.out.print(<span class="string">"onCreate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        System.out.print(<span class="string">"onResume"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        System.out.print(<span class="string">"onPause"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        System.out.print(<span class="string">"onStop"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        System.out.print(<span class="string">"onDestroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRestart();</span><br><span class="line">        System.out.print(<span class="string">"onRestart"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        System.out.print(<span class="string">"onStart"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>启动后效果如下：<br><img src="/img/android/9.png" alt="image"><br>Activity打开<br><img src="/img/android/10.png" alt="image"><br>启动模拟器之后执行oncreate onstart onresume 之后进入activity界面<br>按下home键进入桌面（activity界面消失）执行的是onpause onstop<br>点击最右边个键（呈现最近应用列表）：重新呈现activity界面，执行的函数是onrestart onstart onresume进入界面<br>按下后退键，界面消失，执行的是onpause,onstop,ondestory<br>点击最右边个键（呈现最近应用列表）：重新呈现activity界面，执行的函数是oncrate  onstart onresume进入界面,这是一个全新的生命周期<br><img src="/img/android/11.png" alt="image"></p>
<p>(3)在 Activity 跳转过程中的生命周期<br>新建一个activity，mainactivity（A）和anotherAty（B）<br>A代码如下：<br>Activity_main:添加按钮<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"启动B Activity"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btn_B_StartAnotherAty"</span></span><br><span class="line">    android:layout_alignParentTop=<span class="string">"true"</span></span><br><span class="line">    android:layout_alignParentStart=<span class="string">"true"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        findViewById(R.id.btnStartAnotherAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,AnotherAty.class));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        System.out.print(<span class="string">"A onCreate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        System.out.print(<span class="string">"A onResume"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        System.out.print(<span class="string">"A onPause"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        System.out.print(<span class="string">"A onStop"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        System.out.print(<span class="string">"A onDestroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRestart();</span><br><span class="line">        System.out.print(<span class="string">"A onRestart"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        System.out.print(<span class="string">"A onStart"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>B.java:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherAty</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_another_aty);</span><br><span class="line">        System.out.print(<span class="string">"B onCreate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onResume</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onResume();</span><br><span class="line">        System.out.print(<span class="string">"B onResume"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onPause</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onPause();</span><br><span class="line">        System.out.print(<span class="string">"B onPause"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        System.out.print(<span class="string">"B onStop"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        System.out.print(<span class="string">"B onDestroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onRestart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onRestart();</span><br><span class="line">        System.out.print(<span class="string">"B onRestart"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStart();</span><br><span class="line">        System.out.print(<span class="string">"B onStart"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>运行程序：<br>执行A onCreate , A onStart ,A onResume, A界面显示<br>点击A按钮，依次执行A onPouse,B onCreate,B onstart,B resume,A stop，显示B界面<br>此时用的B是不透明的，完全遮住了A，如果B透明，不完全遮住A呢？<br>在AndroidMainfest.xml下设置B，使他为一个对话框<br>代码如下：（我自己添加的有问题—应该是差什么包）<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">android:</span>theme=<span class="string">"@style/Base.Theme.AppCompat.Dialog"</span></span><br></pre></td></tr></table></figure></p>
<p>极客学院如下：<br><img src="/img/android/12.png" alt="image"><br>此时执行A onPouse, B onCreate,B onstart,B onResume,此时B明A暗<br>在B外的其他空白处点击一下，B关闭，执行B onPause,.A onResume,B onStop,B onDestory.A显示</p>
<h2 id="3-_u5728_Activity__u4E4B_u95F4_u4F20_u9012_u53C2_u6570"><a href="#3-_u5728_Activity__u4E4B_u95F4_u4F20_u9012_u53C2_u6570" class="headerlink" title="3.在 Activity 之间传递参数"></a>3.在 Activity 之间传递参数</h2><p>核心内容：在 Activity 之间传递简单数据;在 Activity 之间传递复杂数据;在 Activity 之间传递自定义值对象<br>(1)传递简单数据<br>设置activity_another_aty.xml如下：<br>设置输出框id=tv<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView <span class="string">android:</span>text=<span class="string">"这是另外一个activity"</span> <span class="string">android:</span>layout_width=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">    android:</span>layout_height=<span class="string">"wrap_content"</span> <span class="string">android:</span>id=<span class="string">"@+id/tv"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<p>Activity_main.xml下加按钮<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"启动另一个Activity"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btn_B_StartAnotherAty"</span></span><br><span class="line">    android:layout_alignParentTop=<span class="string">"true"</span></span><br><span class="line">    android:layout_alignParentStart=<span class="string">"true"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>设置mainactivity.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    findViewById(R.id.btn_B_StartAnotherAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, AnotherAty.class);</span><br><span class="line">            i.putExtra(<span class="string">"data"</span>,<span class="string">"hello,me"</span>);<span class="comment">//传参数</span></span><br><span class="line">            startActivity(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>anotheraty.java中获取：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">AnotherAty</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">TextView</span> tv;<span class="comment">//访问已经写好的Textview---输出框</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_another_aty);</span><br><span class="line"></span><br><span class="line">        <span class="type">Intent</span> i = getIntent();</span><br><span class="line">        tv = (<span class="type">TextView</span>) findViewById(<span class="type">R</span>.id.tv);<span class="comment">//findViewById返回为view类型，需要强转</span></span><br><span class="line">        tv.setText(i.getStringExtra(<span class="string">"data"</span>));        <span class="comment">//为输出框设置字符串(getStringExtra("data")-获取到一个字符串的数据,名字是data)</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>如上运行之后点击按钮就可以跳转到另外一个界面：输出hello，me</p>
<p>(2)传递数据包Bundle<br>对上面的代码进行一定的修改就可以<br>Mainactivity.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line">    findViewById(R.id.btn_B_StartAnotherAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, AnotherAty.class);</span><br><span class="line">           <span class="comment">// i.putExtra("data","hello,me");//传参数  名字是data 值是hello,me</span></span><br><span class="line">            Bundle b = <span class="keyword">new</span> Bundle();<span class="comment">//数据包</span></span><br><span class="line">            b.putString(<span class="string">"name"</span>,<span class="string">"liming"</span>);</span><br><span class="line">            b.putInt(<span class="string">"age"</span>, <span class="number">2</span>);</span><br><span class="line">            b.putString(<span class="string">"sex"</span>, <span class="string">"man"</span>);</span><br><span class="line">            i.putExtras(b);<span class="comment">//区别于putExtra</span></span><br><span class="line">            startActivity(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>AnotherAty.java<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="literal">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    super<span class="built_in">.</span>onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R<span class="built_in">.</span>layout<span class="built_in">.</span>activity_another_aty);</span><br><span class="line"></span><br><span class="line">    Intent i = getIntent();</span><br><span class="line">     tv = (TextView) findViewById(R<span class="built_in">.</span>id<span class="built_in">.</span>tv);</span><br><span class="line">   <span class="comment">// tv.setText(i.getStringExtra("data"));        //为输出框设置字符串(getStringExtra("data")-获取到一个字符串的数据,名字是data)</span></span><br><span class="line">    Bundle <span class="built_in">data</span> = i<span class="built_in">.</span>getExtras();</span><br><span class="line">    tv<span class="built_in">.</span>setText(<span class="built_in">String</span><span class="built_in">.</span>format(<span class="string">"name=%s,age=%d,sex=%s,name1=%s"</span>,<span class="built_in">data</span><span class="built_in">.</span>getString(<span class="string">"name"</span>),<span class="built_in">data</span><span class="built_in">.</span>getInt(<span class="string">"age"</span>),<span class="built_in">data</span><span class="built_in">.</span>getString(<span class="string">"sex"</span>,<span class="string">"woman"</span>),<span class="built_in">data</span><span class="built_in">.</span>getString(<span class="string">"name1"</span>,<span class="string">"张"</span>)));</span><br><span class="line">    <span class="comment">//name1再包里面没有输出为这里设置的默认值，sex传入有值，将不再用这里设置的默认值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>效果图<br><img src="/img/android/13.png" alt="image"><br><img src="/img/android/14.png" alt="image"><br>当然，也可以用putextra(String name,Bundle value)传递Bundle<br>Mainactivity.java<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, AnotherAty.<span class="keyword">class</span>);</span><br><span class="line">   <span class="comment">// i.putExtra("data","hello,me");//传参数  名字是data 值是hello,me</span></span><br><span class="line">    Bundle b = <span class="keyword">new</span> Bundle();<span class="comment">//数据包</span></span><br><span class="line">    b.putString(<span class="string">"name"</span>,<span class="string">"liming"</span>);</span><br><span class="line">    b.putInt(<span class="string">"age"</span>, <span class="number">2</span>);</span><br><span class="line">    b.putString(<span class="string">"sex"</span>, <span class="string">"man"</span>);</span><br><span class="line">   <span class="comment">// i.putExtras(b);//区别于putExtra</span></span><br><span class="line">    i.putExtra(<span class="string">"data"</span>,b);</span><br><span class="line">    startActivity(i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>AnotherAty.java<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="literal">void</span> onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    super<span class="built_in">.</span>onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R<span class="built_in">.</span>layout<span class="built_in">.</span>activity_another_aty);</span><br><span class="line"></span><br><span class="line">    Intent i = getIntent();</span><br><span class="line">     tv = (TextView) findViewById(R<span class="built_in">.</span>id<span class="built_in">.</span>tv);</span><br><span class="line">   <span class="comment">// tv.setText(i.getStringExtra("data"));        //为输出框设置字符串(getStringExtra("data")-获取到一个字符串的数据,名字是data)</span></span><br><span class="line">  <span class="comment">//  Bundle data = i.getExtras();   //getExtras()传参数时接收函数</span></span><br><span class="line">    Bundle <span class="built_in">data</span> = i<span class="built_in">.</span>getBundleExtra(<span class="string">"data"</span>);<span class="comment">//getExtra()传包时接收函数</span></span><br><span class="line">    tv<span class="built_in">.</span>setText(<span class="built_in">String</span><span class="built_in">.</span>format(<span class="string">"name=%s,age=%d,sex=%s,name1=%s"</span>,<span class="built_in">data</span><span class="built_in">.</span>getString(<span class="string">"name"</span>), <span class="built_in">data</span><span class="built_in">.</span>getInt(<span class="string">"age"</span>),<span class="built_in">data</span><span class="built_in">.</span>getString(<span class="string">"sex"</span>,<span class="string">"woman"</span>),<span class="built_in">data</span><span class="built_in">.</span>getString(<span class="string">"name1"</span>,<span class="string">"张"</span>)));</span><br><span class="line">    <span class="comment">//name1再包里面没有输出为这里设置的默认值，sex传入有值，将不再用这里设置的默认值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果同上</p>
<p>(3)传递值对象<br>值对象：自定义的有数据类型的对象<br>如传递一个数据类型user<br>新建一个user.java类：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span>(<span class="params"><span class="keyword">int</span> age, String name</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span>(<span class="params">String name</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span>(<span class="params"><span class="keyword">int</span> age</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>mainactivity.java<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i.putExtra(<span class="string">"User"</span>,<span class="keyword">new</span> User(<span class="string">"张三丰"</span>,<span class="number">25</span>));<span class="comment">//提示错误！</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/android/15.png" alt="image"><br>User需要实现parcelable或者Serializable序列化<br>修改User<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by zhang on 2016/1/11.</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Serializable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">( String name,<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>mainactivity.java传参数：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, AnotherAty.<span class="keyword">class</span>);</span><br><span class="line">               <span class="comment">// i.putExtra("data","hello,me");//传参数  名字是data 值是hello,me</span></span><br><span class="line"><span class="comment">//                Bundle b = new Bundle();//数据包</span></span><br><span class="line"><span class="comment">//                b.putString("name","liming");</span></span><br><span class="line"><span class="comment">//                b.putInt("age", 2);</span></span><br><span class="line"><span class="comment">//                b.putString("sex", "man");</span></span><br><span class="line"><span class="comment">//               // i.putExtras(b);//区别于putExtra</span></span><br><span class="line"><span class="comment">//                i.putExtra("data",b);</span></span><br><span class="line">                i.putExtra(<span class="string">"User"</span>,<span class="keyword">new</span> User(<span class="string">"张三丰"</span>,<span class="number">25</span>));</span><br><span class="line">                startActivity(i);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure></p>
<p>anotheraty.java获取参数：<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">protected void <span class="keyword">on</span>Create(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.<span class="keyword">on</span>Create(savedInstanceState);</span><br><span class="line">        <span class="built_in">set</span>ContentView(R.layout.activity_another_aty);</span><br><span class="line"></span><br><span class="line">        Intent i = getIntent();</span><br><span class="line">         tv = (TextView) findViewById(R.id.tv);</span><br><span class="line">       // tv.<span class="built_in">set</span>Text(i.getStringExtra(<span class="string">"data"</span>));        //为输出框设置字符串(getStringExtra(<span class="string">"data"</span>)-获取到一个字符串的数据,名字是data)</span><br><span class="line">      //  Bundle data = i.getExtras();   //getExtras()传参数时接收函数</span><br><span class="line">//        Bundle data = i.getBundleExtra(<span class="string">"data"</span>);//getExtra()传包时接收函数</span><br><span class="line">//        tv.<span class="built_in">set</span>Text(String.format(<span class="string">"name=%s,age=%d,sex=%s,name1=%s"</span>,data.getString(<span class="string">"name"</span>), data.getInt(<span class="string">"age"</span>),data.getString(<span class="string">"sex"</span>,<span class="string">"woman"</span>),data.getString(<span class="string">"name1"</span>,<span class="string">"张"</span>)));</span><br><span class="line">        //name1再包里面没有输出为这里设置的默认值，sex传入有值，将不再用这里设置的默认值</span><br><span class="line"></span><br><span class="line">        //取User</span><br><span class="line">        User <span class="keyword">user</span>= (User)i.getSerializableExtra(<span class="string">"User"</span>);</span><br><span class="line">//注意：传参获取必须名字一样：getSerializableExtra(<span class="string">"User"</span>)不能用小写的<span class="string">"user"</span>,因为传参用的大写i.putExtra(<span class="string">"User"</span>,new User(<span class="string">"张三丰"</span>,<span class="number">25</span>));否则编译通过，不能运行</span><br><span class="line">tv.<span class="built_in">set</span>Text(String.format(<span class="string">"user.info(name=%s,age=%d)"</span>,<span class="keyword">user</span>.getName(), <span class="keyword">user</span>.getAge()));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>运行点击按钮时显示：user.info(name=张三丰,age=25)</p>
<p>但是与parcelable相比，Serializable效率低<br>Parcelable是安卓的，速度快，但是要实现两个方法<br>describeContents()<br>writeToParcel(Parcel dest, int flags)需要手动写数据 执行过程中会自动执行到这个函数<br>再创建一个泛型<br>Parcelable具体实现如下：<br>User.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcelable;</span><br><span class="line"></span><br><span class="line"><span class="comment">//import java.io.Serializable;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by zhang on 2016/1/11.</span><br><span class="line"> */</span></span><br><span class="line"><span class="comment">//public class User implements Serializable&#123;</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Parcelable</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">( String name,<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(getName());<span class="comment">//这里怎么写的Creator中怎么读 多个string时可以用Bundle</span></span><br><span class="line">        dest.writeInt(getAge());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个泛型</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Creator&lt;User&gt; CREATOR = <span class="keyword">new</span> Creator&lt;User&gt;() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> User <span class="title">createFromParcel</span><span class="params">(Parcel source)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> User(source.readString(),source.readByte());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> User[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> User[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>mainactivity.java<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, AnotherAty.<span class="keyword">class</span>);</span><br><span class="line">               <span class="comment">// i.putExtra("data","hello,me");//传参数  名字是data 值是hello,me</span></span><br><span class="line"><span class="comment">//                Bundle b = new Bundle();//数据包</span></span><br><span class="line"><span class="comment">//                b.putString("name","liming");</span></span><br><span class="line"><span class="comment">//                b.putInt("age", 2);</span></span><br><span class="line"><span class="comment">//                b.putString("sex", "man");</span></span><br><span class="line"><span class="comment">//               // i.putExtras(b);//区别于putExtra</span></span><br><span class="line"><span class="comment">//                i.putExtra("data",b);</span></span><br><span class="line">                i.putExtra(<span class="string">"User"</span>,<span class="keyword">new</span> User(<span class="string">"张三丰"</span>,<span class="number">25</span>));</span><br><span class="line">                startActivity(i);</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure></p>
<p>anotheraty.java<br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">protected void <span class="keyword">on</span>Create(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.<span class="keyword">on</span>Create(savedInstanceState);</span><br><span class="line">        <span class="built_in">set</span>ContentView(R.layout.activity_another_aty);</span><br><span class="line"></span><br><span class="line">        Intent i = getIntent();</span><br><span class="line">         tv = (TextView) findViewById(R.id.tv);</span><br><span class="line">       // tv.<span class="built_in">set</span>Text(i.getStringExtra(<span class="string">"data"</span>));        //为输出框设置字符串(getStringExtra(<span class="string">"data"</span>)-获取到一个字符串的数据,名字是data)</span><br><span class="line">      //  Bundle data = i.getExtras();   //getExtras()传参数时接收函数</span><br><span class="line">//        Bundle data = i.getBundleExtra(<span class="string">"data"</span>);//getExtra()传包时接收函数</span><br><span class="line">//        tv.<span class="built_in">set</span>Text(String.format(<span class="string">"name=%s,age=%d,sex=%s,name1=%s"</span>,data.getString(<span class="string">"name"</span>), data.getInt(<span class="string">"age"</span>),data.getString(<span class="string">"sex"</span>,<span class="string">"woman"</span>),data.getString(<span class="string">"name1"</span>,<span class="string">"张"</span>)));</span><br><span class="line">        //name1再包里面没有输出为这里设置的默认值，sex传入有值，将不再用这里设置的默认值</span><br><span class="line"></span><br><span class="line">        //取User</span><br><span class="line">//        User <span class="keyword">user</span>= (User)i.getSerializableExtra(<span class="string">"User"</span>);//用什么方法实现的就用什么方法获取</span><br><span class="line">        //注意：传参获取必须名字一样：getSerializableExtra(<span class="string">"User"</span>)不能用小写的<span class="string">"user"</span>,因为传参用的大写i.putExtra(<span class="string">"User"</span>,new User(<span class="string">"张三丰"</span>,<span class="number">25</span>));否则编译通过，不能运行</span><br><span class="line">       User <span class="keyword">user</span>= i.getParcelableExtra(<span class="string">"User"</span>);//用什么方法实现的就用什么方法获取</span><br><span class="line">        tv.<span class="built_in">set</span>Text(String.format(<span class="string">"user.info(name=%s,age=%d)"</span>,<span class="keyword">user</span>.getName(), <span class="keyword">user</span>.getAge()));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果与上面一样</p>
<p>(4)获取 Activity 的返回参数<br>Activity_another_aty设置垂直排列并设置一个输入框和按钮，并在对应java中进行设置<br>Activity_main中添加一个输出框textview,对应main.Java中进行定义<br>Activity_Main.xml:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span> android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span> android:paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span> tools:context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:<span class="type">text</span>=<span class="string">"启动另一个Activity"</span></span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/btn_B_StartAnotherAty"</span></span><br><span class="line">        android:layout_alignParentTop=<span class="string">"true"</span></span><br><span class="line">        android:layout_alignParentStart=<span class="string">"true"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:<span class="type">text</span>=<span class="string">"New Text"</span></span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/textView"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>Activity_another_aty.xml:<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout <span class="string">xmlns:</span>android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line"><span class="label">    xmlns:</span>tools=<span class="string">"http://schemas.android.com/tools"</span> <span class="string">android:</span>layout_width=<span class="string">"match_parent"</span></span><br><span class="line"><span class="label">    android:</span>layout_height=<span class="string">"match_parent"</span> <span class="string">android:</span>paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line"><span class="label">    android:</span>paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line"><span class="label">    android:</span>paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line"><span class="label">    android:</span>paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line"><span class="label"></span><br><span class="line">    android:</span>orientation=<span class="string">"vertical"</span></span><br><span class="line"><span class="label">    tools:</span>context=<span class="string">"com.example.zhang.helloworld.AnotherAty"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView <span class="string">android:</span>text=<span class="string">"这是另外一个activity"</span> <span class="string">android:</span>layout_width=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>layout_height=<span class="string">"wrap_content"</span> <span class="string">android:</span>id=<span class="string">"@+id/tv"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line"><span class="label">        android:</span>layout_width=<span class="string">"match_parent"</span></span><br><span class="line"><span class="label">        android:</span>layout_height=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>id=<span class="string">"@+id/editText"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line"><span class="label">        android:</span>layout_width=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>layout_height=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>text=<span class="string">"Send Back"</span></span><br><span class="line"><span class="label">        android:</span>id=<span class="string">"@+id/button"</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView textView;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        textView = (TextView) findViewById(R.id.textView);</span><br><span class="line"></span><br><span class="line">        findViewById(R.id.btn_B_StartAnotherAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Intent i = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, AnotherAty.class);</span><br><span class="line">               <span class="comment">// i.putExtra("data","hello,me");//传参数  名字是data 值是hello,me</span></span><br><span class="line"><span class="comment">//                Bundle b = new Bundle();//数据包</span></span><br><span class="line"><span class="comment">//                b.putString("name","liming");</span></span><br><span class="line"><span class="comment">//                b.putInt("age", 2);</span></span><br><span class="line"><span class="comment">//                b.putString("sex", "man");</span></span><br><span class="line"><span class="comment">//               // i.putExtras(b);//区别于putExtra</span></span><br><span class="line"><span class="comment">//                i.putExtra("data",b);</span></span><br><span class="line">                i.putExtra(<span class="string">"User"</span>, <span class="keyword">new</span> User(<span class="string">"张三丰"</span>, <span class="number">25</span>));</span><br><span class="line"><span class="comment">//                startActivity(i);//因为要接收传回的参数，所以不能再用这个函数</span></span><br><span class="line">                startActivityForResult(i,<span class="number">0</span>);<span class="comment">//0---请求的代码：请求的代码传过去再传回来，可以用于代表此次请求的意义是什么</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//重写函数</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">//此函数可以获取到请求码，也可以获取到结果码</span></span><br><span class="line">    <span class="comment">//data对应的是传进来的setResult(1,i);中的i</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        textView.setText(<span class="string">"另一个activity返回的是"</span>+data.getStringExtra(<span class="string">"data"</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>another_aty.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.zhang.helloworld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnotherAty</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  TextView tv;</span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_another_aty);</span><br><span class="line"></span><br><span class="line">        Intent i = getIntent();</span><br><span class="line">        tv = (TextView) findViewById(R.id.tv);</span><br><span class="line">        editText= (EditText) findViewById(R.id.editText);<span class="comment">//初始化</span></span><br><span class="line">        <span class="comment">// tv.setText(i.getStringExtra("data"));        //为输出框设置字符串(getStringExtra("data")-获取到一个字符串的数据,名字是data)</span></span><br><span class="line">        <span class="comment">//  Bundle data = i.getExtras();   //getExtras()传参数时接收函数</span></span><br><span class="line"><span class="comment">//        Bundle data = i.getBundleExtra("data");//getExtra()传包时接收函数</span></span><br><span class="line"><span class="comment">//        tv.setText(String.format("name=%s,age=%d,sex=%s,name1=%s",data.getString("name"), data.getInt("age"),data.getString("sex","woman"),data.getString("name1","张")));</span></span><br><span class="line">        <span class="comment">//name1再包里面没有输出为这里设置的默认值，sex传入有值，将不再用这里设置的默认值</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//取User</span></span><br><span class="line"><span class="comment">//        User user= (User)i.getSerializableExtra("User");//用什么方法实现的就用什么方法获取</span></span><br><span class="line">        <span class="comment">//注意：传参获取必须名字一样：getSerializableExtra("User")不能用小写的"user",因为传参用的大写i.putExtra("User",new User("张三丰",25));否则编译通过，不能运行</span></span><br><span class="line">        User user= i.getParcelableExtra(<span class="string">"User"</span>);<span class="comment">//用什么方法实现的就用什么方法获取</span></span><br><span class="line">        tv.setText(String.format(<span class="string">"user.info(name=%s,age=%d)"</span>,user.getName(), user.getAge()));</span><br><span class="line"></span><br><span class="line">        findViewById(R.id.button).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Intent i=<span class="keyword">new</span> Intent();</span><br><span class="line">                i.putExtra(<span class="string">"data"</span>,editText.getText().toString());</span><br><span class="line">                setResult(<span class="number">1</span>, i);<span class="comment">//设置返回值setResult(状态码，值)</span></span><br><span class="line">                finish();<span class="comment">//直接把当前的activity给结束掉</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_another_aty, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onOptionsItemSelected</span><span class="params">(item)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果：输出返回值<br><img src="/img/android/16.png" alt="image"></p>
<h2 id="4-Android__u4E2D_Activity__u542F_u52A8_u6A21_u5F0F"><a href="#4-Android__u4E2D_Activity__u542F_u52A8_u6A21_u5F0F" class="headerlink" title="4.Android 中 Activity 启动模式"></a>4.Android 中 Activity 启动模式</h2><p>核心内容：Activity Standard 启动模式;Activity SingleTop 启动模式;Activity SingleTask 启动模式;Activity SingleInstance 启动模式<br>(1)标准启动模式<br>标准启动模式就是默认的启动模式<br>Activity_main.xml:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView android:<span class="type">text</span>=<span class="string">"@string/hello_world"</span> android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/tv"</span></span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure></p>
<p>Mainactivity.java:<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> TextView tv;</span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    tv= (TextView) findViewById(R.id.tv);</span><br><span class="line">    <span class="comment">//TaskID----任务ID    Current activity id：当前activity的实例ID</span></span><br><span class="line">    tv.setText(String.format(<span class="string">"TaskID:%d\n,Current activity id:%s"</span>,getTaskId(),toString()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果<br><img src="/img/android/17.png" alt="image"><br>再加一个button之后<br>Activity_main.xml:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span> <span class="attribute">android:paddingLeft</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">android:paddingRight</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingTop</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingBottom</span>=<span class="value">"@dimen/activity_vertical_margin"</span> <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:text</span>=<span class="value">"@string/hello_world"</span> <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/tv"</span></span><br><span class="line">    /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- android:textAllCaps="false":取消默认的全部大写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:textAllCaps</span>=<span class="value">"false"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"启动mainactivity"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnStartSelf"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Mainactivity.java:<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> TextView tv;</span><br><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    tv= (TextView) findViewById(R.id.tv);</span><br><span class="line">    <span class="comment">//TaskID----任务ID    Current activity id：当前activity的实例ID</span></span><br><span class="line">    tv.setText(String.format(<span class="string">"TaskID:%d\n,Current activity id:%s"</span>,getTaskId(),toString()));</span><br><span class="line"></span><br><span class="line">    findViewById(R.id.btnStartSelf).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,MainActivity.class));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果<br><img src="/img/android/18.png" alt="image"><br>点击按钮后taskid没有变，而当前activity的id改变<br>任务栈：启动的第一个实例放入其中，第2,3…个实例也是放入其中<br>按后退键可以弹出栈点的实例，呈现上一个activity的实例<br>在Androidmanifest.xml中可以进行启动模式配置<br>默认的是stadard<br><img src="/img/android/19.png" alt="image"></p>
<p>(2)SingleTop 模式<br>把上面的Androidmanifest.xml中配置改为SingleTop后运行<br><img src="/img/android/20.png" alt="image"><br>此时点击按钮显示没有任何改变<br>再建一个activity测试<br>注意：同一个文件设置ID不能一样，不同的文件设置ID可以相同<br>程序如下：<br>Activity_main.xml与activity_baty.xml完全一样<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">xmlns:tools</span>=<span class="value">"http://schemas.android.com/tools"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span> <span class="attribute">android:paddingLeft</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span></span><br><span class="line">    <span class="attribute">android:paddingRight</span>=<span class="value">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingTop</span>=<span class="value">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attribute">android:paddingBottom</span>=<span class="value">"@dimen/activity_vertical_margin"</span> <span class="attribute">tools:context</span>=<span class="value">".MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span> <span class="attribute">android:text</span>=<span class="value">"@string/hello_world"</span> <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/tv"</span></span><br><span class="line">    /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- android:textAllCaps="false":取消默认的全部大写 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:textAllCaps</span>=<span class="value">"false"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"启动mainactivity"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnStartMain"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:textAllCaps</span>=<span class="value">"false"</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"启动BAty"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/btnStartBty"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Mainactivity.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">TextView</span> tv;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        tv= (<span class="type">TextView</span>) findViewById(<span class="type">R</span>.id.tv);</span><br><span class="line">        <span class="comment">//TaskID----任务ID    Current activity id：当前activity的实例ID</span></span><br><span class="line">        tv.setText(<span class="type">String</span>.format(<span class="string">"TaskID:%d\n,Current activity id:%s"</span>,getTaskId(),toString()));</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnStartMain).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">MainActivity</span>.<span class="keyword">this</span>, <span class="type">MainActivity</span>.<span class="keyword">class</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnStartBty).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">MainActivity</span>.<span class="keyword">this</span>, <span class="type">BAty</span>.<span class="keyword">class</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>BAty.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BAty</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">TextView</span> tv;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_baty);</span><br><span class="line"></span><br><span class="line">        tv= (<span class="type">TextView</span>) findViewById(<span class="type">R</span>.id.tv);</span><br><span class="line">        tv.setText(<span class="type">String</span>.format(<span class="string">"TaskID:%d\n,Current activity id:%s"</span>, getTaskId(), toString()));</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnStartMain).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">BAty</span>.<span class="keyword">this</span>, <span class="type">MainActivity</span>.<span class="keyword">class</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnStartBty).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">BAty</span>.<span class="keyword">this</span>, <span class="type">BAty</span>.<span class="keyword">class</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下<br><img src="/img/android/21.png" alt="image"><br>在主界面（main界面）点击跳转到自己, taskid不变，实例ID不变<br>在主界面（main界面）点击跳转到Bty, taskid不变，实例ID改变<br>在Bty界面点击跳转到main界面，taskid不变，实例ID改变，而且与前次的实例ID不一样<br>在Bty界面点击跳转到自己界面，taskid不变，实例ID改变<br>点击后退可以一直退</p>
<p>(3)SingleTask 与 SingleInstance 模式<br>将androidmainfest.xml设置为singletask<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">android:</span>launchMode=<span class="string">"singleTask"</span> &gt;</span><br></pre></td></tr></table></figure></p>
<p>其他与2.4.2相同，运行如下<br>在主界面（main界面）点击跳转到自己, taskid不变，实例ID不变<br>在主界面（main界面）点击跳转到Bty, taskid不变，实例ID改变<br>在Bty界面点击跳转到main界面，taskid不变，实例ID改变，而且与前次的实例ID一样<br>在Bty界面点击跳转到自己界面，taskid不变，实例ID改变<br>点击后退退到main界面，在main界面点击后退直接退出<br>Main activity永远只有一个</p>
<p>将androidmainfest.xml设置为SingleInstance时main与Bty不是同一个栈<br>在主界面（main界面）点击跳转到自己, taskid不变，实例ID不变<br>在主界面（main界面）点击跳转到Bty, taskid改变，实例ID改变<br>在Bty界面点击跳转到main界面，taskid改变，实例ID改变，而且与前次的实例ID一样taskid也是相同<br>在Bty界面点击跳转到自己界面，taskid不变，实例ID改变<br>在一个界面点击后退后退到的界面如果是栈顶，再点击后退这个栈退出，如果有退到另外一个栈，则显示另外一个栈，点击后退如果是这个栈的栈顶则直接退出！</p>
<h2 id="5-_u5728_Android__u4E2D_Intent__u7684_u6982_u5FF5_u53CA_u5E94_u7528"><a href="#5-_u5728_Android__u4E2D_Intent__u7684_u6982_u5FF5_u53CA_u5E94_u7528" class="headerlink" title="5.在 Android 中 Intent 的概念及应用"></a>5.在 Android 中 Intent 的概念及应用</h2><p>核心内容：隐式 Intent;显式 Intent<br>(1)显式Intent<br>分别新建一个类和一个activity,并将他们绑定，需要在androidmainfest.xml注册才能用！最后进行intent配置。<br>Activity_main.xml<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;RelativeLayout <span class="string">xmlns:</span>android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line"><span class="label">    xmlns:</span>tools=<span class="string">"http://schemas.android.com/tools"</span> <span class="string">android:</span>layout_width=<span class="string">"match_parent"</span></span><br><span class="line"><span class="label">    android:</span>layout_height=<span class="string">"match_parent"</span> <span class="string">android:</span>paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line"><span class="label">    android:</span>paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line"><span class="label">    android:</span>paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line"><span class="label">    android:</span>paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span> <span class="string">tools:</span>context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView <span class="string">android:</span>text=<span class="string">"@string/hello_world"</span> <span class="string">android:</span>layout_width=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>layout_height=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>id=<span class="string">"@+id/textView2"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line"><span class="label">        android:</span>layout_width=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>layout_height=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">        android:</span>text=<span class="string">"startMyAty"</span></span><br><span class="line"><span class="label">        android:</span>id=<span class="string">"@+id/btnStartMyAty"</span></span><br><span class="line"><span class="label">        android:</span>layout_below=<span class="string">"@+id/textView2"</span></span><br><span class="line"><span class="label">        android:</span>layout_toEndOf=<span class="string">"@+id/textView2"</span></span><br><span class="line"><span class="label">        android:</span>layout_marginTop=<span class="string">"81dp"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>MyAty.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnStartMyAty).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                startActivity(<span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">MainActivity</span>.<span class="keyword">this</span>,<span class="type">MyAty</span>.<span class="keyword">class</span>));<span class="comment">//这是一个显示的Intent,因为显示的写出了被启动的MyAty.class</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>myAty.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">LinearLayout</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">android:orientation</span>=<span class="value">"vertical"</span> <span class="attribute">android:layout_width</span>=<span class="value">"match_parent"</span></span><br><span class="line">    <span class="attribute">android:layout_height</span>=<span class="value">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">TextView</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"New Text"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/textView"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">Button</span></span><br><span class="line">        <span class="attribute">android:layout_width</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:layout_height</span>=<span class="value">"wrap_content"</span></span><br><span class="line">        <span class="attribute">android:text</span>=<span class="value">"New Button"</span></span><br><span class="line">        <span class="attribute">android:id</span>=<span class="value">"@+id/button"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>MyAty.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.<span class="type">Activity</span>;</span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by zhang on 2016/1/11.</span><br><span class="line"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyAty</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line">    <span class="comment">//重写oncreate函数</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.myaty);<span class="comment">//将这个activity与视图myaty绑定</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>androidmainfest.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">manifest</span> <span class="attribute">xmlns:android</span>=<span class="value">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attribute">package</span>=<span class="value">"com.example.zhang.learnintent"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">application</span></span><br><span class="line">        <span class="attribute">android:allowBackup</span>=<span class="value">"true"</span></span><br><span class="line">        <span class="attribute">android:icon</span>=<span class="value">"@mipmap/ic_launcher"</span></span><br><span class="line">        <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span></span><br><span class="line">        <span class="attribute">android:theme</span>=<span class="value">"@style/AppTheme"</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">            <span class="attribute">android:name</span>=<span class="value">".MainActivity"</span></span><br><span class="line">            <span class="attribute">android:label</span>=<span class="value">"@string/app_name"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 注册MyAty,前面加一点是因为程序运行时会加直接在package="com.example.zhang.learnintent"后面 也可以com.example.zhang.learnintent.MyAty --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">".MyAty"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;activity android:name="com.example.zhang.learnintent.MyAty"/&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">application</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>运行效果：点击按钮跳转到另外一个界面</p>
<p>(2)隐式 Intent<br>androidmainfest.xml中指定category，category为DEFAULT时，其行为方式为activity<br>action可以是任意的字符串，启动的时候根据字符串启动就可以啦，在main.java中用这个字符串（不能有中文）就可以<br>改动androidmainfest.xml和main.java，其他不变<br>androidmainfest.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">".MyAty"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span>/&gt;</span><span class="comment">&lt;!-- android.intent.category.DEFAULT此处不能全部用大写 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"acdsndslvdjsldvms.a"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    startActivity(<span class="keyword">new</span> Intent(<span class="string">"acdsndslvdjsldvms.a"</span>));<span class="comment">//这是一个显示的Intent,因为显示的写出了被启动的MyAty.class</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果与上面的一样<br>但是上面用随意的字符串可读性太差，可以用约定成俗的格式com.zhang.LearnIntent.intent.action.MyAty,一看就知道启动哪个activity<br>这太长，还是很难记，一般在被启动的activity（MyAty.java）中添加常量</p>
<p>androidmainfest.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">".MyAty"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span>/&gt;</span><span class="comment">&lt;!-- android.intent.category.DEFAULT此处不能全部用大写 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"com.zhang.LearnIntent.intent.action.MyAty"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>MyAty.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MyAty</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    public static <span class="keyword">final</span> <span class="type">String</span> <span class="type">ACTION</span> = <span class="string">"com.zhang.LearnIntent.intent.action.MyAty"</span>;</span><br><span class="line">    <span class="comment">//重写oncreate函数</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.myaty);<span class="comment">//将这个activity与视图myaty绑定</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    startActivity(<span class="keyword">new</span> Intent(MyAty.ACTION));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果与上面的一样</p>
<p>不同应用间通过ACTION启动<br>再创建一个新的项目App1用new Module—在同一个界面显示<br>App1中：<br>Main.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"Start MyAty from App1"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStartMyAty"</span></span><br><span class="line">    android:layout_below=<span class="string">"@+id/textView"</span></span><br><span class="line">    android:layout_alignParentStart=<span class="string">"true"</span></span><br><span class="line">    android:layout_marginTop=<span class="string">"52dp"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">    findViewById(R.id.btnStartMyAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            startActivity(<span class="keyword">new</span> Intent(<span class="string">"com.zhang.LearnIntent.intent.action.MyAty"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>通过软件App1可以启动跳转到LearnIntent的界面MyAty<br>如果不允许其他应用访问我应用的activity,只允许自己访问，该怎么配置呢？<br>只需要将该应用的activity的androidmainfest.xml进行如下配置，则其他应用不能访问这个activity<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;activity <span class="string">android:</span>name=<span class="string">".MyAty"</span> <span class="string">android:</span>exported=<span class="string">"false"</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>？？？但是不知道为啥，我的加了这个语句还是可以访问！</p>
<p>(3)Intent 过滤器相关选项<br>多个activity的intent一样会出现什么情况呢？<br>没有去掉MyAty的android:exported=”false”时，会直接显示MyAty1<br>去掉后会如下，让你自己选择<br><img src="/img/android/22.png" alt="image"><br>可以选择just once或者always<br>选择always后下次将默认启动这项，取消需要在设置里面弄<br>将软件LearnIntent拉到info里面，点击CLEAR DEFAULTS将默认设置都清掉，则可以重新选择（我的模拟器不行（清后还是默认的）—应该是安卓版本太低）<br><img src="/img/android/23.png" alt="image"><br>过滤器里面还有一个属性data<br>在MyAty1下加入data项如下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">".MyAty1"</span></span><br><span class="line">    <span class="attribute">android:label</span>=<span class="value">"@string/title_activity_my_aty1"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"com.zhang.LearnIntent.intent.action.MyAty"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">data</span> <span class="attribute">android:scheme</span>=<span class="value">"app"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>在APP1中如何找到指定的activity呢？<br>两个activity：MyAty是通过默认配置，而MyAty1是通过添加schme(指明的协议是”app”)<br>Data属性下还有很多常用的属性，自己下来看<br>App1-main.java中<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">    startActivity(<span class="keyword">new</span> Intent(<span class="string">"com.zhang.LearnIntent.intent.action.MyAty"</span>, Uri.parse(<span class="string">"app://hello"</span>)));<span class="comment">// app://后面参数任意，不一定是hello</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如此，启动App1后点击按钮直接到MyAty1</p>
<p>(4) 通过浏览器链接启动本地 Activity<br>先建一个activity,再到再mainfest.xml下配置activity<br>Localaty.xml<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView <span class="string">android:</span>text=<span class="string">"这是浏览器链接的本地的activity"</span> <span class="string">android:</span>layout_width=<span class="string">"wrap_content"</span></span><br><span class="line"><span class="label">    android:</span>layout_height=<span class="string">"wrap_content"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>mainfest.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">".LocalAty"</span></span><br><span class="line">    <span class="attribute">android:label</span>=<span class="value">"@string/title_activity_local_aty"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.BROWSABLE"</span>/&gt;</span>  <span class="comment">&lt;!-- 可以被浏览器启动配置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.VIEW"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">data</span> <span class="attribute">android:scheme</span>=<span class="value">"app"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>配置完成后，写一个浏览器的页面——用软件WebStorm开发，当然也可以用任何html编辑软件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>App<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 调整文字的大小 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">style</span>&gt;</span><span class="css"></span><br><span class="line">        <span class="tag">a</span><span class="rules">&#123;</span><br><span class="line">            <span class="rule"><span class="attribute">font-size</span>:<span class="value"> <span class="number">50pt</span></span></span>;</span><br><span class="line">        &#125;</span></span><br><span class="line">    </span><span class="tag">&lt;/<span class="title">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">a</span> <span class="attribute">href</span>=<span class="value">"app://hello"</span>&gt;</span>Launch My APP<span class="tag">&lt;/<span class="title">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>直接在电脑浏览器上无法访问到app,因为不能处理APP协议<br><img src="/img/android/24.png" alt="image"></p>
<p>在手机上打开：手机用本地地址：10.0.2.2<br>注意要加端口，地址全名：http：//10.0.2.2:63343/App/index.html<br>如下所示<br><img src="/img/android/25.png" alt="image"><br>如此实现了浏览器打开APP的activity,但是如何接收到参数呢？<br>通过（Android.net下的）Uri.可以获取信息<br><img src="/img/android/26.png" alt="image"><br>Localaty.java<br><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="component">protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">    super<span class="string">.onCreate(savedInstanceState)</span>;</span><br><span class="line">    setContentView(R<span class="string">.layout.activity_local_aty)</span>;</span><br><span class="line"></span><br><span class="line">    Uri uri = getIntent()<span class="string">.getData()</span>;</span><br><span class="line">    System<span class="string">.out.println(uri)</span>;// System<span class="string">.out.print(uri)会由于缓存原因没有输出，所以用println</span></span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>安装APP，打开网页点击打开activity,输出信息：<br><img src="/img/android/27.png" alt="image"></p>
<h2 id="6-Android__u4E2D_Context__u7684_u7406_u89E3_u53CA_u4F7F_u7528"><a href="#6-Android__u4E2D_Context__u7684_u7406_u89E3_u53CA_u4F7F_u7528" class="headerlink" title="6.Android 中 Context 的理解及使用"></a>6.Android 中 Context 的理解及使用</h2><p>Context 是 Android 中一个非常重要的概念，用于访问全局信息，几乎所有的基础组件都继承自 Context，理解 Context 对于学习 Android 四大基本组件非常有帮助。<br>核心内容：理解 Context;理解 Application<br>(1) Context 的作用<br>Context:用于访问全局信息（如用于程序的资源：图片，字符串）的接口，如activity也是继承自Context<br>那么如何通过context进行资源的访问呢？<br><img src="/img/android/28.png" alt="image"><br>TextView里面最少要有一个context.而activity继承自context,所以可以用activity<br>Main.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">TextView</span> tv;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"><span class="comment">//        setContentView(R.layout.activity_main);</span></span><br><span class="line">        tv = <span class="keyword">new</span> <span class="type">TextView</span>(<span class="type">MainActivity</span>.<span class="keyword">this</span>);<span class="comment">//不是内部类，MainActivity.this可以直接用this</span></span><br><span class="line">        tv.setText(<span class="string">"hello android"</span>);</span><br><span class="line">        setContentView(tv);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>运行输出字符串hello android<br>可以获取任意的字符串资源如<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tv.setText(R.<span class="keyword">string</span>.app_name);//app_name在<span class="keyword">string</span>.xml中，为LearnContext</span><br></pre></td></tr></table></figure></p>
<p>图片资源<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ImageView iv = new ImageView(this)<span class="comment">;</span></span><br><span class="line">iv.setImageResource(R.mipmap.ic_launcher)<span class="comment">;</span></span><br><span class="line">setContentView(iv)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>运行如下：<br><img src="/img/android/29.png" alt="image"></p>
<p>(2)Application 的用途<br>信息共享<br>创建一个类APP继承自Application<br>之后打开androidmainfest.xml配置<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="type">application</span></span><br><span class="line">    android:<span class="property">name</span>=<span class="string">".App"</span></span><br></pre></td></tr></table></figure></p>
<p>如此则自定义了一个安卓的Application, Application才是一个真正的全局上下文对象<br>在main.java中通过getApplicationContext()就可以获取到Application的全局的对象<br>下面实现一个全局共享的数据<br>App.java中写一个字符串，在为他写一个set,get方法，代码如下<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.<span class="type">Application</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by zhang on 2016/1/12.</span><br><span class="line"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Application</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> textdata = <span class="string">"default"</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="type">String</span> getTextdata() &#123;</span><br><span class="line">        <span class="keyword">return</span> textdata;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setTextdata(<span class="type">String</span> textdata) &#123;</span><br><span class="line">        <span class="keyword">this</span>.textdata = textdata;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>新建一个main2.java继承自activity<br>重写oncreate函数<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.app.<span class="type">Activity</span>;</span><br><span class="line"><span class="keyword">import</span> android.os.<span class="type">Bundle</span>;</span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * Created by zhang on 2016/1/12.</span><br><span class="line"> */</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Main2</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>打开androidmainfest.xml添加上这个activity<br>复制mainactivity的配置让这个activity也是默认启动(category.LAUNCHER)<br>Label一个设置main1,一个main2<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">".MainActivity"</span></span><br><span class="line">    <span class="attribute">android:label</span>=<span class="value">"Main1"</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span> <span class="attribute">android:name</span>=<span class="value">".Main2"</span> <span class="attribute">android:label</span>=<span class="value">"Main2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.action.MAIN"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.LAUNCHER"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>安装后发现有两个软件，一个main1启动的是main1，另一个main2启动的是main2<br>下面让他们实现数据共享<br>新建linearlayout,如下main1,main2，删掉原来的mainactivity.xml<br><img src="/img/android/30.png" alt="image"><br>两个activity分别绑定两个视图<br>Mainactivity.java<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">setContentView</span>(<span class="tag">R</span><span class="class">.layout</span><span class="class">.main1</span>);</span><br></pre></td></tr></table></figure></p>
<p>main2.java<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">setContentView</span>(<span class="tag">R</span><span class="class">.layout</span><span class="class">.main2</span>);</span><br></pre></td></tr></table></figure></p>
<p>main1.activity中放入输出输入文本框和按钮，main2.activity与main1相同<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"New Text"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/textView"</span></span><br><span class="line">    android:layout_weight=<span class="string">"0.03"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;EditText</span><br><span class="line">    android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/editText"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"保存"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnSave"</span></span><br><span class="line">    android:layout_weight=<span class="string">"0.03"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>保存和读取Application数据中的信息<br>Mainactivity.java与main2.java一样<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Main2</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">TextView</span> textView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">EditText</span> editText;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.main2);</span><br><span class="line">        textView = (<span class="type">TextView</span>) findViewById(<span class="type">R</span>.id.textView);</span><br><span class="line">        editText = (<span class="type">EditText</span>) findViewById(<span class="type">R</span>.id.editText);</span><br><span class="line">        textView.setText(<span class="string">"共享的数据是："</span> + getApp().getTextdata());</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnSave).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                ((<span class="type">App</span>) getApplicationContext()).setTextdata(editText.getText().toString());</span><br><span class="line">                textView.setText(<span class="string">"共享的数据是："</span> + editText.getText().toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public <span class="type">App</span> getApp() &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="type">App</span>) getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>main1运行：点击输入保存看到共享的数据<br><img src="/img/android/31.png" alt="image"><br>退出main1打开main2如下：成功读取数据，同样，在main2中改的在main1中可以收到<br><img src="/img/android/32.png" alt="image"></p>
<p>(3) Application 生命周期<br>App.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String textdata = <span class="string">"default"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTextdata</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> textdata;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTextdata</span><span class="params">(String textdata)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.textdata = textdata;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span><span class="comment">//创建</span></span><br><span class="line">    <span class="comment">//比被启动的activity的oncreate先执行--方便做一些初始化操作</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        System.out.println(<span class="string">"App oncreate()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span><span class="comment">//结束----一般情况不执行，只是模拟情况下执行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTerminate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onTerminate();</span><br><span class="line">        System.out.println(<span class="string">"App onTerminate()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span><span class="comment">//低内存时执行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLowMemory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onLowMemory();</span><br><span class="line">        System.out.println(<span class="string">"App onlowmemory()"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span><span class="comment">//程序进行内存清理时执行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTrimMemory</span><span class="params">(<span class="keyword">int</span> level)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onTrimMemory(level);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span><span class="comment">//配置改变时执行</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConfigurationChanged</span><span class="params">(Configuration newConfig)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onConfigurationChanged(newConfig);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>mainactivity.java<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"mainactivity oncreate()"</span>);</span><br></pre></td></tr></table></figure></p>
<p>Main2.java<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"main2 oncreate()"</span>);</span><br></pre></td></tr></table></figure></p>
<p>运行：不管启动哪个activity，app.java的oncreate函数先会执行<br><img src="/img/android/33.png" alt="image"><br>关闭main1后（不然好像不会再次启动app.java的oncreate函数）启动main2<br><img src="/img/android/34.png" alt="image"></p>
<h2 id="7-_u8BA4_u8BC6_Android_Service"><a href="#7-_u8BA4_u8BC6_Android_Service" class="headerlink" title="7.认识 Android Service"></a>7.认识 Android Service</h2><p>课程背景：Service 是 Android 四大基本组件之一，是无界面的应用程序，可以长期在后台运行，在实际工作中非常重要，比如接收推送消息、在锁屏状态下侦听传感器信息。<br>核心内容：启动Service;绑定Service</p>
<p>(1) 使用 Service<br>新建一个项目learnservice<br>Java包下new-&gt;server-&gt;server 产生myserver.java<br>Exported:是否导出（向外界公开）   enabled：是否启用<br>如何启用呢？<br>myserver.java没动<br>Main.xml加入按钮<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"启动服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStartService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"停止服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnEndService"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Activity</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Intent</span> intent;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        intent = <span class="keyword">new</span> <span class="type">Intent</span>(<span class="type">MainActivity</span>.<span class="keyword">this</span>,<span class="type">MyService</span>.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnStartService).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">               <span class="comment">// startService(new Intent(MainActivity.this, MyService.class));//启动服务</span></span><br><span class="line">                startService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        findViewById(<span class="type">R</span>.id.btnEndService).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">               <span class="comment">// stopService(new Intent(MainActivity.this,MyService.class));//服务的操作在一个实例中只有一个，停止的是上面启动的</span></span><br><span class="line">                stopService(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>启动运行：<br>运行先不操作，按中间键进入桌面，查看setting-&gt;APPS（应用）-&gt;running(所有正在运行的程序) 能够看到正在运行的服务<br>点击按钮开始，再到上面地方看，发现多了一个这个项目的service（一个进程，一个服务）<br>点击停止服务，发现服务没有了</p>
<p>写一个实例：让他不断的在后台输出语句<br>Myservice.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="annotation">@Override</span></span><br><span class="line"><span class="comment">//外界执行startservice后会执行这个函数</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//创建一个线程，让他不断输出语句</span></span><br><span class="line">    <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.run();</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                System.out.println(<span class="string">"服务正在运行..."</span>);</span><br><span class="line">                <span class="comment">//休眠1S</span></span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    sleep(<span class="number">1000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;.start();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行点击启动服务<br>每隔1s后台不断输出 服务正在运行…<br>按左边个键退出程序服务仍然执行</p>
<p>(2) 绑定 Service<br>Main.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"启动服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStartService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"停止服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnEndService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"绑定服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnBindService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"解除绑定服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnUnbindService"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// implements View.OnClickListener------实现接口后可以把</span></span><br><span class="line"><span class="comment">//findViewById(R.id.btnStartService).setOnClickListener(new View.OnClickListener() &#123;</span></span><br><span class="line"><span class="comment">//@Override</span></span><br><span class="line"><span class="comment">//public void onClick(View v) &#123;</span></span><br><span class="line"><span class="comment">//        // startService(new Intent(MainActivity.this, MyService.class));//启动服务</span></span><br><span class="line"><span class="comment">//        startService(intent);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        &#125;);</span></span><br><span class="line"><span class="comment">//改为 findViewById(R.id.btnBindService).setOnClickListener(this);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span>, <span class="title">ServiceConnection</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Intent intent;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,MyService.class);</span><br><span class="line">        findViewById(R.id.btnStartService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnEndService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnBindService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnUnbindService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnStartService:</span><br><span class="line">                startService(intent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnEndService:</span><br><span class="line">                stopService(intent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnBindService:</span><br><span class="line">                bindService(intent,<span class="keyword">this</span>, Context.BIND_AUTO_CREATE);<span class="comment">//bindService(intent；服务连接:听服务状态。让this实现监听service，同时实现下面两个函数；常量);</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnUnbindService:</span><br><span class="line">                unbindService(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">//标识服务连接成功</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Service connected!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>Myservice.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">       <span class="comment">// throw new UnsupportedOperationException("Not yet implemented");</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Binder();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">//外界执行startservice后会执行这个函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个线程，让他不断输出语句</span></span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"服务正在运行..."</span>);</span><br><span class="line">                    <span class="comment">//休眠1S</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>运行<br>点击绑定服务：输出Service connected!<br>点击解除绑定则解除绑定<br>注意：点击如下打印机上面那个按钮，System.out.println()才在后台显示输出<br><img src="/img/android/35.png" alt="image"></p>
<p>(3) Service生命周期<br>public int onStartCommand(Intent intent, int flags, int startId)<br>public void onCreate()<br>public void onDestroy()<br>myservice.java如下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">       <span class="comment">// throw new UnsupportedOperationException("Not yet implemented");</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Binder();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">//外界执行startservice后会执行这个函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个线程，让他不断输出语句</span></span><br><span class="line"><span class="comment">//        new Thread()&#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public void run() &#123;</span></span><br><span class="line"><span class="comment">//                super.run();</span></span><br><span class="line"><span class="comment">//                while(true) &#123;</span></span><br><span class="line"><span class="comment">//                    System.out.println("服务正在运行...");</span></span><br><span class="line"><span class="comment">//                    //休眠1S</span></span><br><span class="line"><span class="comment">//                    try &#123;</span></span><br><span class="line"><span class="comment">//                        sleep(1000);</span></span><br><span class="line"><span class="comment">//                    &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//                        e.printStackTrace();</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;.start();</span></span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        System.out.println(<span class="string">"service oncreate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        System.out.println(<span class="string">"service ondestroy"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行：<br><img src="/img/android/36.png" alt="image"><br>点击启动服务 输出service oncreate<br>点击停止服务 输出service ondestroy<br>再点击绑定服务 输出service oncreate   Service connected!<br>点击解除绑定服务 输出service ondestroy<br>同时点击启动绑定服务后，单独点击解除绑定服务或者停止服务没有反应，必须点击解除绑定和停止两个服务才会退出<br>点击启动服务，点击手机左键退出程序，服务仍然运行<br>点击停止服务才退出<br>点击绑定服务，点击手机左键退出程序，抛出一个异常后服务退出（说明绑定在程序退出后解除绑定）</p>
<p>Myservice修改如下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个线程，让他不断输出语句</span></span><br><span class="line"><span class="comment">//        new Thread()&#123;</span></span><br><span class="line"><span class="comment">//            @Override</span></span><br><span class="line"><span class="comment">//            public void run() &#123;</span></span><br><span class="line"><span class="comment">//                super.run();</span></span><br><span class="line"><span class="comment">//                while(true) &#123;</span></span><br><span class="line"><span class="comment">//                    System.out.println("服务正在运行...");</span></span><br><span class="line"><span class="comment">//                    //休眠1S</span></span><br><span class="line"><span class="comment">//                    try &#123;</span></span><br><span class="line"><span class="comment">//                        sleep(1000);</span></span><br><span class="line"><span class="comment">//                    &#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="comment">//                        e.printStackTrace();</span></span><br><span class="line"><span class="comment">//                    &#125;</span></span><br><span class="line"><span class="comment">//                &#125;</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;.start();</span></span><br><span class="line">        System.out.println(<span class="string">"service onStartCommand"</span>);</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        System.out.println(<span class="string">"service oncreate"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        System.out.println(<span class="string">"service ondestroy"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>运行：<br>启动服务：service oncreate，service onStartCommand。<br>一直点击启动服务，此时oncreate不在执行<br>重复执行启动服务一直输出：service onStartCommand</p>
<p>修改myservice：<br>控制服务的开始于停止<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> serviceRunning = <span class="keyword">false</span>;<span class="comment">//标识</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">       <span class="comment">// throw new UnsupportedOperationException("Not yet implemented");</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Binder();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">//外界执行startservice后会执行这个函数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"service onStartCommand"</span>);</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        System.out.println(<span class="string">"service oncreate"</span>);</span><br><span class="line">        serviceRunning=<span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">//创建一个线程，让他不断输出语句</span></span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                <span class="keyword">while</span>(serviceRunning) &#123;</span><br><span class="line">                    System.out.println(<span class="string">"服务正在运行..."</span>);</span><br><span class="line">                    <span class="comment">//休眠1S</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        System.out.println(<span class="string">"service ondestroy"</span>);</span><br><span class="line">        serviceRunning=<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行：<br>启动服务：<br>service oncreate<br>service onStartCommand<br>服务正在运行…<br>服务正在运行…<br>服务正在运行…<br>服务正在运行…</p>
<p>停止服务：<br>service ondestroy</p>
<p>绑定服务：<br>service oncreate<br>服务正在运行…<br>Service connected!<br>服务正在运行…<br>服务正在运行…<br>服务正在运行…<br>服务正在运行…</p>
<p>解除绑定服务：<br>service ondestroy</p>
<h2 id="8-Android__u4E2D_Service__u901A_u4FE1"><a href="#8-Android__u4E2D_Service__u901A_u4FE1" class="headerlink" title="8.Android 中 Service 通信"></a>8.Android 中 Service 通信</h2><p>核心内容：绑定Service并与之通信<br>(1) 启动 Service 并传递数据<br>外界与一个服务实现数据传递<br>Main.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span> android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">   android:orientation=<span class="string">"vertical"</span></span><br><span class="line">    android:layout_height=<span class="string">"match_parent"</span> android:paddingLeft=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingRight=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    android:paddingTop=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    android:paddingBottom=<span class="string">"@dimen/activity_vertical_margin"</span> tools:context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;EditText</span><br><span class="line">        android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:<span class="type">text</span>=<span class="string">"默认信息"</span></span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/etData"</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:<span class="type">text</span>=<span class="string">"启动服务"</span></span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/btnStartService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">        android:<span class="type">text</span>=<span class="string">"停止服务"</span></span><br><span class="line">        android:<span class="property">id</span>=<span class="string">"@+id/btnStopService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        editText= (EditText) findViewById(R.id.etData);</span><br><span class="line">        findViewById(R.id.btnStartService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnStopService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onOptionsItemSelected</span><span class="params">(item)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnStartService:</span><br><span class="line">                Intent i=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class);</span><br><span class="line">                i.putExtra(<span class="string">"data"</span>,editText.getText().toString());<span class="comment">//直接把data放到intent传递给service-----service中onstartcommand中第一个参数就是接收的intent</span></span><br><span class="line">                startService(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnStopService:</span><br><span class="line">                stopService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Service.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> running=<span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> String data=<span class="string">"这是默认信息"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"Not yet implemented"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        data=intent.getStringExtra(<span class="string">"data"</span>);</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onStartCommand</span><span class="params">(intent, flags, startId)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        running=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                <span class="keyword">while</span> (running)&#123;</span><br><span class="line">                    System.out.println(data);<span class="comment">/////////////</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        running=<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行：<br>点击启动服务输出：默认信息<br>改变输入框内信息再点击启动服务：后台输出信息发生变化，和输入框内一样<br>停止服务：输出停止</p>
<p>(2) 绑定 Service 进行通信（上）<br>本课时讲解如何与被绑定的 Service 进行通信<br>Main.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;EditText</span><br><span class="line">    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"默认信息"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/etData"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"启动服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStartService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"停止服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStopService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"绑定服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnBindservice"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"解除绑定服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnUnbindservice"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"同步数据"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnSyncData"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span>, <span class="title">ServiceConnection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line">    <span class="keyword">private</span> MyService.Binder binder = <span class="keyword">null</span>;<span class="comment">//定义一个Binder对象</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        editText= (EditText) findViewById(R.id.etData);</span><br><span class="line">        findViewById(R.id.btnStartService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnStopService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnBindservice).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnUnbindservice).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnSyncData).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onOptionsItemSelected</span><span class="params">(item)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnStartService:</span><br><span class="line">                Intent i=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class);</span><br><span class="line">                i.putExtra(<span class="string">"data"</span>,editText.getText().toString());<span class="comment">//直接把data放到intent传递给service-----service中onstartcommand中第一个参数就是接收的intent</span></span><br><span class="line">                startService(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnStopService:</span><br><span class="line">                stopService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnBindservice:</span><br><span class="line">                bindService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class),<span class="keyword">this</span>, Context.BIND_AUTO_CREATE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnUnbindservice:</span><br><span class="line">                unbindService(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnSyncData:</span><br><span class="line">                <span class="keyword">if</span>(binder != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    binder.setData(editText.getText().toString());<span class="comment">//从输入框内传入数据---这种方法比直接方法调用，比Intent那种方法快得多</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">//这里参数IBinder service是myservice中传来</span></span><br><span class="line">    <span class="comment">//访问到的是myservice中 public IBinder onBind(Intent intent)的的返回值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">        binder= (MyService.Binder) service;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>myservice.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> running=<span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> String data=<span class="string">"这是默认信息"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Binder();<span class="comment">//自己建的</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个类继承来自系统的Binder</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Binder</span> <span class="keyword">extends</span> <span class="title">android</span>.<span class="title">os</span>.<span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">            MyService.<span class="keyword">this</span>.data=data;<span class="comment">//修改data值</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        data=intent.getStringExtra(<span class="string">"data"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        running=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line">                <span class="keyword">while</span> (running)&#123;</span><br><span class="line">                    System.out.println(data);<span class="comment">/////////////</span></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        running=<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行程序：<br>点击绑定服务：输出：这是默认信息<br>改变输入框内容，点击同步数据：后台输出内容与输入框内容一样</p>
<p>(3) 绑定 Service 进行通信（下）<br>本课时讲解如何侦听被绑定的 Service 的内部状态<br>如服务内部发生改变后发送到界面<br>Callback回调<br>Main.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/tvOut"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;EditText</span><br><span class="line">    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"默认信息"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/etData"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"启动服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStartService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"停止服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStopService"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"绑定服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnBindservice"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"解除绑定服务"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnUnbindservice"</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"同步数据"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnSyncData"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span>, <span class="title">ServiceConnection</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TextView tvOut;</span><br><span class="line">    <span class="keyword">private</span> EditText editText;</span><br><span class="line">    <span class="keyword">private</span> MyService.Binder binder = <span class="keyword">null</span>;<span class="comment">//定义一个Binder对象</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        tvOut= (TextView) findViewById(R.id.tvOut);</span><br><span class="line">        editText= (EditText) findViewById(R.id.etData);</span><br><span class="line">        findViewById(R.id.btnStartService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnStopService).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnBindservice).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnUnbindservice).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        findViewById(R.id.btnSyncData).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onOptionsItemSelected</span><span class="params">(item)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnStartService:</span><br><span class="line">                Intent i=<span class="keyword">new</span> Intent(<span class="keyword">this</span>,MyService.class);</span><br><span class="line">                i.putExtra(<span class="string">"data"</span>,editText.getText().toString());<span class="comment">//直接把data放到intent传递给service-----service中onstartcommand中第一个参数就是接收的intent</span></span><br><span class="line">                startService(i);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnStopService:</span><br><span class="line">                stopService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnBindservice:</span><br><span class="line">                bindService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, MyService.class),<span class="keyword">this</span>, Context.BIND_AUTO_CREATE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnUnbindservice:</span><br><span class="line">                unbindService(<span class="keyword">this</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> R.id.btnSyncData:</span><br><span class="line">                <span class="keyword">if</span>(binder != <span class="keyword">null</span>)&#123;</span><br><span class="line">                    binder.setData(editText.getText().toString());<span class="comment">//从输入框内传入数据---这种方法比直接方法调用，比Intent那种方法快得多</span></span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="comment">//这里参数IBinder service是myservice中传来</span></span><br><span class="line">    <span class="comment">//访问到的是myservice中 public IBinder onBind(Intent intent)的的返回值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">        binder= (MyService.Binder) service;</span><br><span class="line">        <span class="comment">//访问回调函数</span></span><br><span class="line">        binder.getService().setCallback(<span class="keyword">new</span> MyService.Callback() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDataChange</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">                <span class="comment">//UI线程是不允许其他辅线程来修改UI线程的资源</span></span><br><span class="line"><span class="comment">//                tvOut.setText(data);//错误-------------因为程序是由myservice中新创建的线程来调用的，直接用一个新创建的线程来执行UI线程的资源是不能成功运行的</span></span><br><span class="line">                <span class="comment">//再下面新创建一个Handler</span></span><br><span class="line">                Message msg = <span class="keyword">new</span> Message();</span><br><span class="line">                Bundle b=<span class="keyword">new</span> Bundle();</span><br><span class="line">                b.putString(<span class="string">"data"</span>,data);</span><br><span class="line">                <span class="comment">//通过msg附加上一个数据</span></span><br><span class="line">                msg.setData(b);</span><br><span class="line">                <span class="keyword">handler</span>.sendMessage(msg);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//新创建一个Handler</span></span><br><span class="line">    <span class="comment">//用android.os.Handler类而不是java库中Handler类</span></span><br><span class="line">    <span class="keyword">private</span> android.os.Handler <span class="keyword">handler</span> = <span class="keyword">new</span> android.os.Handler()&#123;</span><br><span class="line">        <span class="annotation">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">super</span>.handleMessage(msg);</span><br><span class="line">            <span class="comment">//获取字符串</span></span><br><span class="line">           tvOut.setText(msg.getData().getString(<span class="string">"data"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>myservice.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyService</span> <span class="keyword">extends</span> <span class="title">Service</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> running=<span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> String data=<span class="string">"这是默认信息"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Binder();<span class="comment">//自己建的</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//创建一个类继承来自系统的Binder</span></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Binder</span> <span class="keyword">extends</span> <span class="title">android</span>.<span class="title">os</span>.<span class="title">Binder</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(String data)</span></span>&#123;</span><br><span class="line">            MyService.<span class="keyword">this</span>.data=data;<span class="comment">//修改data值</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//回调函数事件绑定</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> MyService <span class="title">getService</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> MyService.<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">onStartCommand</span><span class="params">(Intent intent, <span class="keyword">int</span> flags, <span class="keyword">int</span> startId)</span> </span>&#123;</span><br><span class="line">        data=intent.getStringExtra(<span class="string">"data"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        running=<span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        <span class="keyword">new</span> Thread()&#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">super</span>.run();</span><br><span class="line"></span><br><span class="line">                <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">while</span> (running)&#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    String str=i+<span class="string">":"</span>+data;</span><br><span class="line">                    System.out.println(str);<span class="comment">/////////////</span></span><br><span class="line">                    <span class="keyword">if</span>(callback != <span class="keyword">null</span>)&#123;</span><br><span class="line">                        callback.onDataChange(str);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        sleep(<span class="number">1000</span>);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        running=<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Callback callback = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCallback</span><span class="params">(Callback callback)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.callback = callback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Callback <span class="title">getCallback</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> callback;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">interface</span> <span class="title">Callback</span></span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onDataChange</span><span class="params">(String data)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```	</span><br><span class="line">运行：点击绑定服务  开始不断累加显示数字----信息是从myservice中传来的</span><br><span class="line">![image](img/android/<span class="number">37</span>.png)</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>.Android 中 AIDL 的理解与使用</span><br><span class="line">----------------------------</span><br><span class="line">(<span class="number">1</span>) 跨应用启动 Service</span><br><span class="line">Appservice.java</span><br></pre></td></tr></table></figure></p>
<p>public void onCreate() {<br>    super.onCreate();<br>    System.out.println(“service started”);<br>}</p>
<p>@Override<br>public void onDestroy() {<br>    super.onDestroy();<br>    System.out.println(“service ondestroyed”);<br>main.java<br>protected void onCreate(Bundle savedInstanceState) {<br>    super.onCreate(savedInstanceState);<br>    setContentView(R.layout.activity_main);</p>
<pre><code>startService(new Intent(this,Appservice.class));
</code></pre><p>}</p>
<p>@Override<br>protected void onDestroy() {<br>    super.onDestroy();<br>    stopService(new Intent(this, Appservice.class));<br>}<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行程序，后台输出service started，退出程序，后台输出service ondestroyed</span><br><span class="line">在同一个程序中通过startService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>,Appservice.<span class="keyword">class</span>)); stopService(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, Appservice.<span class="keyword">class</span>));启动停止服务简单，那么如何通过其他程序来启动停止这个服务呢？</span><br><span class="line">再创建一个名字为AnotherApp的module</span><br><span class="line">备注：Android5<span class="number">.0</span>以前可以使用隐式Intent（前面有讲到用他启动另外一个APP的activity）, Android5<span class="number">.0</span>之后只能使用显式Intent</span><br><span class="line">AnotherApp.main.xml</span><br></pre></td></tr></table></figure></p>
<button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="启动服务" android:id="@+id/btnStartAppService">

<p><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="停止服务" android:id="@+id/btnStopAppService"><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AnotherApp<span class="class">.main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></button></p>
<p>private Intent serviceIntent;<br>    @Override<br>    protected void onCreate(Bundle savedInstanceState) {<br>        super.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);</p>
<pre><code>findViewById(R.id.btnStartAppService).setOnClickListener(this);
findViewById(R.id.btnStopAppService).setOnClickListener(this);

serviceIntent=new Intent();
//如下显示Intent
//通过setComponent显示指明要启动的Intent
</code></pre><p>//                new ComponentName(被启动的Intent所在包名，被启动的类名)<br>        serviceIntent.setComponent(new ComponentName(“com.example.zhang.startservicefromanotherapp”,”com.example.zhang.startservicefromanotherapp.Appservice”));<br>    }</p>
<pre><code>@Override
public void onClick(View v) {
    switch (v.getId()){
        case R.id.btnStartAppService:
            startService(serviceIntent);
            break;
        case R.id.btnStopAppService:
            stopService(serviceIntent);
            break;
    }
}
</code></pre><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">运行：</span><br><span class="line">点击启动服务，在被启动项目下的后台（StartservicefromanotherAPP）（注意：不是AnotherApp）可以看到启动输出：service <span class="literal">started</span></span><br><span class="line"></span><br><span class="line">也可以在Appservice内部重写onStartCommand用于接收从其他的应用传过来的数据</span><br></pre></td></tr></table></figure>
<p>public int onStartCommand(Intent intent, int flags, int startId){}<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(<span class="number">2</span>) 跨应用绑定 Service</span><br><span class="line">绑定时需要用到一个bundler，一个程序无法访问另外一个程序中类的定义，那么是否不能通信呢？</span><br><span class="line">Android提供了一种机制用于多个程序之间通信：AIDL（Android <span class="keyword">Interface</span> Definition Language/ Android接口定义语言），下面进行操作</span><br><span class="line">创建一个AIDL文件</span><br><span class="line">App下java包下New-&gt;AIDL-&gt;AIDL <span class="keyword">file</span>（IAppServiceInterface），会生成一个.aidl文件，里面会自动生成对应的一个类IAppServiceInterface</span><br><span class="line">这时候点击build-&gt;rebuild project重构一下（以便检测到刚刚生成的类），如此在service的<span class="keyword">public</span> IBinder onBind(<span class="type">Intent</span> <span class="type">intent</span>)函数中可以直接返回这个类</span><br><span class="line">Myservice.java</span><br></pre></td></tr></table></figure></p>
<p>public class Appservice extends Service {<br>    public Appservice() {<br>    }</p>
<pre><code>@Override
public IBinder onBind(Intent intent){
    return new IAppServiceInterface.Stub(){
        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException {
        }
    };
}

@Override
public void onCreate() {
    super.onCreate();
    System.out.println(&quot;service started&quot;);
}

@Override
public void onDestroy() {
    super.onDestroy();
    System.out.println(&quot;service ondestroyed&quot;);
}
</code></pre><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如何通过AnotherApp绑定这个服务呢？</span><br><span class="line">AnotherApp<span class="class">.main</span><span class="class">.xml</span></span><br></pre></td></tr></table></figure>
</button><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="启动外部服务" android:id="@+id/btnStartAppService">

</button><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="停止外部服务" android:id="@+id/btnStopAppService">

</button><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="绑定外部服务" android:id="@+id/btnBindAppService">

<p><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="解除绑定外部服务" android:id="@+id/btnUnbindAppService"><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AnotherApp<span class="class">.main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></button></p>
<p>public class MainActivity extends Activity implements View.OnClickListener, ServiceConnection {</p>
<pre><code>private Intent serviceIntent;
@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    findViewById(R.id.btnStartAppService).setOnClickListener(this);
    findViewById(R.id.btnStopAppService).setOnClickListener(this);
    findViewById(R.id.btnBindAppService).setOnClickListener(this);
    findViewById(R.id.btnUnbindAppService).setOnClickListener(this);

    serviceIntent=new Intent();
    //如下显示Intent
    //通过setComponent显示指明要启动的Intent
</code></pre><p>//                new ComponentName(被启动的Intent所在包名，被启动的类名)<br>        serviceIntent.setComponent(new ComponentName(“com.example.zhang.startservicefromanotherapp”,”com.example.zhang.startservicefromanotherapp.Appservice”));<br>    }</p>
<pre><code>@Override
public void onClick(View v) {
    switch (v.getId()){
        case R.id.btnStartAppService:
            startService(serviceIntent);
            break;
        case R.id.btnStopAppService:
            stopService(serviceIntent);
            break;
        case R.id.btnBindAppService:
            bindService(serviceIntent, this, Context.BIND_AUTO_CREATE);
            break;
        case R.id.btnUnbindAppService:
            unbindService(this);//注意，这里区别于上面三个，用this
            break;
    }
}
</code></pre><p>//bindService(serviceIntent, this, Context.BIND_AUTO_CREATE);中this需要下面两个函数<br>    public void onServiceConnected(ComponentName name, IBinder service) {<br>        System.out.println(“Bind service”);<br>        System.out.println(service);//看一下传入的IBinder是啥东西<br>// android.os.BinderProxy@c5151c7<br>    }</p>
<pre><code>@Override
public void onServiceDisconnected(ComponentName name) {

}
</code></pre><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">先安装上App，再运行AnotherApp</span><br><span class="line">点击绑定服务，App后台输出启动服务，AnotherApp后台输出Bind service android<span class="built_in">.</span>os<span class="built_in">.</span>BinderProxy@c5151c7</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>) 跨应用绑定 Service 并通信</span><br><span class="line">修改aidl,添加接口</span><br><span class="line"></span><br><span class="line">同步如何使用呢？</span><br><span class="line">需要在另外一个APP下创建一个与原APP包含<span class="built_in">.</span>aidl文件的相同包名和对应包下放相同的<span class="built_in">.</span>aidl文件</span><br><span class="line">创建过程：右键<span class="subst">-&gt;</span><span class="literal">new</span><span class="subst">-&gt;</span>Folder<span class="subst">-&gt; </span>AIDL Folder<span class="subst">-&gt;</span>finish</span><br><span class="line">之后发现多出一个AIDL文件夹，右键<span class="subst">-&gt;</span><span class="literal">new</span><span class="subst">-&gt;</span>package(名字与原APP的<span class="built_in">.</span>aidl文件包名同)</span><br><span class="line">把<span class="built_in">.</span>aidl文件复制到这个包下面就可以</span><br><span class="line">现在两个应用有同样的<span class="built_in">.</span>aidl文件，可以定义同样的定义</span><br><span class="line"></span><br><span class="line">IAppServiceInterface<span class="built_in">.</span>aidl</span><br></pre></td></tr></table></figure>
<p>interface IAppServiceInterface {<br>    /**</p>
<pre><code> * Demonstrates some basic types that you can use as parameters
 * and return values in AIDL.
 */
void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat,
        double aDouble, String aString);

void setData(String data);
</code></pre><p>}<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">App<span class="class">.appservice</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></p>
<p>public class Appservice extends Service {</p>
<pre><code>//设置一个默认数据，通过另外一个App更改
private String data=&quot;默认数据&quot;;
private boolean running=false;

public Appservice() {
}

@Override
public IBinder onBind(Intent intent){
    return new IAppServiceInterface.Stub(){
        public void basicTypes(int anInt, long aLong, boolean aBoolean, float aFloat, double aDouble, String aString) throws RemoteException {
        }

        @Override
        public void setData(String data) throws RemoteException {
        Appservice.this.data=data;//对数据进行修改
        }
    };
}

@Override
public void onCreate() {
    super.onCreate();
    System.out.println(&quot;service started&quot;);
    new Thread(){
        @Override
        public void run() {
            super.run();
            running=true;
            while (running){
                System.out.println(data);
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }.start();
}

@Override
public void onDestroy() {
    super.onDestroy();
    System.out.println(&quot;service ondestroyed&quot;);
    running=false;
}

@Override
public int onStartCommand(Intent intent, int flags, int startId) {
    return super.onStartCommand(intent, flags, startId);
}
</code></pre><p>}<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">App<span class="class">.main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></p>
<p>protected void onCreate(Bundle savedInstanceState) {<br>    super.onCreate(savedInstanceState);<br>    setContentView(R.layout.activity_main);</p>
<pre><code>startService(new Intent(this,Appservice.class));
</code></pre><p>}</p>
<p>@Override<br>protected void onDestroy() {<br>    super.onDestroy();<br>    stopService(new Intent(this, Appservice.class));<br>}<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Anotherapp<span class="class">.main</span><span class="class">.xml</span></span><br></pre></td></tr></table></figure></p>
</button><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="启动外部服务" android:id="@+id/btnStartAppService">

</button><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="停止外部服务" android:id="@+id/btnStopAppService">

</button><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="绑定外部服务" android:id="@+id/btnBindAppService">

</button><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="解除绑定外部服务" android:id="@+id/btnUnbindAppService">

<edittext android:layout_width="fill_parent" android:layout_height="wrap_content" android:text="这是另外一个应用的数据" android:id="@+id/etInput">

<p><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="同步数据到绑定服务中" android:id="@+id/btnSync"><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Another<span class="class">.main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></button></p>
<p>public class MainActivity extends Activity implements View.OnClickListener, ServiceConnection {</p>
<pre><code>private Intent serviceIntent;
private EditText etInput;
private IAppServiceInterface binder=null;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    etInput= (EditText) findViewById(R.id.etInput);
    findViewById(R.id.btnStartAppService).setOnClickListener(this);
    findViewById(R.id.btnStopAppService).setOnClickListener(this);
    findViewById(R.id.btnBindAppService).setOnClickListener(this);
    findViewById(R.id.btnUnbindAppService).setOnClickListener(this);
    findViewById(R.id.btnSync).setOnClickListener(this);

    serviceIntent=new Intent();
    //如下显示Intent
    //通过setComponent显示指明要启动的Intent
</code></pre><p>//                new ComponentName(被启动的Intent所在包名，被启动的类名)<br>        serviceIntent.setComponent(new ComponentName(“com.example.zhang.startservicefromanotherapp”,”com.example.zhang.startservicefromanotherapp.Appservice”));<br>    }</p>
<pre><code>@Override
public void onClick(View v) {
    switch (v.getId()){
        case R.id.btnStartAppService:
            startService(serviceIntent);
            break;
        case R.id.btnStopAppService:
            stopService(serviceIntent);
            break;
        case R.id.btnBindAppService:
            bindService(serviceIntent, this, Context.BIND_AUTO_CREATE);
            break;
        case R.id.btnUnbindAppService:
            unbindService(this);//注意，这里区别于上面三个，用this
            binder=null;//解除绑定后要清空
            break;
        case R.id.btnSync:
            if(binder!=null){
                //远程通信异常
                try {
                    binder.setData(etInput.getText().toString());
                } catch (RemoteException e) {
                    e.printStackTrace();
                }
            }
            break;
    }
}
</code></pre><p>//bindService(serviceIntent, this, Context.BIND_AUTO_CREATE);中this需要下面两个函数<br>    public void onServiceConnected(ComponentName name, IBinder service) {<br>        System.out.println(“Bind service”);<br>        System.out.println(service);//看一下传入的IBinder是啥东西</p>
<p>//        binder = (IAppServiceInterface) service;//错误 虽然两个应用中类的名字一样，但具体所在的内存地址不一样<br>        binder=IAppServiceInterface.Stub.asInterface(service);<br>    }</p>
<pre><code>@Override
public void onServiceDisconnected(ComponentName name) {

}
</code></pre><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">安装APP后再运行AnotherApp</span><br><span class="line">绑定外部服务，APP后台会输出“默认信息”，点击同步后与App中输入框的相同</span><br><span class="line"></span><br><span class="line"><span class="header">10.Android 广播接收器 BroadcastReceiver</span><br><span class="line">------------------------------------</span></span><br><span class="line">BroadcastReceiver 是Android 四大基本组件之一，用于接收广播信息，如：开屏、锁屏、短信等等，在实际工作中用途非常广泛</span><br><span class="line">核心内容：动态注册和注销 BroadcastReceiver</span><br><span class="line"></span><br><span class="line">(1) 使用 BroadcastReceiver</span><br><span class="line">首先创建一个项目，再创建一个BroadcastReceiver：new-&gt;other-&gt; Broadcast Receiver</span><br><span class="line">生成一个.java,可以在onReceive（）方法里面写语句</span><br><span class="line">Receiver的子标签在fest.xml自动添加</span><br></pre></td></tr></table></figure>
<p><receiver android:name=".MyReceiver" android:enabled="true" android:exported="true"><br></receiver><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Main</span><span class="class">.xml</span></span><br></pre></td></tr></table></figure></p>
<p><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="发送消息" android:id="@+id/btnSendMsg"><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></button></p>
<p>public class MainActivity extends Activity implements View.OnClickListener {</p>
<pre><code>@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);

    findViewById(R.id.btnSendMsg).setOnClickListener(this);
}

public void onClick(View v) {
    switch (v.getId()){
        case R.id.btnSendMsg:
            sendBroadcast(new Intent(this,MyReceiver.class));//发送广播消息
            break;
    }
}
</code></pre><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">MyReceiver</span><span class="class">.java</span></span><br></pre></td></tr></table></figure>
<p>public class MyReceiver extends BroadcastReceiver {<br>    public MyReceiver() {<br>    }<br>    @Override<br>    //这里创建了一个广播接收器，如果有其他程序朝接收器这里发送消息，就会接收到<br>    public void onReceive(Context context, Intent intent) {<br>        System.out.println(“接收到了一条消息”);</p>
<pre><code>}
</code></pre><p>}<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">运行点击发送按钮，后台输出：接收到了一条消息</span><br><span class="line">当然，也可以附带上数据传输</span><br><span class="line"><span class="tag">Main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></p>
<p>public void onClick(View v) {<br>    switch (v.getId()){<br>        case R.id.btnSendMsg:<br>            Intent i=new Intent(this,MyReceiver.class);<br>            i.putExtra(“data”,”good morning!”);<br>            sendBroadcast(i);//发送广播消息<br>            break;<br>    }<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">MyRciver</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></p>
<p>public void onReceive(Context context, Intent intent) {<br>    System.out.println(“接收到了一条消息:”+intent.getStringExtra(“data”));</p>
<p>}<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">运行点击发送按钮：</span><br><span class="line">后台输出：接收到了一条消息<span class="pseudo">:good</span> <span class="tag">morning</span>!</span><br><span class="line"></span><br><span class="line">(2) 动态注册和注销 <span class="tag">BroadcastReceiver</span></span><br><span class="line">不用始终处于监听状态，用注册和注销 <span class="tag">BroadcastReceiver</span></span><br><span class="line">去<span class="tag">fest</span><span class="class">.xml</span>删除<span class="tag">Receiver</span>注册，这时候接收不到消息</span><br><span class="line">下面直接通过程序来实现注册：</span><br><span class="line">添加两个按钮控制注册于注销</span><br><span class="line"><span class="tag">Main</span><span class="class">.xml</span></span><br></pre></td></tr></table></figure></p>
<p><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="发送消息" android:id="@+id/btnSendMsg"></button></p>
<p><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="注册接收器" android:id="@+id/btnReg"></button></p>
<p><button android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="注销接收器" android:id="@+id/btnUnreg"><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></button></p>
<p>protected void onCreate(Bundle savedInstanceState) {<br>        super.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);</p>
<pre><code>    findViewById(R.id.btnSendMsg).setOnClickListener(this);
    findViewById(R.id.btnReg).setOnClickListener(this);
    findViewById(R.id.btnUnreg).setOnClickListener(this);
}

private MyReceiver receiver=null;//防止多次注册
public void onClick(View v) {
    switch (v.getId()) {
        case R.id.btnSendMsg:
</code></pre><p>//                Intent i = new Intent(this, MyReceiver.class);//动态注册不能再用这种格式，用下面的<br>                Intent i=new Intent(MyReceiver.ACTION);//直接传ACTION的方式发送—隐式Intent<br>                i.putExtra(“data”, “good morning!”);<br>                sendBroadcast(i);//发送广播消息<br>                break;<br>            case R.id.btnReg:<br>                if(receiver==null){<br>                    receiver=new MyReceiver();<br>                    //registerReceiver(receiver,new IntentFilter(ACTION是一个字符串，有一个约定成俗的固定的格式，-可以在Myreceiver中定义));<br>                    registerReceiver(receiver,new IntentFilter(MyReceiver.ACTION));//zhuc<br>                }<br>                break;<br>            case R.id.btnUnreg:<br>                if(receiver != null){<br>                    unregisterReceiver(receiver);//注销<br>                    receiver=null;<br>                }<br>                break;<br>        }<br>    }<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Myreciver</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></p>
<p>public static final String ACTION = “com.example.zhang.learnbroadcastreceiver.intent.action.MyReceiver”;<br>public MyReceiver() {<br>}<br>@Override<br>//这里创建了一个广播接收器，如果有其他程序朝接收器这里发送消息，就会接收到<br>public void onReceive(Context context, Intent intent) {<br>    System.out.println(“接收到了一条消息:”+intent.getStringExtra(“data”));</p>
<p>}<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行点击注册之后点击发送消息才有反应，点击注销后发送消息没有反应</span><br><span class="line">刚刚上面忘记了删除fest.xml中的自动注册，运行依然正确，应该是动态注册优先级高吧</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>) <span class="keyword">BroadcastReceiver </span>的优先级</span><br><span class="line">先给MyReceiver添加注册信息</span><br></pre></td></tr></table></figure></p>
<p><receiver android:name=".MyReceiver"><br>    <intent-filter><br>        <action android:name="com.example.zhang.learnbroadcastreceiver.intent.action.MyReceiver"><br>    </action></intent-filter><br></receiver><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">再创建一个接收器Myreceiver1</span><br></pre></td></tr></table></figure></p>
<p>public void onReceive(Context context, Intent intent) {<br>    System.out.println(“MyReceiver1 接收到消息：”);<br>}<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Fest</span><span class="class">.xml</span></span><br></pre></td></tr></table></figure></p>
<p><receiver android:name=".MyReceiver"><br>    <intent-filter><br>        <action android:name="com.example.zhang.learnbroadcastreceiver.intent.action.MyReceiver"><br>    </action></intent-filter><br></receiver></p>
<p><receiver android:name=".MyReceiver1" android:enabled="true" android:exported="true"><br>    <intent-filter><br>        <action android:name="com.example.zhang.learnbroadcastreceiver.intent.action.MyReceiver"><br>    </action></intent-filter><br></receiver><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">两个接收器用相同的action,理论上两个接收器都能接收到消息</span><br><span class="line">运行：发现都接收到了消息，先注册的接收器先接收到消息</span><br><span class="line">接收到了一条消息:good morning!</span><br><span class="line">MyReceiver1 接收到消息：</span><br><span class="line"></span><br><span class="line">也可以手动指定优先级<span class="tag">&lt;<span class="title">intent-filter</span> <span class="attribute">android:priority</span>=<span class="value">"数字"</span>&gt;</span>数字越大优先级越高，越先接收到消息</span><br><span class="line">如下MyReceiver1先接收到消息：</span><br></pre></td></tr></table></figure></p>
<p><receiver android:name=".MyReceiver"><br>    <intent-filter android:priority="9"><br>        <action android:name="com.example.zhang.learnbroadcastreceiver.intent.action.MyReceiver"><br>    </action></intent-filter><br></receiver></p>
<p><receiver android:name=".MyReceiver1" android:enabled="true" android:exported="true"><br>    <intent-filter android:priority="10"><br>        <action android:name="com.example.zhang.learnbroadcastreceiver.intent.action.MyReceiver"><br>    </action></intent-filter><br></receiver><br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如何让一个优先级高的receiver防止后面的接收器接收到数据呢？</span><br></pre></td></tr></table></figure></p>
<p>public void onReceive(Context context, Intent intent) {<br>    System.out.println(“MyReceiver1 接收到消息：”);</p>
<pre><code>abortBroadcast();//中断广播，优先级低于这个的将不在接收到广播消息
</code></pre><p>}<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">运行如下：</span><br><span class="line"><span class="number">01</span>-<span class="number">21</span> <span class="number">03</span>:<span class="number">17</span>:<span class="number">45</span>.<span class="number">761</span>  <span class="number">19775</span>-<span class="number">19775</span>/com.example.zhang.learnbroadcastreceiver I/<span class="type">System</span>.<span class="keyword">out</span>﹕ <span class="type">MyReceiver1</span> 接收到消息：</span><br><span class="line"><span class="number">01</span>-<span class="number">21</span> <span class="number">03</span>:<span class="number">17</span>:<span class="number">45</span>.<span class="number">919</span>  <span class="number">19775</span>-<span class="number">19775</span>/com.example.zhang.learnbroadcastreceiver E/<span class="type">BroadcastReceiver</span>﹕ <span class="type">BroadcastReceiver</span> trying to <span class="keyword">return</span> <span class="literal">result</span> during a non-ordered broadcast……………….</span><br><span class="line"><span class="number">01</span>-<span class="number">21</span> <span class="number">03</span>:<span class="number">17</span>:<span class="number">46</span>.<span class="number">035</span>  <span class="number">19775</span>-<span class="number">19775</span>/com.example.zhang.learnbroadcastreceiver I/<span class="type">System</span>.<span class="keyword">out</span>﹕ <span class="type">MyReceiver</span> 接收到了消息</span><br><span class="line"></span><br><span class="line">为啥优先级低的也接收到了消息？</span><br><span class="line">因为<span class="type">BroadcastReceiver</span> trying to <span class="keyword">return</span> <span class="literal">result</span> during a non-ordered broadcast</span><br><span class="line">尝试中断的是一个非顺序的broadcast，直接用sendBroadcast(i);发送的广播消息是不能被中断的，需要改为下面才能被中断：</span><br></pre></td></tr></table></figure></p>
<p>  public void onClick(View v) {<br>        switch (v.getId()) {<br>            case R.id.btnSendMsg:<br>//                Intent i = new Intent(this, MyReceiver.class);//动态注册不能再用这种格式，用下面的<br>                Intent i=new Intent(MyReceiver.ACTION);//直接传ACTION的方式发送—隐式Intent<br>                i.putExtra(“data”, “good morning!”);<br>//                sendBroadcast(i);//发送广播消息——-这个函数发送消息不能被中断<br>                sendOrderedBroadcast(i,null);//第一个参数为Intent,第二个为权限–这个函数发送消息能被中断<br>                break;<br>            case R.id.btnReg:<br>                if(receiver==null){<br>                    receiver=new MyReceiver();<br>                    //registerReceiver(receiver,new IntentFilter(ACTION是一个字符串，有一个约定成俗的固定的格式，-可以在Myreceiver中定义));<br>                    registerReceiver(receiver,new IntentFilter(MyReceiver.ACTION));//zhuc<br>                }<br>                break;<br>            case R.id.btnUnreg:<br>                if(receiver != null){<br>                    unregisterReceiver(receiver);//注销<br>                    receiver=null;<br>                }<br>                break;<br>        }<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">运行程序优先级低的被中断</span><br><span class="line"></span><br><span class="line">11.Android 日志系统</span><br><span class="line">----------------------</span><br><span class="line">Android 日志是用来记录程序运行过程的，但是在实际开发中，由于日志信息太多导致不方便查看有效日志而影响了正常的开发调试工作，所以学会对日志进行分类查看非常重要。</span><br><span class="line">核心内容：System.<span class="keyword">out</span>;System.<span class="keyword">err</span>;Android <span class="keyword">Log</span> 类;日志分类过滤</span><br><span class="line"></span><br><span class="line">(1) 使用日志 API</span><br><span class="line">讲解在 Android 系统中如何使用日志 API 进行日志输出，内容包括 System.<span class="keyword">out</span>、System.<span class="keyword">err</span>、<span class="keyword">Log</span>.v、<span class="keyword">Log</span>.<span class="keyword">d</span>、<span class="keyword">Log</span>.i、<span class="keyword">Log</span>.w、<span class="keyword">Log</span>.<span class="keyword">e</span> 的使用。</span><br><span class="line">创建一个项目LearnLog</span><br></pre></td></tr></table></figure></p>
<p>System.out.println(“普通日志”);// System.out.println（）属于普通日志<br>System.err.println(“错误日志”);<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">运行输出：</span><br><span class="line">1349-1349/com.example.zhang.learnlog I/System.out﹕ 普通日志</span><br><span class="line">1349-1349/com.example.zhang.learnlog W/System.err﹕ 错误日志</span><br><span class="line">I----Info-------普通消息</span><br><span class="line">W----Warning--------警告信息</span><br><span class="line">Log level:消息类型</span><br><span class="line">Verbose:最低-----全部显示</span><br><span class="line">Info------显示info信息以及比他高的信息</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/38.png</span>)</span><br><span class="line">上面是java提供的android还提供了非常详细的日志信息Log.里面有很多信息</span><br><span class="line">//安卓提供从高到低日志信息如下</span><br></pre></td></tr></table></figure></p>
<p>Log.e(TAG,”错误信息”);//error<br>Log.w(TAG,”警告信息”);//warn<br>Log.i(TAG,”普通信息”);//info<br>Log.d(TAG,”调试信息”);//debug<br>Log.v(TAG,”无用信息”);//verbose 比如：一个程序员可以输出唠叨信息—这段程序好难写啊<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">(2) 日志分类</span><br><span class="line">如何对日志进行分类呈现，便于开发调试。</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/39.png</span>)</span><br><span class="line">No Filters----------------显示全部应用程序的日志信息</span><br><span class="line">Show only selected application------------只是显示当前应用的日志信息</span><br><span class="line"></span><br><span class="line">Edit Filters Configuration----------编辑路径：可以自定义标签</span><br><span class="line">如只是输出MainActivity标签的信息：</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/40.png</span>)</span><br><span class="line">则显示信息都是MainActivity标签的</span><br><span class="line">Tag-标签     Message-----内容  pid------程序进程id</span><br><span class="line"></span><br><span class="line">(3) 使用 DDMS 查看日志</span><br><span class="line">DDMS 以及独立的 DDMS 查看日志</span><br><span class="line">DDMS----------设备监听器</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/41.png</span>)</span><br><span class="line">点击可以启动一个应用</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/42.png</span>)</span><br><span class="line">选择一个设备，如下面一个模拟器</span><br><span class="line">可以看到日志信息</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/43.png</span>)</span><br><span class="line">可以点击上面绿色的加号</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/44.png</span>)</span><br><span class="line">DDMS可以独立于开发环境启动</span><br><span class="line">点击E:\Android\SDK\tools\ddms.bat就可以启动</span><br><span class="line">DDMS可以用于调试</span><br><span class="line">如下：</span><br><span class="line">可以模拟拨打电话、发短信到模拟手机</span><br><span class="line">其他还有好多功能自己尝试</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/45.png</span>)</span><br><span class="line"></span><br><span class="line"><span class="header">11.Android 权限系统</span><br><span class="line">----------------------</span></span><br><span class="line">在 Android 中有非常完善的权限控制机制，开发者需要懂得如何使用，普通用户需要懂得如何分辨，结合起来才能够有效的阻止 Android 平台病毒的传播。</span><br><span class="line">核心内容：定义权限;在代码中做权限检查;为基本组件添加权限检查</span><br><span class="line">(1) 请求权限实例</span><br><span class="line">创建项目LearnWebview</span><br><span class="line">Main.xml</span><br></pre></td></tr></table></figure></p>
<p>//WebView—–网页</p>
<p><webview android:layout_width="match_parent" android:layout_height="match_parent" android:id="@+id/wv"></webview><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></p>
<p>private WebView wv;<br>@Override<br>protected void onCreate(Bundle savedInstanceState) {<br>    super.onCreate(savedInstanceState);<br>    setContentView(R.layout.activity_main);</p>
<pre><code>wv= (WebView) findViewById(R.id.wv);
//用wv加载一个主页
wv.loadUrl(&quot;http://www.bestzhangjin.com&quot;);
</code></pre><p>}<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">运行：</span><br><span class="line">会提醒我们无法访问网页，并且有很多的错误，这是因为<span class="function"><span class="title">loadUrl</span><span class="params">(<span class="string">"http://www.bestzhangjin.com"</span>)</span></span> 加载一个网页需要一个权限</span><br><span class="line">就是互联网的访问权限</span><br><span class="line">需要在fest.xml中进行声明</span><br></pre></td></tr></table></figure></p>
<p><uses-permission android:name="android.permission.INTERNET">//声明访问互联网权限</uses-permission></p>
<application <figure="" class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">这时候重新运行可以访问到主页</span><br><span class="line">![<span class="link_label">image</span>](<span class="link_url">img/android/46.png</span>)</span><br><span class="line">用loadUrl("http://bestzhangjin.com")时没有www.会自动跳转到http://www.bestzhangjin.com </span><br><span class="line"></span><br><span class="line">在APPInfo中可以查看到权限</span><br><span class="line"></span><br><span class="line">(2) 为代码添加权限检查</span><br><span class="line">新建一个类Hello.java</span><br></pre></td></tr></table>

<p>public class Hello {</p>
<pre><code>public static final String PERMISSION_SAY_HELLO=&quot;com.example.zhang.learnwebview.permission.sayHello&quot;;
//用下面的方法检测程序是否有执行权限
public static void sayHello(Context context){//利用Context才能够访问到一下全局的属性
    int checkResult=context.checkCallingOrSelfPermission(PERMISSION_SAY_HELLO);//执行程序的代码是否拥有这个权限
    if(checkResult != PackageManager.PERMISSION_GRANTED){//PERMISSION_GRANTED---允许，PERMISSION_DENIED--拒绝
        throw new SecurityException(&quot;执行sayhello方法需要有com.example.zhang.learnwebview.permission.sayHello权限！&quot;);
    }
    System.out.println(&quot;你有权限，已经执行&quot;);
}
</code></pre><p>}<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">fest</span><span class="class">.xml</span></span><br></pre></td></tr></table></figure></p>
<!---  新注册一个权限，权限的名字为com.example.zhang.learnwebview.permission.sayHello   -->
<p><permission android:name="com.example.zhang.learnwebview.permission.sayHello"><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Main</span><span class="class">.java</span></span><br></pre></td></tr></table></figure></permission></p>
<p>Hello.sayHello(this);<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">运行出现异常：<span class="tag">Unfortunately</span>,。。。。。。。。<span class="tag">stopped</span></span><br><span class="line">后台输出提示执行<span class="tag">sayhello</span>方法需要有<span class="tag">com</span><span class="class">.example</span><span class="class">.zhang</span><span class="class">.learnwebview</span><span class="class">.permission</span><span class="class">.sayHello</span>权限！</span><br><span class="line"></span><br><span class="line">下面填写权限：</span><br><span class="line"><span class="tag">Fest</span><span class="class">.xml</span></span><br></pre></td></tr></table></figure></p>
<!---  新注册一个权限，权限的名字为com.example.zhang.learnwebview.permission.sayHello   -->
<p><permission android:name="com.example.zhang.learnwebview.permission.sayHello"><br><!--  获取权限 --></permission></p>
<p><uses-permission android:name="com.example.zhang.learnwebview.permission.sayHello"><br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">再次运行成功！输出：你有权限，已经执行</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>) 为基本组件添加权限检查</span><br><span class="line"><span class="keyword">Android四大组件都可以使用相同的方式来配置权限</span><br><span class="line"></span>这里也activity为例</span><br><span class="line">新建一个activity名字MyAty</span><br><span class="line"><span class="label">MyAty.xml</span></span><br></pre></td></tr></table></figure></uses-permission></p>
<p><textview android:text="这是一个被启动的activity" android:layout_width="wrap_content" android:layout_height="wrap_content"><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Fest</span><span class="class">.xml</span>声明权限</span><br><span class="line">注意：<span class="tag">fest</span><span class="class">.xml</span>中在顶部和被启动的<span class="tag">activity</span>中都要声明</span><br></pre></td></tr></table></figure></textview></p>
<p><permission android:name="com.example.zhang.learnwebview.permission.MYATY"><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">".MyAty"</span></span><br><span class="line">    <span class="attribute">android:label</span>=<span class="value">"@string/title_activity_my_aty"</span></span><br><span class="line">    <span class="attribute">android:permission</span>=<span class="value">"com.example.zhang.learnwebview.permission.MYATY"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br><span class="line">`</span><br></pre></td></tr></table></figure></permission></p>
<p>Main.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"fill_parent"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"启动MyAty"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnStartMyAty"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">findViewById(R.id.btnStartMyAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        startActivity(<span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>,MyAty.class ));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>可以运行，因为是在一个应用之内<br>用另外一个应用启动这个activity则不行，需要加权限<br>新建一个module<br>OtherApp.main.xml加一个按钮<br>这里采用action方法启动另外一个应用的activity<br>所以先在被启动的应用的fest.xml的activity配置下加上action<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">activity</span></span><br><span class="line">    <span class="attribute">android:name</span>=<span class="value">".MyAty"</span></span><br><span class="line">    <span class="attribute">android:label</span>=<span class="value">"@string/title_activity_my_aty"</span></span><br><span class="line">    <span class="attribute">android:permission</span>=<span class="value">"com.example.zhang.learnwebview.permission.MYATY"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">category</span> <span class="attribute">android:name</span>=<span class="value">"android.intent.category.DEFAULT"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">action</span> <span class="attribute">android:name</span>=<span class="value">"com.example.zhang.learnwebview.intent.action.MyAty"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">activity</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>OtherApp.main.java<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">findViewById(R.id.btnStartMyAty).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//通过action启动其他应用的activity</span></span><br><span class="line">        startActivity(<span class="keyword">new</span> Intent(<span class="string">"com.example.zhang.learnwebview.intent.action.MyAty"</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>运行按下按钮显示onfutunately——–退出<br>因为没有权限<br>在OtherApp.fest.xml前面加上使用声明<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="property">name</span>=<span class="string">"com.example.zhang.learnwebview.permission.MYATY"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<p>之后运行正常</p>
<h1 id="u7B2C_u4E09_u7AE0__u7528_u6237_u754C_u9762_u4F18_u5316"><a href="#u7B2C_u4E09_u7AE0__u7528_u6237_u754C_u9762_u4F18_u5316" class="headerlink" title="第三章 用户界面优化"></a>第三章 用户界面优化</h1><h2 id="1-Android_Fragment"><a href="#1-Android_Fragment" class="headerlink" title="1.Android Fragment"></a>1.Android Fragment</h2><p>Fragment 是 Android 中在同一个应用内部用于替换 Activity 界面跳转的机制，她高效灵活，是 Android 开发中不可缺少的。<br>核心内容：认识 Fragment；Fragment 生命周期；Fragment 的应用<br>Activity是比较重量级的基本组件，同一个程序内部界面切换不合适</p>
<p>(1) 使用 Fragment<br>创建一个with–Fragment项目<br><img src="/img/android/47.png" alt="image"><br>Main.xml—自动生成<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;fragment <span class="string">xmlns:</span>android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line"><span class="label">    xmlns:</span>tools=<span class="string">"http://schemas.android.com/tools"</span> <span class="string">android:</span>id=<span class="string">"@+id/fragment"</span></span><br><span class="line"><span class="label">    android:</span>name=<span class="string">"com.example.zhang.fragment.MainActivityFragment"</span></span><br><span class="line"><span class="label">    tools:</span>layout=<span class="string">"@layout/fragment_main"</span> <span class="string">android:</span>layout_width=<span class="string">"match_parent"</span></span><br><span class="line"><span class="label">    android:</span>layout_height=<span class="string">"match_parent"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Fragment_main.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"呈现另一个fragment"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnShowAnotherFragment"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Fragment_another.xml<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;TextView</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"这是另外一个fragment"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/textView"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;Button</span><br><span class="line">    android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">    android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="type">text</span>=<span class="string">"后退"</span></span><br><span class="line">    android:<span class="property">id</span>=<span class="string">"@+id/btnBack"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>Main.java自动<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="keyword">int</span> id = item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onOptionsItemSelected</span><span class="params">(item)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>MainActivityFragment.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">MainActivityFragment</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Fragment</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    public <span class="type">MainActivityFragment</span>() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public <span class="type">View</span> onCreateView(<span class="type">LayoutInflater</span> inflater, <span class="type">ViewGroup</span> container,</span><br><span class="line">                             <span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="type">View</span> rootView = inflater.inflate(<span class="type">R</span>.layout.fragment_main, container, <span class="literal">false</span>);</span><br><span class="line">        <span class="comment">//添加事件监听器</span></span><br><span class="line">        rootView.findViewById(<span class="type">R</span>.id.btnShowAnotherFragment).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                getFragmentManager().beginTransaction()</span><br><span class="line">                        .addToBackStack(<span class="literal">null</span>)<span class="comment">//后退键------没有这行后退键将直接退出程序</span></span><br><span class="line">                        .replace(<span class="type">R</span>.id.fragment,<span class="keyword">new</span> <span class="type">AnotherFragment</span>()).commit();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> rootView;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>AnotherFragment.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">AnotherFragment</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Fragment</span> &#123;</span></span><br><span class="line">    <span class="annotation">@Override</span></span><br><span class="line">    public <span class="type">View</span> onCreateView(<span class="type">LayoutInflater</span> inflater, <span class="type">ViewGroup</span> container, <span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="comment">/////////////java文件解析对应的.xml</span></span><br><span class="line">        <span class="type">View</span> root=inflater.inflate(<span class="type">R</span>.layout.fragment_another, container, <span class="literal">false</span>);</span><br><span class="line">        root.findViewById(<span class="type">R</span>.id.btnBack).setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="annotation">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                getFragmentManager().popBackStack();<span class="comment">//实现后退操作</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行仿真如下，我的是在一个界面内，极客学院的在不同的界面内<br><img src="/img/android/48.png" alt="image"></p>
<p>(2)</p>
</application></edittext></button>]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://www.bestzhangjin.com/tags/Android/"/>
    
      <category term="Android" scheme="http://www.bestzhangjin.com/categories/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[软件工程师常见问题汇总]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/15/question/"/>
    <id>http://www.bestzhangjin.com/2016/03/15/question/</id>
    <published>2016-03-15T13:23:59.000Z</published>
    <updated>2016-03-15T12:21:59.358Z</updated>
    <content type="html"><![CDATA[<p>好记性不如烂笔头，本文收集了我在学习过程中遇到的常见问题<br><a id="more"></a></p>
<h1 id="1-_u7AEF_u53E3_u51B2_u7A81_u95EE_u9898"><a href="#1-_u7AEF_u53E3_u51B2_u7A81_u95EE_u9898" class="headerlink" title="1.端口冲突问题"></a>1.端口冲突问题</h1><p>win+R打开运行，然后输入cmd即可。<br>在dos命令中输入以下命令查询正在被使用的端口号(第二列)以及使用它的程序。<br>命令：netstat -ano<br>看到后面一列是有一个PID，然后把占用端口的PID号记下来。<br>打开任务管理器，选择服务，找到对应PID进程结束进程即可。</p>
<hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>好记性不如烂笔头，本文收集了我在学习过程中遇到的常见问题<br>]]>
    
    </summary>
    
      <category term="常见问题" scheme="http://www.bestzhangjin.com/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
      <category term="软件工程师" scheme="http://www.bestzhangjin.com/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88/"/>
    
      <category term="常见问题" scheme="http://www.bestzhangjin.com/categories/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Myeclipse应用技巧]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/15/myeclipse_view/"/>
    <id>http://www.bestzhangjin.com/2016/03/15/myeclipse_view/</id>
    <published>2016-03-15T13:00:51.000Z</published>
    <updated>2016-03-16T04:26:11.235Z</updated>
    <content type="html"><![CDATA[<p>主要内容：<br><a id="more"></a></p>
<h1 id="1-Myeclipse_u642D_u5EFA_u5B89_u5353_u73AF_u5883"><a href="#1-Myeclipse_u642D_u5EFA_u5B89_u5353_u73AF_u5883" class="headerlink" title="1.Myeclipse搭建安卓环境"></a>1.Myeclipse搭建安卓环境</h1><p>工具：Myeclipse,ADT,SDK<br>1.安装Myeclipse<br>2.ADT解压，将解压目录下的features与plugins文件夹放到Myeclipse安装目录的dropins目录下面<br>3.复制SDK，制定Myeclipse对应到这个SDK<br>  windows-&gt;perference-&gt;android-&gt;SDK目录</p>
<h1 id="2-myeclipse_u5BFC_u5165_u9879_u76EE"><a href="#2-myeclipse_u5BFC_u5165_u9879_u76EE" class="headerlink" title="2.myeclipse导入项目"></a>2.myeclipse导入项目</h1><p>File-&gt;Import-&gt;General-&gt;Existing Projects into Workpace<br>点击next，选择”Browse…”,浏览工程所在目录，找到工程所在文件夹，确定。<br>此时projects里面会出现工程所在目录对应所有的工程，选择你需要的工程，选择”Finish”，即可！</p>
<h1 id="3-javabean_u4E4B_u81EA_u52A8_u751F_u6210set_u3001get_u65B9_u6CD5"><a href="#3-javabean_u4E4B_u81EA_u52A8_u751F_u6210set_u3001get_u65B9_u6CD5" class="headerlink" title="3.javabean之自动生成set、get方法"></a>3.javabean之自动生成set、get方法</h1><p>java文件工作区右键-&gt;source-&gt;generate getting and setting…</p>
<h1 id="4-myeclipse_u5BFC_u5165_u67B6_u5305"><a href="#4-myeclipse_u5BFC_u5165_u67B6_u5305" class="headerlink" title="4.myeclipse导入架包"></a>4.myeclipse导入架包</h1><p>将架包复制到项目的lib目录下，选中架包右键-&gt;Build Path-&gt;Add To Build Path</p>
<hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：<br>]]>
    
    </summary>
    
      <category term="Myeclipse" scheme="http://www.bestzhangjin.com/tags/Myeclipse/"/>
    
      <category term="应用技巧" scheme="http://www.bestzhangjin.com/tags/%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Myeclipse" scheme="http://www.bestzhangjin.com/categories/Myeclipse/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[网页设计之photoshop+firework+flash+dreamwearver篇]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/15/webpage_ps_fl_dream_fire/"/>
    <id>http://www.bestzhangjin.com/2016/03/15/webpage_ps_fl_dream_fire/</id>
    <published>2016-03-15T11:39:03.000Z</published>
    <updated>2016-03-15T11:41:07.942Z</updated>
    <content type="html"><![CDATA[<p>主要内容：网页设计之dreamwearver篇<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u4ECB_u7ECD"><a href="#u7B2C_u4E00_u7AE0__u4ECB_u7ECD" class="headerlink" title="第一章 介绍"></a>第一章 介绍</h1><hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：网页设计之dreamwearver篇<br>]]>
    
    </summary>
    
      <category term="dreamwearver" scheme="http://www.bestzhangjin.com/tags/dreamwearver/"/>
    
      <category term="firework" scheme="http://www.bestzhangjin.com/tags/firework/"/>
    
      <category term="flash" scheme="http://www.bestzhangjin.com/tags/flash/"/>
    
      <category term="photoshop" scheme="http://www.bestzhangjin.com/tags/photoshop/"/>
    
      <category term="网页设计" scheme="http://www.bestzhangjin.com/tags/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="网页设计" scheme="http://www.bestzhangjin.com/categories/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Struts 2框架详解]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/14/structs2/"/>
    <id>http://www.bestzhangjin.com/2016/03/14/structs2/</id>
    <published>2016-03-14T02:06:50.000Z</published>
    <updated>2016-03-21T11:23:25.200Z</updated>
    <content type="html"><![CDATA[<p>主要内容：<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0_Struts2_u4ECB_u7ECD"><a href="#u7B2C_u4E00_u7AE0_Struts2_u4ECB_u7ECD" class="headerlink" title="第一章 Struts2介绍"></a>第一章 Struts2介绍</h1><p>著名的SSH三大框架分别为：表现层(Struts)、业务逻辑层(Spring),持久化层(Hibernate)。<br>Struts 2是Struts的下一代产品，是在 struts 1和WebWork的技术基础上进行了合并的全新的Struts 2框架。其全新的Struts 2的体系结构与Struts 1的体系结构差别巨大。Struts 2以WebWork为核心，采用拦截器的机制来处理用户的请求，这样的设计也使得业务逻辑控制器能够与ServletAPI完全脱离开，所以Struts 2可以理解为WebWork的更新产品。虽然从Struts 1到Struts 2有着太大的变化，但是相对于WebWork，Struts 2的变化很小。<br>MVC模型:<br><img src="/img/structs2/1.png" alt="img"></p>
<p>Struts2之MVC模型：<br>控制器：FilterDispatcher,是一个Sevelet过滤器，请求到来时经过FilterDispatcher过滤，FilterDispatcher决定该由哪个Action处理当前请求。<br>模型：Action,功能：调用业务逻辑处理请求，进行数据传递。Action处理完请求会返回一个逻辑视图。<br>视图:除jsp页面外，还可以是Velocity、FreeMarker、Tiles等多种视图资源。视图组件接收到Action返回的逻辑视图会寻找对应物理视图资源并返回给客户端。<br>Struts2前端控制器模式架构图：<br><img src="/img/structs2/8.png" alt="img"><br>1.JSP提交以”.action”结尾的请求<br>2.FilterDispatcher接收请求并调用Action处理该请求<br>3.Action处理完毕返回一个逻辑视图<br>4.FilterDispatcher根据Action返回的逻辑视图创建物理视图<br>5.将物理视图返回给页面</p>
<p>Struts2页面控制器模式架构图：<br><img src="/img/structs2/9.png" alt="img"><br>1.JSP页面通过<s:action>标签直接请求某个具体的Action<br>2.Action处理完毕返回一个逻辑视图<br>3.FilterDispatcher根据Action返回的逻辑视图创建物理视图<br>4.将物理视图放回给客户端</s:action></p>
<p>Struts2的工作原理:<br><img src="/img/structs2/2.png" alt="img"><br>一个请求在Struts2框架中的处理大概分为以下几个步骤<br>1 客户端初始化一个指向Servlet容器（例如Tomcat）的请求<br>2 这个请求经过一系列的过滤器（Filter）（这些过滤器中有一个叫做ActionContextCleanUp的可选过滤器，这个过滤器对于Struts2和其他框架的集成很有帮助，例如：SiteMesh Plugin）<br>3 接着FilterDispatcher被调用，FilterDispatcher询问ActionMapper来决定这个请是否需要调用某个Action<br>4 如果ActionMapper决定需要调用某个Action，FilterDispatcher把请求的处理交给ActionProxy<br>5 ActionProxy通过Configuration Manager询问框架的配置文件，找到需要调用的Action类<br>6 ActionProxy创建一个ActionInvocation的实例。<br>7 ActionInvocation实例使用命名模式来调用，在调用Action的过程前后，涉及到相关拦截器（Intercepter）的调用。<br>8 一旦Action执行完毕，ActionInvocation负责根据struts.xml中的配置找到对应的返回结果。返回结果通常是（但不总是，也可 能是另外的一个Action链）一个需要被表示的JSP或者FreeMarker的模版。在表示的过程中可以使用Struts2 框架中继承的标签。在这个过程中需要涉及到ActionMapper</p>
<h1 id="u7B2C_u4E8C_u7AE0__u642D_u5EFAStructs2_u5E94_u7528"><a href="#u7B2C_u4E8C_u7AE0__u642D_u5EFAStructs2_u5E94_u7528" class="headerlink" title="第二章 搭建Structs2应用"></a>第二章 搭建Structs2应用</h1><h2 id="1-_u51C6_u5907_u5DE5_u4F5C"><a href="#1-_u51C6_u5907_u5DE5_u4F5C" class="headerlink" title="1.准备工作"></a>1.准备工作</h2><p>所需环境:<br>JDK,Tomcat,Struts2<br>这里只介绍Struts2下载<br>官网下载：<a href="http://struts.apache.org/download" target="_blank" rel="external">http://struts.apache.org/download</a><br>下载文件：struts-2.3.24.1-all.zip</p>
<p>程序开发流程：<br>(1)引入Struts2运行库<br>(2)配置Web.xml文件<br>(3)编写Action类<br>(4)配置struts.xml文件<br>(5)编写视图资源</p>
<h2 id="2-_u56FE_u89E3_u6D41_u7A0B"><a href="#2-_u56FE_u89E3_u6D41_u7A0B" class="headerlink" title="2.图解流程"></a>2.图解流程</h2><p>Http请求流转流程：<br><img src="/img/structs2/10.png" alt="img"><br>配置文件连接点详述：<br><img src="/img/structs2/11.png" alt="img"></p>
<h2 id="3-Struts2_u81EA_u5E26_u7684_u9879_u76EE"><a href="#3-Struts2_u81EA_u5E26_u7684_u9879_u76EE" class="headerlink" title="3.Struts2自带的项目"></a>3.Struts2自带的项目</h2><p>(1) struts-2.3.24.1-all.zip解压目录分析<br><img src="/img/structs2/3.png" alt="img"><br>apps:示例应用<br>docs:帮助文档<br>lib:Struts2框架的核心类库及第三方插件类库<br>src:Struts2框架的全部源代码</p>
<p>(2)搭建步骤<br>A.引入Struts2工程需要的运行库文件<br>B.创建配置web.xml文件<br>C.创建一个Action类<br>D.创建配置struts.xml文件</p>
<p>找到apps下的struts2-blank.war文件发布到Tomcat上。<br>备注:war格式的文件，这个文件格式可能并不常见，这个通常是tomcat程序发布时候的自解压文件。这个文件可以用解压软件打开，也可以放到tomcat的发布目录，服务器启动是时候war文件会自动解压。<br>这里直接点击struts2-blank.war右键打开方式winrar，解压后目录：<br><img src="/img/structs2/4.png" alt="img"><br><img src="/img/structs2/5.png" alt="img"><br><img src="/img/structs2/6.png" alt="img"><br><img src="/img/structs2/7.png" alt="img"><br>jsp：放置工程中jsp文件<br>classes:放置所有编译后的文件及各个配置文件<br>lib:放置工程运行所需类库文件<br>src:放置java源码文件<br>lib中已经有需要的包，web.xml也有。<br>struts2-blank项目直接访问如下：<br><img src="/img/structs2/12.png" alt="img"></p>
<h2 id="4-_u624B_u52A8_u642D_u5EFAStruts2_u7A0B_u5E8F"><a href="#4-_u624B_u52A8_u642D_u5EFAStruts2_u7A0B_u5E8F" class="headerlink" title="4.手动搭建Struts2程序"></a>4.手动搭建Struts2程序</h2><p>编写Action类：<br>(1)要包含与请求参数对应的属性以及setter、getter方法<br>(2)Action类增加一个execute方法，Struts2框架默认会执行，该方法不做业务逻辑处理，而是调用其他业务逻辑来完成这部分工作。<br>(3)Action类返回一个标准的字符串，该字符串是一个逻辑视图名，该视图名对应实际的物理视图。<br>编写如下:<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> UserAction&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="built_in">String</span> username;</span><br><span class="line">	<span class="keyword">private</span> <span class="built_in">String</span> password;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">String</span> getPassword()&#123;</span><br><span class="line">		<span class="keyword">return</span> password;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">void</span> setPassword(<span class="built_in">String</span> password)&#123;</span><br><span class="line">		<span class="keyword">this</span>.password=password;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">String</span> getUsername()&#123;</span><br><span class="line">		<span class="keyword">return</span> username;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">void</span> setUsername(<span class="built_in">String</span> username)&#123;</span><br><span class="line">		<span class="keyword">this</span>.username=username;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">String</span> execute() &#123;</span><br><span class="line">		<span class="keyword">if</span>(username.equals(<span class="string">"zhang"</span>)&amp;&amp;password.equals(<span class="string">"123456"</span>))&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">"error"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>编译成UserAction.class放在WEB-INF/classes下。</p>
<p>配置WEB-INF/struts.xml<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!<span class="type">DOCTYPE</span> struts <span class="type">PUBLIC</span></span><br><span class="line">	<span class="string">"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"</span></span><br><span class="line">	<span class="string">"http://struts.apache.org/dtds/struts-2.3.dtd"</span>&gt;</span><br><span class="line"></span><br><span class="line">&lt;struts&gt;</span><br><span class="line">    &lt;package name=<span class="string">"default"</span> namespace=<span class="string">"/"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">        &lt;action name=<span class="string">"login"</span> class=<span class="string">"com.zhang.UserAction"</span>&gt;</span><br><span class="line">                &lt;<span class="literal">result</span> name=<span class="string">"success"</span>&gt;/jsp/success.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">                &lt;<span class="literal">result</span> name=<span class="string">"error"</span>&gt;/jsp/error.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">        &lt;/action&gt;</span><br><span class="line">    &lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></p>
<p>程序发布运行时会自动在WEB-INF/classes下找到加载structs.xml</p>
<p><action...>标签中两个属性name和class,name:用户URL请求的action名，<br>如用户请求如果为：<a href="http://localhost:8080/login.action则name为login，class表示请求实现的类。" target="_blank" rel="external">http://localhost:8080/login.action则name为login，class表示请求实现的类。</a></action...></p>
<p><result...>标签定义逻辑视图与物理视图之间的映射，Action返回”success”则success.jsp处理；返回error则error.jsp处理。</result...></p>
<p>编写视图资源:<br>登录页面<br>index.jsp<br><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%</span><br><span class="line"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span><br><span class="line"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">form</span> <span class="attribute">action</span>=<span class="value">"</span></span></span><span class="vbscript">&lt;%=path %&gt;</span><span class="xml"><span class="tag"><span class="value">/new/login.action"</span> <span class="attribute">method</span>=<span class="value">"post"</span>&gt;</span></span><br><span class="line">    	用户名：<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"username"</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line">    	密码：<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"text"</span> <span class="attribute">name</span>=<span class="value">"password"</span>&gt;</span><span class="tag">&lt;<span class="title">br</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"提交"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>success.jsp<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">   	登陆成功！</span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>fail.jsp<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    登录失败！</span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u4F7F_u7528Myeclipse_u5F00_u53D1Structs2_u7A0B_u5E8F"><a href="#3-_u4F7F_u7528Myeclipse_u5F00_u53D1Structs2_u7A0B_u5E8F" class="headerlink" title="3.使用Myeclipse开发Structs2程序"></a>3.使用Myeclipse开发Structs2程序</h2><p>(1)新建Web工程<br>File-&gt;”new”-&gt;”Project”-&gt;”Web Project”或者<br>File-&gt;”new”-&gt;”Project”-&gt;”MyEcipse”-&gt;”java Enterprise Projects”-&gt;”Web Project”</p>
<p>(2)加载struts2类库文件<br>项目名右键-&gt;MyEclipse-&gt;Project Facets[Capabilities]-&gt;Install Apache struts(2.x) Facet  选择版本finish即可。</p>
<p>(3)项目直接运行<br>第二步会自动加载库和生成对应文件<br>项目结构图如下：<br><img src="/img/structs2/13.png" alt="img"><br>直接布到tomcat下如下：<br><img src="/img/structs2/14.png" alt="img"></p>
<p>(4)修改成登录项目<br>项目结构图如下：<br><img src="/img/structs2/15.png" alt="img"></p>
<p>对应文件信息：<br>web.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">web-app</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/javaee"</span> <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attribute">version</span>=<span class="value">"3.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">display-name</span>&gt;</span>MyWeb<span class="tag">&lt;/<span class="title">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>struts.xml<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!<span class="type">DOCTYPE</span> struts <span class="type">PUBLIC</span> <span class="string">"-//Apache Software Foundation//DTD Struts Configuration 2.1//EN"</span> <span class="string">"http://struts.apache.org/dtds/struts-2.1.dtd"</span>&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"default"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"login"</span> class=<span class="string">"com.zhang.struts2.User"</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"success"</span>&gt;success.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"fail"</span>&gt;fail.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></p>
<p>User.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zhang.struts2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">extends</span> <span class="title">ActionSupport</span> </span>&#123;</span><br><span class="line">	 <span class="keyword">private</span> String name;</span><br><span class="line">	 <span class="keyword">private</span> String password;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> password;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.password = password;</span><br><span class="line">	&#125;</span><br><span class="line">	 <span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(name.equals(<span class="string">"zhang"</span>)&amp;&amp;<span class="string">"123456"</span>.equals(password))&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"fail"</span>;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>index.jsp<br><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%</span><br><span class="line"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span><br><span class="line"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">base</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:form</span> <span class="attribute">action</span>=<span class="value">"login"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:textfield</span> <span class="attribute">name</span>=<span class="value">"name"</span> <span class="attribute">label</span>=<span class="value">"用户名"</span>&gt;</span><span class="tag">&lt;/<span class="title">s:textfield</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:textfield</span> <span class="attribute">name</span>=<span class="value">"password"</span> <span class="attribute">label</span>=<span class="value">"密码"</span>&gt;</span><span class="tag">&lt;/<span class="title">s:textfield</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:submit</span> <span class="attribute">value</span>=<span class="value">"确定"</span>&gt;</span><span class="tag">&lt;/<span class="title">s:submit</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">s:form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>success.jsp<br><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%</span><br><span class="line"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span><br><span class="line"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">base</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>登录成功<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>登录成功!欢迎您:<span class="tag">&lt;<span class="title">s:property</span> <span class="attribute">value</span>=<span class="value">"name"</span>/&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>fail.jsp<br><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%</span><br><span class="line"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span><br><span class="line"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">base</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>失败页面<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>登录失败!<span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>运行效果:<br><img src="/img/structs2/16.png" alt="img"><br>输入zhang 123456时登录成功，其他登录失败！</p>
<h1 id="u7B2C_u4E09_u7AE0_Struts2_u6838_u5FC3_u57FA_u7840"><a href="#u7B2C_u4E09_u7AE0_Struts2_u6838_u5FC3_u57FA_u7840" class="headerlink" title="第三章 Struts2核心基础"></a>第三章 Struts2核心基础</h1><h2 id="1-Struts2_u6A21_u578B"><a href="#1-Struts2_u6A21_u578B" class="headerlink" title="1.Struts2模型"></a>1.Struts2模型</h2><p>(1)抽象模型<br><img src="/img/structs2/17.png" alt="img"><br>Struts2执行流程:<br>A.Struts2收集到HTTP请求，交由FilterDispatcher处理<br>B.FilterDispatcher对请求解析得到Action名称，从struts.xml配置文件中获得该Action配置信息并调用该Action<br>C.系统获得Action配置信息后，会记录该Action所配置的拦截信息，并在此Action执行的前后调用这些拦截器<br>D.当Action执行结束后会返回一个结果类型，由此结果类型映射到视图界面，整个流程执行完毕。</p>
<p>(2)拦截器<br><img src="/img/structs2/18.png" alt="img"></p>
<h2 id="2-Action_u5E94_u7528_u8BE6_u89E3"><a href="#2-Action_u5E94_u7528_u8BE6_u89E3" class="headerlink" title="2.Action应用详解"></a>2.Action应用详解</h2><p>(1)类的使用<br>通常Action都会继承ActionSupport，因为ActionSupport帮助我们实现了一部分常用功能，简化代码，提高效率。<br>ActionSupport实现的接口：<br>Action:提供SUCCESS,ERROR,NONE,INPUT,LOGIN这5个常量作为返回结果并提供了execute()方法<br>Validateable:提供了validate()方法用于校验表单数据<br>ValidationAware:定义了一些方法用来对Action执行过程中的信息进行处理，方法如下：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>void addActionError(String anErrorMessage)</td>
<td>增加一个Action级别的错误信息到对应Action</td>
</tr>
<tr>
<td>void addActionMessage(String aMessage)</td>
<td>增加一个Action级别的信息到该Action</td>
</tr>
<tr>
<td>void addFieldError(String fieldName,String errorMessage)</td>
<td>增加一个错误信息到指定字段</td>
</tr>
<tr>
<td>Collection getActionErrors()</td>
<td>获得Action中用于装载Action级别错误信息字符串的集合</td>
</tr>
<tr>
<td>Collection getActionMessages()</td>
<td>获得Action中用于装载Action级别信息字符串的集合</td>
</tr>
<tr>
<td>Map getFieldErrors()</td>
<td>获取与本Action相关联的指定字段错误信息</td>
</tr>
<tr>
<td>boolean hasActionErrors()</td>
<td>检查是否存在Action级别的错误信息</td>
</tr>
<tr>
<td>boolean hasActionMessages()</td>
<td>检查是否存在Action级别的信息</td>
</tr>
<tr>
<td>boolean hasErrors()</td>
<td>检查是否存在Action级别的信息或者字段错误信息</td>
</tr>
<tr>
<td>boolean hasFieldErrors()</td>
<td>检查是否存在与本Action相关联的特定字段错误信息</td>
</tr>
<tr>
<td>void setActionErrors(Collection errorMessages)</td>
<td>设置用于封装Action级别错误信息字符串的集合</td>
</tr>
<tr>
<td>void setActionMessages(Collection messages)</td>
<td>设置装载Action级别信息字符串的集合</td>
</tr>
<tr>
<td>void setFiledErrors(Map errorMap)</td>
<td>设置字段错误信息映射</td>
</tr>
</tbody>
</table>
<p>LocalProvider:Struts2中当前用户语言、地区信息被封装在java.util.Locale类中，通过com.opensymphony.xwork.LocaleProvider接口中的getLocale方法来获取Local中的语言/地区信息。<br>TextProvider:提供了一系列getText()方法获取对应的国际化信息资源，在Struts2中国际化资源都是以key=value表示，方法通过key找到符合的value</p>
<p>(2)Action传值方式<br>A.字段驱动<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> User()&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="built_in">String</span> name;</span><br><span class="line">	<span class="keyword">private</span> <span class="built_in">String</span> password;</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">void</span> setName(<span class="built_in">String</span> name)&#123;</span><br><span class="line">		<span class="keyword">this</span>.name=name;</span><br><span class="line">	&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如上定义两个字段name和password,这这个字段分别和登录表单的用户名密码表单域对应，登录页面提交的表单数据被映射到对应的Action字段，由此Action得到传入数据。</p>
<p>B.模型驱动<br>User.java<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> User&#123;</span><br><span class="line">	 <span class="keyword">private</span> <span class="built_in">String</span> name;</span><br><span class="line">	 <span class="keyword">private</span> <span class="built_in">String</span> password;</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">String</span> getName() &#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">void</span> setName(<span class="built_in">String</span> name) &#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">String</span> getPassword() &#123;</span><br><span class="line">		<span class="keyword">return</span> password;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="built_in">void</span> setPassword(<span class="built_in">String</span> password) &#123;</span><br><span class="line">		<span class="keyword">this</span>.password = password;</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>UserAction.java<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">UserAction</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">ActionSupport</span> &#123;</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">User</span> user;</span><br><span class="line">	 public <span class="type">User</span> getUser() &#123;</span><br><span class="line">		<span class="keyword">return</span> user;</span><br><span class="line">	&#125;</span><br><span class="line">	public void setUser(<span class="type">User</span> user) &#123;</span><br><span class="line">		<span class="keyword">this</span>.user = user;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	public <span class="type">String</span> execute() <span class="keyword">throws</span> <span class="type">Exception</span> &#123;</span><br><span class="line">		<span class="keyword">if</span>(user.getName().equals(<span class="string">"zhang"</span>)&amp;&amp;<span class="string">"123456"</span>.equals(user.getPassword()))&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"fail"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>struts.xml<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!<span class="type">DOCTYPE</span> struts <span class="type">PUBLIC</span> <span class="string">"-//Apache Software Foundation//DTD Struts Configuration 2.1//EN"</span> <span class="string">"http://struts.apache.org/dtds/struts-2.1.dtd"</span>&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"default"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"login"</span> class=<span class="string">"com.zhang.struts2.UserAction"</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"success"</span>&gt;success.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"fail"</span>&gt;fail.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></p>
<p>index.jsp<br><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%</span><br><span class="line"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span><br><span class="line"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">base</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>登录页面<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:form</span> <span class="attribute">action</span>=<span class="value">"login"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:textfield</span> <span class="attribute">name</span>=<span class="value">"user.name"</span> <span class="attribute">label</span>=<span class="value">"用户名"</span>&gt;</span><span class="tag">&lt;/<span class="title">s:textfield</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:textfield</span> <span class="attribute">name</span>=<span class="value">"user.password"</span> <span class="attribute">label</span>=<span class="value">"密码"</span>&gt;</span><span class="tag">&lt;/<span class="title">s:textfield</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">s:submit</span> <span class="attribute">value</span>=<span class="value">"确定"</span>&gt;</span><span class="tag">&lt;/<span class="title">s:submit</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">s:form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>success.jsp<br><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> import=<span class="string">"java.util.*"</span> pageEncoding=<span class="string">"utf-8"</span>%&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%@ taglib prefix=<span class="string">"s"</span> uri=<span class="string">"/struts-tags"</span> %&gt;</span><span class="xml"></span><br><span class="line"></span><span class="vbscript">&lt;%</span><br><span class="line"><span class="built_in">String</span> path = <span class="built_in">request</span>.getContextPath();</span><br><span class="line"><span class="built_in">String</span> basePath = <span class="built_in">request</span>.getScheme()+<span class="string">"://"</span>+<span class="built_in">request</span>.getServerName()+<span class="string">":"</span>+<span class="built_in">request</span>.getServerPort()+path+<span class="string">"/"</span>;</span><br><span class="line">%&gt;</span><span class="xml"></span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">base</span> <span class="attribute">href</span>=<span class="value">"</span></span></span><span class="vbscript">&lt;%=basePath%&gt;</span><span class="xml"><span class="tag"><span class="value">"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>登录成功<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">p</span>&gt;</span>登录成功!欢迎您:<span class="tag">&lt;<span class="title">s:property</span> <span class="attribute">value</span>=<span class="value">"user.name"</span>/&gt;</span><span class="tag">&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>模型驱动传值JSP页面取值时必须”模型对象名.属性名”</p>
<p>(3)访问Servlet API<br>Struts2的Action不依赖于任何Servelet API,好处是可以脱离Web容器测试Action。<br>但是我们要用到request对象或者session对象时则需要Servelet API。<br>Struts2提供了两种方式访问Servelet API：ActionContext和*Aware接口<br>A.ActionContext<br>ActionContext类常用方法与功能</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>ActionContext getContext()</td>
<td>获取系统的ActionContext实例</td>
</tr>
<tr>
<td>Map getSession()</td>
<td>返回一个Map对象，该对象存入HttpSession实例</td>
</tr>
<tr>
<td>void setSession(Map session)</td>
<td>直接传入一个Map实例，将实例中的key、value对应转换成session的属性名和属性值</td>
</tr>
<tr>
<td>Map getApplication()</td>
<td>返回一个Map对象，该对象存入ServletContext实例</td>
</tr>
<tr>
<td>void setApplication(Map application)</td>
<td>直接传入一个Map实例，将实例中的key、value对应转换成application的属性名与属性值</td>
</tr>
<tr>
<td>Map getParameters()</td>
<td>获得所有的请求参数，类似于调用HttpSeveletRequest对象的getParameterMap方法</td>
</tr>
</tbody>
</table>
<p>ServletActionContext常用方法与功能<br>| 方法                         | 功能                                                  |<br>| —————————–| —————————————————–|<br>| HttpServletRequest getRequest()| 获得Web应用的HttpServletRequest对象|<br>| HttpServletResponse getResponse()| 获得Web应用的HttpServletResponse对象|<br>| ServletContext getServletContext()| 获得Web应用的ServletContext对象|</p>
<p>B.*Aware接口</p>
<table>
<thead>
<tr>
<th>实现接口名称</th>
<th>获得Servlet对象的方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>ApplicationWare</td>
<td>void setApplication(Map application)</td>
</tr>
<tr>
<td>CookiesAware</td>
<td>void setCookiesMap(Map cookies)</td>
</tr>
<tr>
<td>RequestAware</td>
<td>void setRequest(Map request)</td>
</tr>
<tr>
<td>ServletRequestAware</td>
<td>void setServletRequest(HttpServletRequest request)</td>
</tr>
<tr>
<td>ServletResponseAware</td>
<td>void setServletResponse(HttpServletResponse response)</td>
</tr>
<tr>
<td>SessionAware</td>
<td>void setSession(Map session)</td>
</tr>
</tbody>
</table>
<p>(4)Action返回字符串结果原则:<br>A.返回结必须是字符串类型<br>B.除非返回结果对应相同的物理视图资源，否则返回结果不可使用同一字符串<br>C.对于继承了ActionSupport类的Action来说，可以用其中的5个常量代替字符串:SUCCESS,ERROR,NONE,INPUT,LOGIN</p>
<p>(5)Action中定义多个方法<br>自定义方法实现功能时，可以随意命名，但是必须返回类型为String<br>eg:<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">String</span> login() &#123;</span><br><span class="line">	<span class="keyword">if</span>(user<span class="built_in">.</span>getName()<span class="built_in">.</span><span class="keyword">equals</span>(<span class="string">"zhang"</span>)<span class="subst">&amp;&amp;</span><span class="string">"123456"</span><span class="built_in">.</span><span class="keyword">equals</span>(user<span class="built_in">.</span>getPassword()))&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"loginSuccess"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"loginFail"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">String</span> regist()&#123;</span><br><span class="line">	<span class="keyword">if</span>(user<span class="built_in">.</span>getName()<span class="built_in">.</span><span class="keyword">equals</span>(<span class="string">""</span>)<span class="subst">&amp;&amp;</span><span class="string">""</span><span class="built_in">.</span><span class="keyword">equals</span>(user<span class="built_in">.</span>getPassword()))&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"registError"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="string">"registSuccess"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u7ED3_u679C_u7C7B_u578B_u4E0E_u89C6_u56FE"><a href="#3-_u7ED3_u679C_u7C7B_u578B_u4E0E_u89C6_u56FE" class="headerlink" title="3.结果类型与视图"></a>3.结果类型与视图</h2><p>Struts2框架通过Action返回字符串在struts.xml中将逻辑视图与物理视图建立一个映射关系。<br>(1)result<br>Struts.xml<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;action name=<span class="string">"Action名称"</span> <span class="string">class"Action类路径"</span> <span class="keyword">method</span>=<span class="string">"方法名"</span>&gt;//这里的方法名为自己在<span class="type">Action</span>中定义的，不写的话默认执行execute方法</span><br><span class="line">	&lt;<span class="literal">result</span> name=<span class="string">"逻辑视图名称"</span> <span class="keyword">type</span>=<span class="string">"结果类型"</span>&gt;//逻辑视图名称--<span class="type">Action</span>返回的字符串 name不写时默认success,<span class="keyword">type</span>默认dispatcher</span><br><span class="line">		&lt;param name=<span class="string">"参数名称"</span>&gt;参数值&lt;/param&gt;</span><br><span class="line">	&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">&lt;/action&gt;</span><br></pre></td></tr></table></figure></p>
<p>struts-default.xml(struts<em>core</em>…包下)部分代码<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">!-- 结果类型的种类--&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-types&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"chain"</span> class=<span class="string">"com.opensymphony.xwork2.ActionChainResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"dispatcher"</span> class=<span class="string">"org.apache.struts2.dispatcher.ServletDispatcherResult"</span> default=<span class="string">"true"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"freemarker"</span> class=<span class="string">"org.apache.struts2.views.freemarker.FreemarkerResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"httpheader"</span> class=<span class="string">"org.apache.struts2.dispatcher.HttpHeaderResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"redirect"</span> class=<span class="string">"org.apache.struts2.dispatcher.ServletRedirectResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"redirectAction"</span> class=<span class="string">"org.apache.struts2.dispatcher.ServletActionRedirectResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"stream"</span> class=<span class="string">"org.apache.struts2.dispatcher.StreamResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"velocity"</span> class=<span class="string">"org.apache.struts2.dispatcher.VelocityResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"xslt"</span> class=<span class="string">"org.apache.struts2.views.xslt.XSLTResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"plainText"</span> class=<span class="string">"org.apache.struts2.dispatcher.PlainTextResult"</span> /&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"redirect-action"</span> class=<span class="string">"org.apache.struts2.dispatcher.ServletActionRedirectResult"</span>/&gt;      </span><br><span class="line">&lt;<span class="literal">result</span>-<span class="keyword">type</span> name=<span class="string">"plaintext"</span> class=<span class="string">"org.apache.struts2.dispatcher.PlainTextResult"</span> /&gt;      </span><br><span class="line">&lt;/<span class="literal">result</span>-types&gt;</span><br></pre></td></tr></table></figure></p>
<p>返回类型功能：</p>
<table>
<thead>
<tr>
<th>返回类型名称</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>chain</td>
<td>将两个连续执行的Action串联，通过前一个Action的getXXX()方法与后一个Action的setXXX()方法完成Action值的传递</td>
</tr>
<tr>
<td>dispatcher</td>
<td>返回结果对应视图为JSP,没有配置返回结果时此类型被使用</td>
</tr>
<tr>
<td>freemarker</td>
<td>返回结果对应视图为Freemarker视图模板</td>
</tr>
<tr>
<td>httpheader</td>
<td>返回HTTP头信息，控制特殊HTTP行为</td>
</tr>
<tr>
<td>redirect</td>
<td>重定向到另一个JSP页面</td>
</tr>
<tr>
<td>redirectAction</td>
<td>重定向到另一个Action</td>
</tr>
<tr>
<td>stream</td>
<td>向浏览器返回一个数据流，一般用于文件下载</td>
</tr>
<tr>
<td>velocity</td>
<td>返回结果对应视图Velocity视图模板</td>
</tr>
<tr>
<td>xslt</td>
<td>Action执行完毕属性信息进行交换</td>
</tr>
<tr>
<td>plainText</td>
<td>显示某个页面的原始代码的结果类型</td>
</tr>
<tr>
<td>redirect-action</td>
<td>作用同redirectAction</td>
</tr>
</tbody>
</table>
<p>(2)dispatcher(请求转发)<br>dispatcher返回类型可以设置两个参数：<br>location:指定具体物理视图信息(具体的JSP页面)<br>parse(默认true):对结果配置信息中的OGNL表达式运算替换原来OGNL表达式，这样可以在配置结果时使用动态页面和动态URL，如:my.jsp?name=${name}实际替换为my.jsp?name=zhang.没有特殊需要必须将自动解析OGNL表达式功能关闭，因为Struts2的<s:property>标签获得参数时候也会利用OGNL获得对应参数。<br>结果类型dispatcher时注意：<br>请求转发只能将请求转发到同一个Web应用；<br>利用请求转发浏览器地址栏不会变化；<br>利用请求转发调用者与被调用者之间共享相同的request和response对象，属于同一个访问请求和响应。</s:property></p>
<p>(3)redirect(重定向)<br>重定向不仅可以指定到一个Web应用，还能够指定到任何JSP资源；<br>重定向访问结束时地址栏发生变化；<br>重定向的调用者和被调用者使用各自的request和response对象，属于两个独立的访问请求和响应过程。</p>
<p>重定向与请求转发区别：<br>重定向需要两次请求完成的工作请求转发一次请求就可以完成，如此请求转发不会造成数据丢失而重定向会失去第一次请求中的数据。</p>
<p>(4)chain(Action链)<br>Action链是通过chain拦截器实现的，用一个在Action执行完毕返回结果直接跳转到另一个Action的时候，其可以实现两个Action的数据共享。<br>Action链中Action可以共享数据是因为处于Action链中的所有Action都共享一个值栈(临时储存中间数据)，当Action1执行时会将自身的信息压人值栈，当Action2执行时也会，Action2执行过程中需要Action1的信息则会到值栈获取。<br>Action链必须为第二个Action及后面的所有Action都配置chain拦截器才能正常工作。<br>Action链原理图:<br><img src="/img/structs2/19.png" alt="img"></p>
<p>(5)视图简介<br>Struts2支持视图多种多样，除JSP页面外还有Velocity和Freemarker模板视图、XSLT转换、JsperReport等。<br>实例：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;action name=<span class="string">"test"</span> class=<span class="string">"com.zhang.Test"</span>&gt;</span><br><span class="line">	&lt;<span class="literal">result</span> <span class="keyword">type</span>=<span class="string">"freemarker"</span>&gt;test.ftl&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">&lt;/action&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="4-struts-properties"><a href="#4-struts-properties" class="headerlink" title="4.struts.properties"></a>4.struts.properties</h2><p>struts.properties定义了Struts2程序运行所必须的常量信息，能够修改Struts2框架的一些默认行为方式，该文件包含一系列key-value键值对，每个key就是一个Struts2属性名，key对应value就是一个struts2属性值，如果一个key对应多个属性值时需要用英文逗号分开。<br>所有在struts.xml文件中通过<constant></constant>标签进行配置,也可以在web.xml文件中通过<init-param></init-param>标签进行配置。<br>由于Struts2已经为我们提供了默认配置文件default.properties,可以不需要struts.properties.<br>需要修改默认信息时可以在工程的WEB-INF/classes文件夹下建立一个struts.properties文件，将修改信息配置到文件中，新配置信息会覆盖系统默认配置信息。<br>几个常用常量配置信息如下:</p>
<table>
<thead>
<tr>
<th>配置信息内容</th>
<th>默认值</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>struts.il8n.encoding</td>
<td>UTF-8</td>
<td>指定默认编码集，对于请求参数带有中文情况，可以设置GBK或者GB2312</td>
</tr>
<tr>
<td>struts.il8n.reload</td>
<td>false</td>
<td>是否每次HTTP请求到达时，都重新加载国际化资源文件</td>
</tr>
<tr>
<td>struts.configuration.xml.reload</td>
<td>false</td>
<td>当struts.xml改动后是否重新加载该文件</td>
</tr>
<tr>
<td>struts.devMode</td>
<td>false</td>
<td>指定是否使用Struts2框架作为开发模式，开发模式下会在运行错误时得到更多的错误信息</td>
</tr>
<tr>
<td>Struts.serve.static.browserCache</td>
<td>true</td>
<td>设置浏览器是否缓存静态页面</td>
</tr>
<tr>
<td>struts.action.extension</td>
<td>action</td>
<td>指定后缀为.action形式的请求可以被Struts2处理，可以配置多个请求配置如.do、.struts2等，配置时多个后缀名需要用逗号隔开</td>
</tr>
<tr>
<td>struts.url.http.port</td>
<td>8080</td>
<td>配置服务器运行时的端口号</td>
</tr>
</tbody>
</table>
<h2 id="5-struts-xml"><a href="#5-struts-xml" class="headerlink" title="5.struts.xml"></a>5.struts.xml</h2><p>(1)构成元素<br>Struts2框架根据struts.xml文件配置信息知道要处理哪些程序，struts.xml配置元素功能如下:</p>
<table>
<thead>
<tr>
<th>配置元素</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>include</td>
<td>引入其他xml配置文件</td>
</tr>
<tr>
<td>constant</td>
<td>配置常量信息</td>
</tr>
<tr>
<td>bean</td>
<td>由容器创建并注入的组件</td>
</tr>
<tr>
<td>package</td>
<td>包含一系列Action及拦截器配置信息，并对其进行统一管理</td>
</tr>
<tr>
<td>default-action-ref</td>
<td>配置默认Action</td>
</tr>
<tr>
<td>default-class-ref</td>
<td>配置默认class</td>
</tr>
<tr>
<td>default-interceptor-ref</td>
<td>配置默认拦截器，对包范围内所有Action有效</td>
</tr>
<tr>
<td>global-results</td>
<td>配置全局结果集，对包范围内所有Action有效</td>
</tr>
<tr>
<td>global-exception-mappings</td>
<td>配置全局异常映射，对包范围内所有Action有效</td>
</tr>
<tr>
<td>result-types</td>
<td>配置自定义返回结果类型</td>
</tr>
<tr>
<td>interceptors</td>
<td>包含一系列拦截器配置信息</td>
</tr>
<tr>
<td>action</td>
<td>包含与Action操作相关的一系列配置信息</td>
</tr>
<tr>
<td>exeception-mapping</td>
<td>配置异常映射，Action范围内有效</td>
</tr>
<tr>
<td>interceptor-ref</td>
<td>配置Action应用的拦截器</td>
</tr>
<tr>
<td>result</td>
<td>配置Action的结果映射</td>
</tr>
</tbody>
</table>
<p>(2)<include><br>工程浩大时需要将一个struts.xml按照一定的规则划分为多个配置文件，再由<include>标签引入其他配置文件<br>eg:<br>struts.xml<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">&lt;<span class="built_in">include</span> <span class="built_in">file</span>=<span class="string">"goods.xml"</span><span class="comment">&gt;//商品</span></span><br><span class="line">&lt;<span class="built_in">include</span> <span class="built_in">file</span>=<span class="string">"users.xml"</span><span class="comment">&gt;//用户</span></span><br><span class="line">&lt;<span class="built_in">include</span> <span class="built_in">file</span>=<span class="string">"order.xml"</span><span class="comment">&gt;//订单</span></span><br><span class="line">&lt;/struts&gt;</span><br><span class="line">...</span><br></pre></td></tr></table></figure></include></include></p>
<p>users.xml<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"zhang"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">	&lt;action name=<span class="string">"login"</span> class=<span class="string">"com.zhang.struts2.User"</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span>&gt;...</span><br><span class="line">	&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></p>
<p>(3)<constant><br>由于需要修改的常量信息不多，所以比起在struts.properties或者web.xml中配置更推荐在struts.xml中配置<br>eg:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">struts</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 设置编码格式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">constant</span> <span class="attribute">name</span>=<span class="value">"struts.il8n.encoding"</span> <span class="attribute">value</span>=<span class="value">"GB2312"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">struts</span>&gt;</span></span><br></pre></td></tr></table></figure></constant></p>
<p>(4)<package><br>为了增加系统可维护性，包提供了将多个action组织为一个模块的方式，Struts2框架通过package来管理action、result、interceptor、interceptor-stack等配置信息，一个package可以拓展另外一个package。属性如下:</package></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>是否必须</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>是</td>
<td>包名，作为其他包引用本包的标记,包名必须唯一,一个struts.xml不能出现两个同名的包</td>
</tr>
<tr>
<td>extends</td>
<td>否</td>
<td>设置本包继承其他包，继承父包后会包含父包的所有配置如action、result等，父包必须在子包前定义，struts-default.xml包配置了Struts2的所有内置结果类型、内置拦截器等信息，所以经常继承之后就不用声明直接使用那些内置信息了</td>
</tr>
<tr>
<td>namespace</td>
<td>否</td>
<td>设置包的命名空间，实际是在包基础上对Action的进一步划分，可以解决Action重名问题(不同命名空间可以使用相同Action名)</td>
</tr>
<tr>
<td>abstract</td>
<td>否</td>
<td>设置为抽象包,包被设置为抽象包时不能包含Action配置信息，可以被其他包继承</td>
</tr>
</tbody>
</table>
<p>namespace补充:<br><strong><strong><strong><strong><strong><strong><em>**</em></strong></strong></strong></strong></strong></strong>如下有待补充<br>使用命名空间URL将改变<br>运行如下正确:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">struts.xml:</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"mySpace"</span> namespace=<span class="string">"/"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"login"</span> class=<span class="string">"com.zhang.struts2.UserAction"</span> <span class="keyword">method</span>=<span class="string">"login"</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"success"</span>&gt;success.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"fail"</span>&gt;fail.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;  </span><br><span class="line"></span><br><span class="line">index.jsp:</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;s:form action=<span class="string">"login"</span> <span class="keyword">method</span>=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;s:textfield name=<span class="string">"user.name"</span> label=<span class="string">"用户名"</span>&gt;&lt;/s:textfield&gt;</span><br><span class="line">    &lt;s:textfield name=<span class="string">"user.password"</span> label=<span class="string">"密码"</span>&gt;&lt;/s:textfield&gt;</span><br><span class="line">    &lt;s:submit value=<span class="string">"确定"</span>&gt;&lt;/s:submit&gt;</span><br><span class="line">    &lt;/s:form&gt;</span><br><span class="line">  &lt;/body&gt;  </span><br><span class="line">或者</span><br><span class="line">   &lt;s:form action=<span class="string">"login"</span> namespace=<span class="string">"/"</span> <span class="keyword">method</span>=<span class="string">"post"</span>&gt;</span><br><span class="line">或者</span><br><span class="line">	&lt;s:form action=<span class="string">"login"</span> namespace=<span class="string">"/space"</span> <span class="keyword">method</span>=<span class="string">"post"</span>&gt;</span><br><span class="line">或者</span><br><span class="line">   &lt;s:form action=<span class="string">"login!login"</span> namespace=<span class="string">"/space"</span> <span class="keyword">method</span>=<span class="string">"post"</span>&gt; //login!login---<span class="type">Action</span>名称！方法名称</span><br></pre></td></tr></table></figure></p>
<p>运行如下错误:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">struts.xml:</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"mySpace"</span> namespace=<span class="string">"/space"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"login"</span> class=<span class="string">"com.zhang.struts2.UserAction"</span> <span class="keyword">method</span>=<span class="string">"login"</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"success"</span>&gt;success.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"fail"</span>&gt;fail.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;    </span><br><span class="line"></span><br><span class="line">index.jsp:</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;s:form action=<span class="string">"login"</span> namespace=<span class="string">"/space"</span> <span class="keyword">method</span>=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;s:textfield name=<span class="string">"user.name"</span> label=<span class="string">"用户名"</span>&gt;&lt;/s:textfield&gt;</span><br><span class="line">    &lt;s:textfield name=<span class="string">"user.password"</span> label=<span class="string">"密码"</span>&gt;&lt;/s:textfield&gt;</span><br><span class="line">    &lt;s:submit value=<span class="string">"确定"</span>&gt;&lt;/s:submit&gt;</span><br><span class="line">    &lt;/s:form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br></pre></td></tr></table></figure></p>
<p>(5)<action>与<result></result></action></p>
<p><action>标签</action></p>
<table>
<thead>
<tr>
<th>属性名</th>
<th>是否必须</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>是</td>
<td>请求的Action名称</td>
</tr>
<tr>
<td>class</td>
<td>否</td>
<td>Action处理类对应的具体路径</td>
</tr>
<tr>
<td>method</td>
<td>否</td>
<td>指定Action中的方法名,没有设置是会默认调用execute方法</td>
</tr>
<tr>
<td>converter</td>
<td>否</td>
<td>指定Action使用的类型转换器</td>
</tr>
</tbody>
</table>
<p><result>标签</result></p>
<table>
<thead>
<tr>
<th>属性名</th>
<th>是否必须</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>否</td>
<td>对应Action返回逻辑视图的名称，默认为success</td>
</tr>
<tr>
<td>type</td>
<td>否</td>
<td>返回结果类型，默认为dispatcher</td>
</tr>
</tbody>
</table>
<p>通配符使用：<br>原始代码如下:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"mySpace"</span> namespace=<span class="string">"/"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"login"</span> class=<span class="string">"com.zhang.struts2.UserAction"</span> <span class="keyword">method</span>=<span class="string">"login"</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"st1"</span>&gt;st1.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"st2"</span>&gt;st2.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"st3"</span>&gt;st3.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		...</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></p>
<p>大量的result语句，使用通配符如下：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Test</span>.java</span><br><span class="line">public class <span class="type">Test</span> extends <span class="type">ActionSupport</span>&#123;</span><br><span class="line">	public <span class="type">String</span> st1()&#123;</span><br><span class="line">			<span class="keyword">return</span> st1;	</span><br><span class="line">		&#125;</span><br><span class="line">	public <span class="type">String</span> st2()&#123;</span><br><span class="line">			<span class="keyword">return</span> st2;	</span><br><span class="line">		&#125;</span><br><span class="line">	public <span class="type">String</span> st3()&#123;</span><br><span class="line">			<span class="keyword">return</span> st3;	</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">struts.xml</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"mySpace"</span> namespace=<span class="string">"/"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"st*"</span> class=<span class="string">"com.zhang.struts2.Test"</span> <span class="keyword">method</span>=<span class="string">"st&#123;1&#125;"</span>&gt;</span><br><span class="line">		&lt;!--  动态获取返回结果，其中<span class="string">"&#123;1&#125;"</span>取得的是<span class="string">"*"</span>的内容 --&gt;</span><br><span class="line">		&lt;<span class="literal">result</span> name=<span class="string">"st&#123;1&#125;"</span>&gt;st&#123;<span class="number">1</span>&#125;.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></p>
<p>缺陷:Action请求名称为”st*”则方法名称和逻辑视图名称必须以st开头!<br>每个人就根据需要选择是否使用!</p>
<p>(6)<exception-mapping>与<global-exception-mappings><br>用来配置发生异常时对应的视图信息！一个是Action范围内的，一个是包范围内的。<br>属性:</global-exception-mappings></exception-mapping></p>
<table>
<thead>
<tr>
<th>属性名称</th>
<th>是否必须</th>
<th>功能描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>name</td>
<td>否</td>
<td>用来标识该异常配置信息</td>
</tr>
<tr>
<td>result</td>
<td>是</td>
<td>指定发生异常时显示的视图信息</td>
</tr>
<tr>
<td>exception</td>
<td>是</td>
<td>指定异常类型</td>
</tr>
</tbody>
</table>
<p>(7)<default-class-ref><br>配置时没有为某个Action指定class时，系统将自动引用<default-class-ref>标签指定的类<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"mySpace"</span> namespace=<span class="string">"/"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;!-- 指定默认class为<span class="type">Hello</span> --&gt;</span><br><span class="line">		&lt;default-class-<span class="keyword">ref</span> class=<span class="string">"com.zhang.struts2.Hello"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"st1"</span>&gt;</span><br><span class="line">			&lt;<span class="literal">result</span>&gt;index.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">		&lt;action name=<span class="string">"st2"</span>&gt;</span><br><span class="line">			&lt;<span class="literal">result</span>&gt;index.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></default-class-ref></default-class-ref></p>
<p>st1和st2都没有指定class信息，当浏览器输入<a href="http://localhost:8080/MyWeb/st1.action与http://localhost:8080/MyWeb/st2.action执行结果相同。" target="_blank" rel="external">http://localhost:8080/MyWeb/st1.action与http://localhost:8080/MyWeb/st2.action执行结果相同。</a><br>如上手动指定类是必须包含execute方法，指定后默认的将被覆盖。</p>
<p>(8)<default-action-ref><br>为了避免不理想的404页面出现，可以使用<default-action-ref>标签指定一个默认的Action处理。<br>eg:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"mySpace"</span> namespace=<span class="string">"/"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">	&lt;default-action-<span class="keyword">ref</span> name=<span class="string">"actionError"</span>&gt;</span><br><span class="line">		&lt;action name=<span class="string">"actionError"</span>&gt;</span><br><span class="line">			&lt;<span class="literal">result</span>&gt;actionError.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></default-action-ref></default-action-ref></p>
<p>如此可以用actionError.jsp</p>
<p>(9)<default-interceptor-ref><br>用来设置整个包范围内全部Action所要应用的默认拦截器信息</default-interceptor-ref></p>
<p>(10)<interceptors><br>向Struts2框架中注册拦截器或者拦截器栈，多用于自定义拦截器或者拦截器的注册。<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;interceptors&gt;</span><br><span class="line">&lt;interceptor name=<span class="string">"拦截器名"</span> class=<span class="string">"拦截器类"</span>/&gt;</span><br><span class="line">	&lt;interceptor-stack name <span class="string">"拦截器栈名"</span>&gt;</span><br><span class="line">		&lt;interceptor-<span class="keyword">ref</span> name=<span class="string">"拦截器名"</span>/&gt;</span><br><span class="line">	&lt;/interceptor-stack&gt;</span><br><span class="line">&lt;/interceptors&gt;</span><br></pre></td></tr></table></figure></interceptors></p>
<p>(11)<interceptor-ref><br>对其所在的Action添加拦截器功能，为某个Action单独添加拦截器后<default-interceptor-ref>拦截器对这个Action不在起作用。</default-interceptor-ref></interceptor-ref></p>
<p>(12)<global-results><br>设置包范围内的全局结果集。多个Action返回相同的逻辑视图情况下可以通过<global-results>标签统一配置这些逻辑视图所对应物理视图。<br>eg:<br>如下Test1和Test2返回为“test”都调到index.jsp<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;struts&gt;</span><br><span class="line">	&lt;package name=<span class="string">"mySpace"</span> namespace=<span class="string">"/"</span> extends=<span class="string">"struts-default"</span>&gt;</span><br><span class="line">		&lt;global-results&gt;</span><br><span class="line">			&lt;<span class="literal">result</span> name=<span class="string">"test"</span>&gt;/index.jsp&lt;/<span class="literal">result</span>&gt;</span><br><span class="line">		&lt;/global-results&gt;</span><br><span class="line"></span><br><span class="line">		&lt;action name=<span class="string">"test1"</span> class=<span class="string">"com.zhang.struts2.Test1"</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line"></span><br><span class="line">		&lt;action name=<span class="string">"test2"</span> class=<span class="string">"com.zhang.struts2.Test2"</span>&gt;</span><br><span class="line">		&lt;/action&gt;</span><br><span class="line">	&lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure></global-results></global-results></p>
<p>注意:如果test1的Action添加了<result name="test">/test.jsp</result>则跳转test.jsp</p>
<h2 id="6-web-xml"><a href="#6-web-xml" class="headerlink" title="6.web.xml"></a>6.web.xml</h2><p>web.xml是Web应用的核心配置文件，用于配置Servelet、过滤器Filter、监听器Listenter及Welcome-File等，任何Web框架想要与Web集合就必须依靠web.xml进行设置，核心过滤器FilterDispatcher是Struts2框架的基础，充当中央控制器作用，ActionContextCleanUp过滤器是Struts2的一个常用辅助类，主要用于清理当前线程的ActionContext和Dispatcher防止内存泄漏。web.xml通常只需要配置这两个过滤器就行。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">web-app</span> <span class="attribute">xmlns:xsi</span>=<span class="value">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attribute">xmlns</span>=<span class="value">"http://java.sun.com/xml/ns/javaee"</span> <span class="attribute">xsi:schemaLocation</span>=<span class="value">"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"</span> <span class="attribute">version</span>=<span class="value">"3.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">display-name</span>&gt;</span>MyWeb<span class="tag">&lt;/<span class="title">display-name</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- </span><br><span class="line">  &lt;filter&gt;</span><br><span class="line">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class="line">    &lt;filter-class&gt;org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter&lt;/filter-class&gt;</span><br><span class="line">  &lt;/filter&gt;</span><br><span class="line">  &lt;filter-mapping&gt;</span><br><span class="line">    &lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/filter-mapping&gt;</span><br><span class="line">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  配置Struts2的ActionContextCleanUp过滤器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>struts2-cleanup<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.ActionContextCleanUp<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>struts2-cleanup<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--  配置Struts2的核心过滤器FilterDispatcher --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">filter</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line"> 		<span class="tag">&lt;<span class="title">filter-class</span>&gt;</span>org.apache.struts2.dispatcher.FilterDispatcher<span class="tag">&lt;/<span class="title">filter-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="title">filter-name</span>&gt;</span>struts2<span class="tag">&lt;/<span class="title">filter-name</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="title">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="title">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>备注:<br>FilterDispatcher是struts2.0.x到2.1.2版本的核心过滤器!  StrutsPrepareAndExecuteFilter是自2.1.3开始就替代了FilterDispatcher的!<br>如果我们自己定义过滤器的话, 是要放在strtus2的过滤器之前的, 如果放在struts2过滤器之后,你自己的过滤器对action的过滤作用就废了,不会有效!除非你是访问jsp/html!  那我现在有需求, 我必须使用Action的环境,而又想在执行action之前拿filter做一些事, 用FilterDispatcher是做不到的! 那么StrutsPrepareAndExecuteFilter可以把他拆分成StrutsPrepareFilter和StrutsExecuteFilter,可以在这两个过滤器之间加上我们自己的过滤器! </p>
<h2 id="7-_u503C_u6808"><a href="#7-_u503C_u6808" class="headerlink" title="7.值栈"></a>7.值栈</h2><p>Struts2的值栈是一个存放对象的堆栈，对象以map的形式储存在这个堆栈中，并且该堆栈中的对象属性的数值可以通过表达式语言获得。<br>值栈储存内容都是对象，储存对象包括临时对象、模型对象、Action对象、命名对象。<br>临时对象:在程序执行过程中由容器自动创建并储存到值栈中，应用结束时该对象被清空<br>模型对象:仅在Action使用模型驱动方式传值的时候，当Action被请求时，modeldriven拦截器会自动从Action中获得模型对象，并将对象放在值栈对应的Action对象上，JSP页面可以到值栈找到模型对象获得数值<br>Action对象：每个Action请求到来时，容器都会先创建一个此Action对象并存入值栈，该对象携带所有与Action执行过程有关的信息<br>命名对象:主要包括Servlet作用范围内相关的对象信息，比如request、session、application等<br>遍历顺序从栈顶开始依次是临时对象、模型对象、Action对象、命名对象。模型对象放Action对象前面因为请求需要模型携带数据时可以先找set()方法，没有则查找模型对象对应的Action对象。</p>
<h2 id="8-OGNL"><a href="#8-OGNL" class="headerlink" title="8.OGNL"></a>8.OGNL</h2><p>OGNL(Object-Graph Navigation Language)图对象导航语言，是表达式语言的一种，我们是通过OGNL来访问值栈中信息的。<br>(1)对list、map操作<br>| list/map | java访问方式     | OGNL访问方式 |<br>| ———| —————-| ————|<br>| 创建list | List list=new ArrayList();list.add(“a”);list.add(“b”);list.add(c);| {“a”,”b”,”c”}|<br>| 访问list | list.get(i);list.size();list.isEmpty();| list[i];list.size;list.isEmpty;|<br>| 创建map  | Map map=new HashMap();map.put(“one”,”name”);map.put(“two”,”passwd”);map.put(“three”,”age”);| #{“one”:”name”,”passwd”;”three”:”age”} |<br>| 访问map  | map.get(“one”);map.size();map.isEmpty();| map[‘one’];map.size;map.isEmpty;|</p>
<p>导航图深度:<br><img src="/img/structs2/20.png" alt="img"><br>A,B,C对象对应导航图深度值分别0,1,2;<br>获得A,B,C对象的name属性分别为[0].name;[1].name;[2].name;</p>
<h1 id="u7B2C_u56DB_u7AE0__u62E6_u622A_u5668"><a href="#u7B2C_u56DB_u7AE0__u62E6_u622A_u5668" class="headerlink" title="第四章 拦截器"></a>第四章 拦截器</h1><h2 id="1-_u62E6_u622A_u5668"><a href="#1-_u62E6_u622A_u5668" class="headerlink" title="1.拦截器"></a>1.拦截器</h2><p>(1)介绍<br>拦截器是动态拦截Action调用的对象，Struts2配置应用拦截器只需要在struts.xml中添加或者删除拦截器配置信息即可。<br>struts2内置（struts-default.xml）拦截器:</p>
<table>
<thead>
<tr>
<th>拦截器</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td>alias</td>
<td>对不同请求中的相同参数进行命名转换</td>
</tr>
<tr>
<td>autowiring</td>
<td>框架自动寻找相应的Bean并完成设置工作</td>
</tr>
<tr>
<td>chain</td>
<td>构建Action链，当使用<result type="chain">进行配置时，当前Action可以使用前一个已经执行结束的Action的属性，实现Action链数据传递</result></td>
</tr>
<tr>
<td>checkbox</td>
<td>否则检查checkbox表单控件是否被选中，未被选中时，提交一个默认值(通常false)</td>
</tr>
<tr>
<td>cookie</td>
<td>把带有特定名/值映射关系的cookie注射到Action中</td>
</tr>
<tr>
<td>conversionError</td>
<td>处理类型转换时的错误信息，把ActionContext中的错误信息转换为相应的Action字段的错误信息并保存,需要时可以通过视图显示相关错误信息</td>
</tr>
<tr>
<td>createSession</td>
<td>自动创建一个HttpSession对象，有些拦截器必须要有HttpSession对象才能工作(eg:TokenInterceptor)</td>
</tr>
<tr>
<td>debugging</td>
<td>负责调试，当页面中使用<s:debug>标签时，可以获得值栈、上下文等信息</s:debug></td>
</tr>
<tr>
<td>execAndWait</td>
<td>在后台执行Action,并将等待画面传送给用户</td>
</tr>
<tr>
<td>exception</td>
<td>提供处理异常功能，将异常映射为结果</td>
</tr>
<tr>
<td>fileUpload</td>
<td>负责文件上传</td>
</tr>
<tr>
<td>i18n</td>
<td>把指定Locale信息放入Session</td>
</tr>
<tr>
<td>logger</td>
<td>输出Action名称</td>
</tr>
<tr>
<td>store</td>
<td>储存或者访问实现ValidationAware接口的Action类出现的消息，错误，字段错误等</td>
</tr>
<tr>
<td>model-driven</td>
<td>某个Action实现了ModelDriven接口时，把getModel()方法的结果放入值栈中</td>
</tr>
<tr>
<td>scoped-model-driven</td>
<td>某个Action实现了ScopedModelDriven接口,拦截器获得指定的模型，通过setModel()方法将其传送到Action</td>
</tr>
<tr>
<td>params</td>
<td>解析HTTP请求参数将其传送给Action,设置成Action对应的属性值</td>
</tr>
<tr>
<td>prepare</td>
<td>处理Action执行之前所要执行的操作，Action需要实现Preparable接口，在Action执行之前调用prepare()方法</td>
</tr>
<tr>
<td>scope</td>
<td>将一些公有参数信息储存到Session作用域或者Application作用域，当Action需要时，拦截器检查并从Session或者Application中将其取出</td>
</tr>
<tr>
<td>servletConfig</td>
<td>提供对HttpServletRequest和HttpServletResponse的访问机制</td>
</tr>
<tr>
<td>staticParams</td>
<td>把定义在xml中的<action>标签下<param>标签中的参数传入Action</action></td>
</tr>
<tr>
<td>roles</td>
<td>检查用户是否具有JAAS授权，只有授权用户才可以调用相应的Action</td>
</tr>
<tr>
<td>timer</td>
<td>输出Action的执行时间</td>
</tr>
<tr>
<td>token</td>
<td>检查传入到Action中的Token信息，防止重复提交</td>
</tr>
<tr>
<td>tokenSession</td>
<td>功能和TokenInterceptor相似,只不过将无效的Token信息存放在Session中</td>
</tr>
<tr>
<td>validation</td>
<td>执行定义在xxAction-validation.xml中的校验器，完成数据校验</td>
</tr>
<tr>
<td>workflow</td>
<td>调用Action的validate方法进行校验，校验失败返回input视图</td>
</tr>
<tr>
<td>N/A</td>
<td>从参数列表删除不必要的参数</td>
</tr>
<tr>
<td>profiling</td>
<td>通过参数激活profile</td>
</tr>
</tbody>
</table>
<p>(2)部署拦截器<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">interceptors</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">interceptor</span> <span class="attribute">name</span>=<span class="value">"拦截器名"</span> <span class="attribute">class</span>=<span class="value">"拦截器类"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"参数名"</span>&gt;</span>参数值<span class="tag">&lt;/<span class="title">param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">interceptor</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="title">interceptor</span> <span class="attribute">name</span>=<span class="value">"拦截器名"</span> <span class="attribute">class</span>=<span class="value">"拦截器类"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="title">param</span> <span class="attribute">name</span>=<span class="value">"参数名"</span>&gt;</span>参数值<span class="tag">&lt;/<span class="title">param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="title">interceptor</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="title">interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>(3)添加拦截器<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;action name=<span class="string">"Action名"</span> class=<span class="string">"Action类"</span>&gt;</span><br><span class="line">	&lt;interceptor-<span class="keyword">ref</span> name=<span class="string">"拦截器名"</span>&gt;</span><br><span class="line">		&lt;param name=<span class="string">"参数名"</span>&gt;参数值&lt;/param&gt;</span><br><span class="line">	&lt;/interceptor-<span class="keyword">ref</span>&gt;</span><br><span class="line">	&lt;interceptor-<span class="keyword">ref</span> name=<span class="string">"拦截器名"</span>&gt;</span><br><span class="line">		&lt;param name=<span class="string">"参数名"</span>&gt;参数值&lt;/param&gt;</span><br><span class="line">	&lt;/interceptor-<span class="keyword">ref</span>&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/action&gt;</span><br></pre></td></tr></table></figure></p>
<p>(4)实例<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u62E6_u622A_u5668_u6808"><a href="#2-_u62E6_u622A_u5668_u6808" class="headerlink" title="2.拦截器栈"></a>2.拦截器栈</h2><h2 id="3-_u5E94_u7528"><a href="#3-_u5E94_u7528" class="headerlink" title="3.应用"></a>3.应用</h2><h1 id="u9644_u5F55_uFF1A"><a href="#u9644_u5F55_uFF1A" class="headerlink" title="附录："></a>附录：</h1><h2 id="1-_u914D_u7F6Edtd_u7684_u672C_u5730url_u6821_u9A8C"><a href="#1-_u914D_u7F6Edtd_u7684_u672C_u5730url_u6821_u9A8C" class="headerlink" title="1.配置dtd的本地url校验"></a>1.配置dtd的本地url校验</h2><p>一般struts.xml中有”<a href="http://struts.apache.org/dtds/struts-2.1.dtd&quot;需要联网才能提示，可以添加本地，方法如下：" target="_blank" rel="external">http://struts.apache.org/dtds/struts-2.1.dtd&quot;需要联网才能提示，可以添加本地，方法如下：</a><br>将struts2-core-2.1.8解压到E盘，在myeclipse中-&gt;windows-&gt;preferences-&gt;搜索框输入xml-&gt;XML Catalog  -&gt;User Specified Entries里面自己配置个dtd的本地url校验，这样就不用去联网校验了</p>
<hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：<br>]]>
    
    </summary>
    
      <category term="Struts 2" scheme="http://www.bestzhangjin.com/tags/Struts-2/"/>
    
      <category term="Web框架" scheme="http://www.bestzhangjin.com/tags/Web%E6%A1%86%E6%9E%B6/"/>
    
      <category term="Struts 2" scheme="http://www.bestzhangjin.com/categories/Struts-2/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JSP网站开发]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/12/jsp/"/>
    <id>http://www.bestzhangjin.com/2016/03/12/jsp/</id>
    <published>2016-03-12T10:53:03.000Z</published>
    <updated>2016-03-27T00:50:42.089Z</updated>
    <content type="html"><![CDATA[<p>主要内容：环境搭建，网页布局，JDBC，Servlet<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u73AF_u5883_u642D_u5EFA"><a href="#u7B2C_u4E00_u7AE0__u73AF_u5883_u642D_u5EFA" class="headerlink" title="第一章 环境搭建"></a>第一章 环境搭建</h1><h2 id="1-JDK"><a href="#1-JDK" class="headerlink" title="1.JDK"></a>1.JDK</h2><p>JDK(Java Development Kit) 是 Java 语言的软件开发工具包(SDK)。<br>J2SE：(Java SE/SE)，标准版，是我们通常用的一个版本;<br>J2EE:(Java EE/EE)，企业版，使用这种JDK开发J2EE应用程序;<br>J2ME:(Java ME/ME)，主要用于移动设备、嵌入式设备上的java应用程序。<br>JDK用于编译Java程序，JRE用于运行Java程序。</p>
<p>官网下载：<a href="http://www.oracle.com/technetwork/java/javaee/downloads/index.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/javaee/downloads/index.html</a><br>安装会连续安装jdk和jre，安装好后配置环境变量：<br>JAVA_HOME： jdk的安装目录(如E:\Java\jdk)<br>Path： %JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;（注意原Path末尾有没有;号，没有则先输入）<br>CLASSPATH： .;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar（注意最前面有一点）</p>
<p>配置完后cmd下输入java和javac命令没有提示找不到命令则安装配置成功！</p>
<h2 id="2-Myeclipse"><a href="#2-Myeclipse" class="headerlink" title="2.Myeclipse"></a>2.Myeclipse</h2><p>在eclipse 基础上加上自己的插件开发而成的功能强大的企业级集成开发环境，主要用于Java、Java EE以及移动应用的开发。<br>官网下载： <a href="http://www.myeclipsecn.com/" target="_blank" rel="external">http://www.myeclipsecn.com/</a></p>
<p>安装过程自己网上查，特别多！</p>
<h2 id="3-Tomcat"><a href="#3-Tomcat" class="headerlink" title="3.Tomcat"></a>3.Tomcat</h2><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。Tomcat和IIS等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。不过，Tomcat处理静态HTML的能力不如Apache服务器。常用服务器还有Nginx等。<br>官网下载： <a href="https://tomcat.apache.org/" target="_blank" rel="external">https://tomcat.apache.org/</a></p>
<p>安装前首先需要配置好java的环境。与一般软件安装无异，直接安装就可以。<br>安装好打开tomcat安装目录的bin 文件夹，找到里面的执行文件，运行，然后在浏览器上输入本地地址：http：//localhost:8080  或者  http：//127.0.0.1:8080 看到tomcat默认界面则安装成功！</p>
<h2 id="4-Mysql"><a href="#4-Mysql" class="headerlink" title="4.Mysql"></a>4.Mysql</h2><p>本节详见本博客的mysql篇，有详细介绍！</p>
<h2 id="5-_u5C0F_u7ED3"><a href="#5-_u5C0F_u7ED3" class="headerlink" title="5.小结"></a>5.小结</h2><p>本章环境搭建好了就可以进行开发了，Mysql中注意界面化软件连接时尽量用127.0.0.1而不是localhost.有时候用localhost不识别！</p>
<h1 id="u7B2C_u4E8C_u7AE0__u7F51_u9875_u5E03_u5C40_u4E0E_u4FEE_u9970-HTML+CSS+JavaScript"><a href="#u7B2C_u4E8C_u7AE0__u7F51_u9875_u5E03_u5C40_u4E0E_u4FEE_u9970-HTML+CSS+JavaScript" class="headerlink" title="第二章 网页布局与修饰-HTML+CSS+JavaScript"></a>第二章 网页布局与修饰-HTML+CSS+JavaScript</h1><p>本章不讲，详见本博客的Html+css+javascript网页布局篇！</p>
<h1 id="u7B2C_u4E09_u7AE0_JDBC"><a href="#u7B2C_u4E09_u7AE0_JDBC" class="headerlink" title="第三章 JDBC"></a>第三章 JDBC</h1><h2 id="1-_u4ECB_u7ECD_u4E0E_u6D41_u7A0B"><a href="#1-_u4ECB_u7ECD_u4E0E_u6D41_u7A0B" class="headerlink" title="1.介绍与流程"></a>1.介绍与流程</h2><p>本章不懂的参考对应博客文章mysql<br>JDBC（Java DataBase Connectivity）是Sun公司开发的针对数据库应用程序的API(应用程序编程接口)，其由Java编写跨平台！<br>流程：<br>(1)加载JDBC驱动（首先要导入驱动包）<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">Class</span><span class="class">.forName</span>("<span class="tag">com</span><span class="class">.mysql</span><span class="class">.jdbc</span><span class="class">.Driver</span>");</span><br></pre></td></tr></table></figure></p>
<p>(2)创建连接<br><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">String url</span>=<span class="string">"jdbc:mysql://localhost:3306/test"</span>;  <span class="comment">//3306--端口 test:数据库名</span></span><br><span class="line"><span class="constant">String username</span>=<span class="string">"root"</span>;<span class="comment">//数据库用户名</span></span><br><span class="line"><span class="constant">String password</span>=<span class="string">""</span>;<span class="comment">//数据库的密码</span></span><br><span class="line"><span class="constant">Connection conn</span>=DriverManeger.getConnection(url,username,password);</span><br></pre></td></tr></table></figure></p>
<p>(3)获得java.sql.Statement实例<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">Statement</span> s=conn.createStatement();</span><br><span class="line"><span class="title">PreaparedStatement</span> p=conn.prepareStatement(sql);</span><br><span class="line"><span class="title">CallableStatement</span> c=conn.prepareCall(<span class="string">"&#123;CALL demoSp(?,?)&#125;"</span>);</span><br></pre></td></tr></table></figure></p>
<hr>
<p>执行静态SQL语句：Statement<br>执行动态SQL语句：PreparedStatement<br>执行数据库储存过程：CallableStatement<br>(4)执行SQL语句<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ResultSet rs=s.executeQuery(String sql);//查询并返回一个ResultSet对象</span><br><span class="line">int rows=s.executeUpdate(String sql);//执行<span class="operator"><span class="keyword">INSERT</span>、<span class="keyword">UPDATE</span>、<span class="keyword">DELETE</span>、<span class="keyword">SQL</span> <span class="keyword">DDL</span>(数据定义)语句，返回影响行数</span><br><span class="line"><span class="built_in">boolean</span> flag=s.<span class="keyword">execute</span>(<span class="keyword">String</span> <span class="keyword">sql</span>);</span>//用于执行返回多个结果集、多个更新计数或二者组合的语句</span><br></pre></td></tr></table></figure></p>
<p>(5)处理结果<br>ResultSet方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>next()</td>
<td>移动到ResultSet下一行</td>
</tr>
<tr>
<td>first()</td>
<td>移动到ResultSet第一行</td>
</tr>
<tr>
<td>last()</td>
<td>移动到ResultSet最后一行</td>
</tr>
<tr>
<td>previous()</td>
<td>移动到ResultSet上一行</td>
</tr>
</tbody>
</table>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String name=rs.getString(<span class="string">"name"</span>);<span class="comment">//根据字段名获取</span></span><br><span class="line">String passwd=rs.getString(<span class="number">3</span>);<span class="comment">//根据列数获取 ------ 此方法更加高效</span></span><br><span class="line"><span class="keyword">int</span> id=rs.getInt(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<p>(6)关闭JDBC对象<br>关闭顺序是声明顺序的反序<br>(1)关闭记录集<br>(2)关闭声明<br>(3)关闭连接对象<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">rs</span><span class="class">.close</span>();</span><br><span class="line"><span class="tag">s</span><span class="class">.close</span>();</span><br><span class="line"><span class="tag">conn</span><span class="class">.close</span>();</span><br></pre></td></tr></table></figure></p>
<h2 id="2-JDBC_u6570_u636E_u7C7B_u578B"><a href="#2-JDBC_u6570_u636E_u7C7B_u578B" class="headerlink" title="2.JDBC数据类型"></a>2.JDBC数据类型</h2><p>本节参考 <a href="http://www.yiibai.com/jdbc/jdbc_data_types.html" target="_blank" rel="external">http://www.yiibai.com/jdbc/jdbc_data_types.html</a></p>
<h2 id="3-JDBC_u4E8B_u52A1_u5904_u7406"><a href="#3-JDBC_u4E8B_u52A1_u5904_u7406" class="headerlink" title="3.JDBC事务处理"></a>3.JDBC事务处理</h2><p>(1)JDBC事务处理-原子操作<br>一般应用是多表联系操作，如银行取款。<br>事务，是指一组原子操作(一组SQL语句执行)的工作单元，要么全部执行，要么全部失败。<br>JDBC事务步骤：<br>A.设置事务提交方式为非自动提交<br>B.将需要添加的代码放try-catch块内<br>C.try块内添加提交操作，提交事务<br>D.catch块内添加回滚事务，表示操作出现异常，撤销事务<br>E.设置事务提交方式为自动提交<br>实例：<br>操作前信息表<br>stu</p>
<table>
<thead>
<tr>
<th>id</th>
<th>stuid</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>001</td>
<td>zhang</td>
</tr>
</tbody>
</table>
<p>stuinfo</p>
<table>
<thead>
<tr>
<th>sti_id</th>
<th>city</th>
</tr>
</thead>
<tbody>
<tr>
<td>001</td>
<td>beijin</td>
</tr>
<tr>
<td>002</td>
<td>shanghai</td>
</tr>
</tbody>
</table>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JdbcTransation</span> &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		java.sql.Connection conn=<span class="keyword">null</span>;</span><br><span class="line">		PreparedStatement pStatement=<span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">			conn=DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/test"</span>,<span class="string">"root"</span>,<span class="string">""</span>);</span><br><span class="line">			String sql=<span class="string">"INSERT INTO stuinfo(stu_id,city) VALUES(?,?)"</span>;</span><br><span class="line">			String sql2=<span class="string">"DELETE FROM stu WHERE id=1"</span>;</span><br><span class="line">			</span><br><span class="line">			conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">			pStatement=conn.prepareStatement(sql);</span><br><span class="line">			pStatement.setString(<span class="number">1</span>,<span class="string">"003"</span>);<span class="comment">//设置学号001</span></span><br><span class="line">			pStatement.setString(<span class="number">2</span>,<span class="string">"shenzhen"</span>);<span class="comment">//家庭地址：北京</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"第一条语句执行..."</span>);</span><br><span class="line">			pStatement.executeUpdate();</span><br><span class="line">			</span><br><span class="line">			pStatement=conn.prepareStatement(sql2);</span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"第二条语句执行..."</span>);</span><br><span class="line">			pStatement.executeUpdate();</span><br><span class="line">			<span class="comment">//pStatement.executeQuery();</span></span><br><span class="line">			conn.commit();	<span class="comment">//提交事务</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"提交事务..."</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				conn.rollback();<span class="comment">//出现异常则回滚事务</span></span><br><span class="line">				System.<span class="keyword">out</span>.println(<span class="string">"回退事务..."</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">				e1.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				conn.setAutoCommit(<span class="keyword">true</span>);<span class="comment">//设置自动提交</span></span><br><span class="line">				pStatement.close();</span><br><span class="line">				conn.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>操作后信息表<br>stu</p>
<table>
<thead>
<tr>
<th>id</th>
<th>stuid</th>
<th>name</th>
</tr>
</thead>
<tbody>
<tr>
<td>null</td>
<td>null</td>
<td>null</td>
</tr>
</tbody>
</table>
<p>stuinfo</p>
<table>
<thead>
<tr>
<th>sti_id</th>
<th>city</th>
</tr>
</thead>
<tbody>
<tr>
<td>001</td>
<td>beijin</td>
</tr>
<tr>
<td>002</td>
<td>shanghai</td>
</tr>
<tr>
<td>003</td>
<td>shenzhen</td>
</tr>
</tbody>
</table>
<p>运行正确时:<br>第一条语句执行…<br>第二条语句执行…<br>提交事务…</p>
<p>遇到错误时:<br>第一条语句执行…<br>第二条语句执行…<br>回退事务…</p>
<p>(2)JDBC批量处理<br>Statement的execute()等方法一次只能一条sql语句，同时执行多条可以用addBatch()方法将要执行的语句加入，然后执行executeBatch()方法，为保证这一批语句全部失败或者全部成功，应该放之于事务中执行。<br>注意：批处理中执行语句只能是更新语句(insert,delete,update),否则异常。<br>实例:<br>采用PreparedStatement方法<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JdbcTransation</span> &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		java.sql.Connection conn=<span class="keyword">null</span>;</span><br><span class="line">		PreparedStatement pStatement=<span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">			conn=DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/test"</span>,<span class="string">"root"</span>,<span class="string">""</span>);</span><br><span class="line">			String sql=<span class="string">"INSERT INTO stuinfo(stu_id,city) VALUES(?,?)"</span>;</span><br><span class="line">			</span><br><span class="line">			conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">			pStatement=conn.prepareStatement(sql);</span><br><span class="line">			pStatement.setString(<span class="number">1</span>,<span class="string">"004"</span>);<span class="comment">//设置学号001</span></span><br><span class="line">			pStatement.setString(<span class="number">2</span>,<span class="string">"tianjin"</span>);<span class="comment">//家庭地址：北京</span></span><br><span class="line">			pStatement.addBatch();</span><br><span class="line">			pStatement.setString(<span class="number">1</span>, <span class="string">"005"</span>);</span><br><span class="line">			pStatement.setString(<span class="number">2</span>, <span class="string">"chongqin"</span>);</span><br><span class="line">			pStatement.addBatch();</span><br><span class="line">			pStatement.executeBatch();</span><br><span class="line">			</span><br><span class="line">			conn.commit();	<span class="comment">//提交事务</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"提交事务..."</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				conn.rollback();<span class="comment">//出现异常则回滚事务</span></span><br><span class="line">				System.<span class="keyword">out</span>.println(<span class="string">"回退事务..."</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">				e1.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				conn.setAutoCommit(<span class="keyword">true</span>);<span class="comment">//设置自动提交</span></span><br><span class="line">				pStatement.close();</span><br><span class="line">				conn.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>采用Statement方法<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JdbcTransation</span> &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		java.sql.Connection conn=<span class="keyword">null</span>;	</span><br><span class="line">		Statement statement =<span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">			conn=DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/test"</span>,<span class="string">"root"</span>,<span class="string">""</span>);</span><br><span class="line">			statement=conn.createStatement();</span><br><span class="line">			</span><br><span class="line">			conn.setAutoCommit(<span class="keyword">false</span>);</span><br><span class="line">			statement .addBatch(<span class="string">"INSERT INTO stuinfo(stu_id,city) VALUES('006','wuhan')"</span>);</span><br><span class="line">			statement.addBatch(<span class="string">"INSERT INTO stuinfo(stu_id,city) VALUES('007','changsha')"</span>);</span><br><span class="line">			statement.executeBatch();</span><br><span class="line">			</span><br><span class="line">			statement.executeBatch();</span><br><span class="line">			conn.commit();	<span class="comment">//提交事务</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"提交事务..."</span>);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				conn.rollback();<span class="comment">//出现异常则回滚事务</span></span><br><span class="line">				System.<span class="keyword">out</span>.println(<span class="string">"回退事务..."</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">				e1.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;<span class="keyword">finally</span>&#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				conn.setAutoCommit(<span class="keyword">true</span>);<span class="comment">//设置自动提交</span></span><br><span class="line">				statement.close();</span><br><span class="line">				conn.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="4-_u5E94_u7528_u6848_u4F8B"><a href="#4-_u5E94_u7528_u6848_u4F8B" class="headerlink" title="4.应用案例"></a>4.应用案例</h2><p>(1)信息管理<br>A.创建商品表<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root<span class="comment">@localhost test&gt;CREATE TABLE goods(</span></span><br><span class="line">    -&gt; id INT UNSIGNED NOT NULL AUTO_INCREMENT,</span><br><span class="line">    -&gt; name VARCHAR(20),</span><br><span class="line">    -&gt; price INT,</span><br><span class="line">    -&gt; PRIMARY KEY (id));</span><br><span class="line">Query OK, 0 rows affected (0.33 sec)</span><br><span class="line"></span><br><span class="line">root<span class="comment">@localhost test&gt;DESC goods;</span></span><br><span class="line">+-------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field </span>|<span class="string"> Type             </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+-------+------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id    </span>|<span class="string"> int(10) unsigned </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> name  </span>|<span class="string"> varchar(20)      </span>|<span class="string"> YES  </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> price </span>|<span class="string"> int(11)          </span>|<span class="string"> YES  </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+-------+------------------+------+-----+---------+----------------+</span><br><span class="line">3 rows in set (0.02 sec)</span><br></pre></td></tr></table></figure></p>
<p>B.创建类添加商品并查询<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> JdbcTransation &#123;</span><br><span class="line">	<span class="keyword">static</span> java.sql.Connection conn=null;	</span><br><span class="line">	<span class="keyword">static</span> PreparedStatement pStatement=null;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">conn</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">		Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">		conn=DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/test"</span>,<span class="string">"root"</span>,<span class="string">""</span>);</span><br><span class="line">				&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			pStatement.close();</span><br><span class="line">			conn.close();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String name,<span class="keyword">int</span> price)</span></span>&#123; </span><br><span class="line">		String sql=<span class="string">"INSERT INTO goods(name,price) VALUES (?,?)"</span>;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				pStatement=(PreparedStatement) conn.prepareStatement(sql);</span><br><span class="line">				pStatement.setString(<span class="number">1</span>, name);</span><br><span class="line">				pStatement.setInt(<span class="number">2</span>, price);</span><br><span class="line">				pStatement.executeUpdate();<span class="comment">//返回1添加成功</span></span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findall</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ResultSet resultSet=pStatement.executeQuery(<span class="string">"SELECT name,price FROM goods"</span>);</span><br><span class="line">			<span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">				String name=resultSet.getString(<span class="string">"name"</span>);</span><br><span class="line">				<span class="keyword">int</span> price=resultSet.getInt(<span class="string">"price"</span>);</span><br><span class="line">				System.out.println(name+<span class="string">":"</span>+price);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		JdbcTransation goods=<span class="keyword">new</span> JdbcTransation();</span><br><span class="line">		goods.conn();</span><br><span class="line">		goods.insert(<span class="string">"book1"</span>,<span class="number">100</span>);</span><br><span class="line">		goods.insert(<span class="string">"book2"</span>,<span class="number">80</span>);</span><br><span class="line">		goods.findall();</span><br><span class="line">		goods.close();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>输出结果:<br>book1:100<br>book2:80</p>
<p>(2)JDBC操作数据库工具类封装<br>整个流程放一起代码重复，利用率低，把相同代码抽取出来封装成一个类。<br>A.封装Connection对象<br>B.封装关闭JDBC资源类<br>C.封装执行数据库操作类</p>
<h2 id="5-_u5C0F_u7ED3-1"><a href="#5-_u5C0F_u7ED3-1" class="headerlink" title="5.小结"></a>5.小结</h2><h1 id="u7B2C_u56DB_u7AE0_Servlet"><a href="#u7B2C_u56DB_u7AE0_Servlet" class="headerlink" title="第四章 Servlet"></a>第四章 Servlet</h1><hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：环境搭建，网页布局，JDBC，Servlet<br>]]>
    
    </summary>
    
      <category term="JSP" scheme="http://www.bestzhangjin.com/tags/JSP/"/>
    
      <category term="网站开发" scheme="http://www.bestzhangjin.com/tags/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
      <category term="网站开发" scheme="http://www.bestzhangjin.com/categories/%E7%BD%91%E7%AB%99%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[网页设计之Html+css+javascript篇]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/12/html_css_javascript/"/>
    <id>http://www.bestzhangjin.com/2016/03/12/html_css_javascript/</id>
    <published>2016-03-12T10:53:03.000Z</published>
    <updated>2016-03-15T11:40:23.526Z</updated>
    <content type="html"><![CDATA[<p>主要内容：Html，css，javascript<br><a id="more"></a></p>
<!--more-->
<h1 id="u7B2C_u4E00_u7AE0__u7F51_u9875_u57FA_u7840_u4E0E_u7F51_u7AD9_u5F00_u53D1_u6D41_u7A0B"><a href="#u7B2C_u4E00_u7AE0__u7F51_u9875_u57FA_u7840_u4E0E_u7F51_u7AD9_u5F00_u53D1_u6D41_u7A0B" class="headerlink" title="第一章 网页基础与网站开发流程"></a>第一章 网页基础与网站开发流程</h1><h2 id="1-_u8BA4_u8BC6_u7F51_u9875"><a href="#1-_u8BA4_u8BC6_u7F51_u9875" class="headerlink" title="1.认识网页"></a>1.认识网页</h2><p>网站由网页组成，需要域名和虚拟主机才能访问。<br>网页就是一个文件，通常是HTML文件，扩展名有.html、.htm、.asp、.aspx、.php、.jsp等。<br>动态网页是通过网页脚本与语言自动处理、自动更新的页面，如论坛中的帖子就是通过网站服务器运行程序，自动处理信息，按照流程更新网页。动态网页一般以.asp、.aspx、.php、.jsp作为文件扩展名，不同的扩展名的动态网页文件代表不同的服务器技术，要开发动态网站，需要先指定一种服务器端技术，目前动态网页服务器技术主要有CGI、ASP/ASP.NET、PHP、JSP等。<br>CGI:一种通用的网关接口，是外部程序与网页服务器之间的标准编程接口，可以使用不同的语言写CGI程序，如VB,Delphi,C/C++等，可以将写好的CGI代码放在网页服务器的计算机上运行，再将其运行结果通过网页服务器传输到客服端的网页浏览器上。CGI接收低、编写代码困难、效率低，现在基本不用。<br>ASP：在CGI技术基础上由微软开发的一种快速、简便的服务器技术，门槛低、功能强大，较为流行。<br>ASP.NET：微软在ASP基础上退出的一种服务器技术，解决了原来ASP技术的服务器代码与HTML混合导致页面冗长而复杂、程序难以理解的问题，而且能够与浏览器独立，支持VB.NET,C#、VC++.NET、JS.NET四种编程语言。<br>PHP:是一种HTML内嵌式语言，与微软的ASP相似，开放免费，广泛使用。<br>JSP:SUN公司推出的网站开放技术，是将纯Java代码嵌入HTML中实现动态功能的技术，已成为ASP有力竞争者。<br>ASP与JSP区别：<br>明显区别：ASP使用编程语言是VBScript之类的脚本语言，JSP使用的是Java。<br>本质区别：ASP的VBScript代码被ASP引擎解释执行，而JSP脚本在第一次被编译成Servlet并由java虚拟机执行。</p>
<p>静态网页与动态网页<br>静态网页：<br><em>使用语言HTML
</em>每个网页都有一个固定URL,网页URL以.htm、.html、.shtml等常见形式为后缀，不含有“？”<br><em>静态网页是实实在在保存网站服务器上的文件，每个网页是一个独立文件
</em>静态网页内容相对稳定，容易被搜索引擎检索<br><em>没有数据库支持，当网站信息量大时完全依靠静态网页制作方式比较困难
</em>交互性差，在功能方面有很大限制<br>动态网页：<br><em>使用语言HTML+ASP,HTML+PHP,HTML+JSP等
</em>以数据库为基础，可以大大减少网站维护工作<br><em>动态网页技术可以实现更多的功能
</em>不是独立存在于服务器上的独立网页文件，只有当用户请求服务器时才返回一个完整的网页<br>*动态网页中“？”对搜索引擎检索存在一定问题，搜索引擎的机器人一般不会抓取URL字符串的“？”，所以采用动态网站进行搜索引擎推广时需要做一定的技术处理才能适应搜索要求</p>
<hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：Html，css，javascript<br>]]>
    
    </summary>
    
      <category term="Html" scheme="http://www.bestzhangjin.com/tags/Html/"/>
    
      <category term="css" scheme="http://www.bestzhangjin.com/tags/css/"/>
    
      <category term="javascript" scheme="http://www.bestzhangjin.com/tags/javascript/"/>
    
      <category term="网页设计" scheme="http://www.bestzhangjin.com/tags/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="网页设计" scheme="http://www.bestzhangjin.com/categories/%E7%BD%91%E9%A1%B5%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[阿里云ECS（linux）搭建web环境]]></title>
    <link href="http://www.bestzhangjin.com/2016/03/04/aliyun/"/>
    <id>http://www.bestzhangjin.com/2016/03/04/aliyun/</id>
    <published>2016-03-04T01:15:00.000Z</published>
    <updated>2016-03-04T09:51:30.440Z</updated>
    <content type="html"><![CDATA[<p>主要内容：阿里云ECS（linux）搭建web环境<br><a id="more"></a></p>
<h1 id="1-_u963F_u91CC_u4E91ECS_u4ECB_u7ECD"><a href="#1-_u963F_u91CC_u4E91ECS_u4ECB_u7ECD" class="headerlink" title="1.阿里云ECS介绍"></a>1.阿里云ECS介绍</h1><p>阿里云，阿里巴巴集团旗下云计算品牌，全球卓越的云计算技术和服务提供商。创立于2009年，在杭州、北京、硅谷等地设有研发中心和运营机构。<br>云服务器ECS：一种简单高效，处理能力可弹性伸缩的计算服务。助您快速构建更稳定、安全的应用。提升运维效率，降低IT成本，使您更专注于核心业务创新。</p>
<h1 id="2-_u8FDE_u63A5_u670D_u52A1_u5668_u3001_u5411_u670D_u52A1_u5668_u4E0A_u4F20_u6587_u4EF6"><a href="#2-_u8FDE_u63A5_u670D_u52A1_u5668_u3001_u5411_u670D_u52A1_u5668_u4E0A_u4F20_u6587_u4EF6" class="headerlink" title="2.连接服务器、向服务器上传文件"></a>2.连接服务器、向服务器上传文件</h1><p>(1)连接到服务器<br>连接到服务器的SSH工具有很多，这里介绍SSH Secure Shell Client和putty两种软件的用法.选择自己喜欢的一种就可以（本文选择SSH Secure Shell Client）<br>A.SSH Secure Shell Client<br>下载安装.SSH Secure Shell Client<br>打开界面点击profiles-&gt;add profiles输入你要远程的机器的名字（随便输入即可）<br>之后点击profiles-&gt;你要远程的主机名：<br><img src="/img/aliyun/3.png" alt="image"><br>在HostName里输入Linux主机地址<br>UserName输入账号（一般root）<br>Port输入端口(一般22)<br>点击connection之后输入服务器主机密码即可连接成功</p>
<p>传送文件:<br>点击如下图标new file transfer window:<br><img src="/img/aliyun/4.png" alt="image"><br><img src="/img/aliyun/5.png" alt="image"><br>从左侧本地文件目录拖放文件到右侧窗口则完成文件上传</p>
<p>B.putty<br>下载软件putty,打开后只是填写你的服务器ip地址(图中00000000位置)：<br><img src="/img/aliyun/1.png" alt="putty"><br>点击打开，输入服务器的用户名密码就连接成功:<br><img src="/img/aliyun/2.png" alt="putty"></p>
<p>(2)更新source-list到最新的源信息：<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br></pre></td></tr></table></figure></p>
<h1 id="3-Web_u73AF_u5883_u642D_u5EFA"><a href="#3-Web_u73AF_u5883_u642D_u5EFA" class="headerlink" title="3.Web环境搭建"></a>3.Web环境搭建</h1><h2 id="3-1_Web_u73AF_u5883_u4ECB_u7ECD"><a href="#3-1_Web_u73AF_u5883_u4ECB_u7ECD" class="headerlink" title="3.1 Web环境介绍"></a>3.1 Web环境介绍</h2><p>本文采用JSP技术创建的网页需要jdk（java）环境，服务器采用tomcat.</p>
<h2 id="3-2_jdk_u5B89_u88C5"><a href="#3-2_jdk_u5B89_u88C5" class="headerlink" title="3.2 jdk安装"></a>3.2 jdk安装</h2><p>(1)JDK版本介绍<br>Java SE Development Kit 8u74：jdk java开发环境 jdk自带了前边的jre<br>Java SE Development Kit 8u74 Demos and Samples：是jre，是java运行环境<br>eclipse也是属于java程序 只要有了java运行环境以后就能运行的 但是没有jdk的话不能编译java程序 还是个摆设.<br>本文采用后者，因为服务器上运行即可，不需要编译环境.<br>官网下载：<a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><br>选择Java SE Development Kit 8u74的Linux x64版:jdk-8u74-linux-x64.tar.gz下载</p>
<p>(2)安装<br>解压：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xvzf jdk-<span class="number">8u</span>74-linux-x64.gz</span><br></pre></td></tr></table></figure></p>
<p>jdk所在位置:/home/java/jdk1.8.0_74<br>配置环境变量:<br>vi ~/.bashrc在后面添加如下代码：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/home/java/jdk1.<span class="number">8.0_74</span></span><br><span class="line">export JAVA_BIN=<span class="variable">$JAVA</span>_HOME/bin</span><br><span class="line">export JAVA_LIB=<span class="variable">$JAVA</span>_HOME/lib</span><br><span class="line">export CLASSPATH=.:<span class="variable">$JAVA</span>_LIB/tools.jar:<span class="variable">$JAVA</span>_LIB/dt.jar</span><br><span class="line">export PATH=<span class="variable">$JAVA</span>_BIN:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure></p>
<p>我们在进行编辑完成之后，可以使用source命令来生效。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure></p>
<p>之后输入java -version弹出java版本安装成功</p>
<h2 id="3-3_tomcat_u5B89_u88C5"><a href="#3-3_tomcat_u5B89_u88C5" class="headerlink" title="3.3 tomcat安装"></a>3.3 tomcat安装</h2><p>(1)下载<br>官网下载：<a href="http://tomcat.apache.org/download-80.cgi" target="_blank" rel="external">http://tomcat.apache.org/download-80.cgi</a><br>本文下载的是apache-tomcat-8.0.32.tar.gz<br>tomcat需要java环境，所以先安装了jdk</p>
<p>(2)安装<br>解压：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">tar</span> <span class="tag">-xvzf</span> <span class="tag">apache-tomcat-8</span><span class="class">.0</span><span class="class">.32</span><span class="class">.tar</span><span class="class">.gz</span></span><br></pre></td></tr></table></figure></p>
<p>解压得到文件夹:apache-tomcat-8.0.32<br>当解压成功以后，我们直接进入到tomcat bin目录中。<br>输入 ./startup.sh启动Tomcat，假如显示Tomcat started，则表明启动成功。<br>tomcat默认是8080端口。<br>所以浏览器上输入地址：<a href="http://你的服务器地址:8080/就可以访问到默认的tomcat主页面了" target="_blank" rel="external">http://你的服务器地址:8080/就可以访问到默认的tomcat主页面了</a></p>
<p>(3)更改tomcat的8080端口为80端口<br>找到tomcat的安装目录下的conf下的server.xml将8080改为80<br>找到如下一段：<br><!-- A "Connector" represents an endpoint by which requests are received  
         and responses are returned. Documentation at :  
         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)  
         Java AJP  Connector: /docs/config/ajp.html  
         APR (HTTP/AJP) Connector: /docs/apr.html  
         Define a non-SSL HTTP/1.1 Connector on port 8080  
    --></p>
<connectorport="8080"protocol="http 1.1"="" connectiontimeout="20000" redirectport="8443" uriencoding="UTF-8">

<p>把那上面port=”8080”里面的8080改成80就可以了.保存后，记的重启下tomcat，这样就可以了。<br>现在直接<a href="http://你的服务器ip地址/就可以访问了" target="_blank" rel="external">http://你的服务器ip地址/就可以访问了</a></p>
<h1 id="4-_u670D_u52A1_u5668ip_u4E0E_u57DF_u540D_u7ED1_u5B9A"><a href="#4-_u670D_u52A1_u5668ip_u4E0E_u57DF_u540D_u7ED1_u5B9A" class="headerlink" title="4.服务器ip与域名绑定"></a>4.服务器ip与域名绑定</h1><p>我在阿里云处买的万维网域名。设置比较简单。<br>登录阿里云，点击域名-&gt;解析-&gt;设置网站解析-&gt;输入ip地址提交即可。<br>然后输入你的域名就可以访问服务器。</p>
<h1 id="5-_u4E0A_u4F20_u7F51_u7AD9"><a href="#5-_u4E0A_u4F20_u7F51_u7AD9" class="headerlink" title="5.上传网站"></a>5.上传网站</h1><p>将编写好的网站传入服务器上的tomcat对应目录下就可以实现访问。</p>
</connectorport="8080"protocol="http>]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：阿里云ECS（linux）搭建web环境<br>]]>
    
    </summary>
    
      <category term="服务器" scheme="http://www.bestzhangjin.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="阿里云" scheme="http://www.bestzhangjin.com/tags/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
      <category term="阿里云服务器" scheme="http://www.bestzhangjin.com/categories/%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Ubuntu学习]]></title>
    <link href="http://www.bestzhangjin.com/2016/02/26/ubuntu_use/"/>
    <id>http://www.bestzhangjin.com/2016/02/26/ubuntu_use/</id>
    <published>2016-02-26T04:55:12.000Z</published>
    <updated>2016-03-15T12:01:27.924Z</updated>
    <content type="html"><![CDATA[<p>主要内容:<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u7EC8_u7AEF"><a href="#u7B2C_u4E00_u7AE0__u7EC8_u7AEF" class="headerlink" title="第一章 终端"></a>第一章 终端</h1><h2 id="1-_u6253_u5F00_u7EC8_u7AEF_u547D_u4EE4_u5FEB_u6377_u952E"><a href="#1-_u6253_u5F00_u7EC8_u7AEF_u547D_u4EE4_u5FEB_u6377_u952E" class="headerlink" title="1.打开终端命令快捷键"></a>1.打开终端命令快捷键</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ctrl+alt+f1		<span class="comment">//打开字符模式终端</span></span><br><span class="line">ctrl+alt+T		<span class="comment">//打开图像模式终端</span></span><br><span class="line">ctrl+alt+f7		<span class="comment">//退出终端回到桌面</span></span><br></pre></td></tr></table></figure>
<h1 id="u7B2C_u4E8C_u7AE0_vim_u5B89_u88C5_u4E0E_u914D_u7F6E"><a href="#u7B2C_u4E8C_u7AE0_vim_u5B89_u88C5_u4E0E_u914D_u7F6E" class="headerlink" title="第二章 vim安装与配置"></a>第二章 vim安装与配置</h1><h2 id="1-vim_u4ECB_u7ECD"><a href="#1-vim_u4ECB_u7ECD" class="headerlink" title="1.vim介绍"></a>1.vim介绍</h2><p>vim是从VI发展而来的一个文本编辑器，功能更强大<br>在命令行敲入“vi”后按”tab”键，可以看到目前系统中只安装了vi和vim.tiny，vim.tiny是vim的精简版</p>
<h2 id="2-vim_u5B89_u88C5"><a href="#2-vim_u5B89_u88C5" class="headerlink" title="2.vim安装"></a>2.vim安装</h2><p>终端输入:<br>sudo apt-get update<br>sudo apt-get install vim<br>安装完成之后，在命令行敲入vi，按“tab”键。</p>
<p>可以看到，已经有vim命令的存在。</p>
<p>安装成功。现在vim可以用了，但是不太方便，为了更人性化，我们对他进行配置</p>
<h2 id="3-vim_u914D_u7F6E"><a href="#3-vim_u914D_u7F6E" class="headerlink" title="3.vim配置"></a>3.vim配置</h2><p>现在按照我们的需求去修改它<br>在命令行下，输入命令：sudo vim /etc/vim/vimrc</p>
<p>必须加上sudo，否则你是没有权限编辑vimrc的</p>
<p>请在您的VIM的最后一行，输入他们，可以让您的VIM变得更漂亮、舒服。</p>
<p>set nu                           “ 在左侧行号<br>set ai!                          “设置自动缩进<br>set incsearch                “设置单词匹配<br>set tabstop=4                “tab 长度设置为 4<br>set shiftwidth=4             “设置当行之间交错时使用4空格<br>set nobackup                 “覆盖文件时不备份<br>set ruler                        “在右下角显示光标位置的状态行<br>set showmatch                “设置匹配模式<br>set cindent                  “cindent是针对C语言语法自动缩进<br>set mouse=a                  “设置鼠标点击时有反应<br>保存之后，配置完毕。</p>
<p>上面的配置，其实是非常简单的，比如一些配色方案等，并没有写入，如果您还有其他需求的话，建议百度。</p>
<p>保存后退出，现在界面已经变得友好了</p>
<h1 id="u7B2C_u4E09_u7AE0__u8F6F_u4EF6_u5B89_u88C5_u7BC7"><a href="#u7B2C_u4E09_u7AE0__u8F6F_u4EF6_u5B89_u88C5_u7BC7" class="headerlink" title="第三章 软件安装篇"></a>第三章 软件安装篇</h1><hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容:<br>]]>
    
    </summary>
    
      <category term="Ubuntu" scheme="http://www.bestzhangjin.com/tags/Ubuntu/"/>
    
      <category term="Ubuntu" scheme="http://www.bestzhangjin.com/categories/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JAVA范例篇]]></title>
    <link href="http://www.bestzhangjin.com/2016/02/19/java_learn/"/>
    <id>http://www.bestzhangjin.com/2016/02/19/java_learn/</id>
    <published>2016-02-19T15:39:15.000Z</published>
    <updated>2016-03-15T11:41:45.805Z</updated>
    <content type="html"><![CDATA[<p>主要内容:<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u57FA_u7840_u77E5_u8BC6_u6F14_u7EC3"><a href="#u7B2C_u4E00_u7AE0__u57FA_u7840_u77E5_u8BC6_u6F14_u7EC3" class="headerlink" title="第一章 基础知识演练"></a>第一章 基础知识演练</h1><h1 id="u7B2C_u4E8C_u7AE0__u5B9E_u7528_u5DE5_u5177"><a href="#u7B2C_u4E8C_u7AE0__u5B9E_u7528_u5DE5_u5177" class="headerlink" title="第二章 实用工具"></a>第二章 实用工具</h1><h1 id="u7B2C_u4E09_u7AE0__u56FE_u5F62_u56FE_u50CF"><a href="#u7B2C_u4E09_u7AE0__u56FE_u5F62_u56FE_u50CF" class="headerlink" title="第三章 图形图像"></a>第三章 图形图像</h1><h1 id="u7B2C_u56DB_u7AE0__u5A31_u4E50_u5148_u950B"><a href="#u7B2C_u56DB_u7AE0__u5A31_u4E50_u5148_u950B" class="headerlink" title="第四章 娱乐先锋"></a>第四章 娱乐先锋</h1><hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容:<br>]]>
    
    </summary>
    
      <category term="JAVA" scheme="http://www.bestzhangjin.com/tags/JAVA/"/>
    
      <category term="JAVA" scheme="http://www.bestzhangjin.com/categories/JAVA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[markdown详解]]></title>
    <link href="http://www.bestzhangjin.com/2016/02/18/markdown/"/>
    <id>http://www.bestzhangjin.com/2016/02/18/markdown/</id>
    <published>2016-02-18T09:32:28.000Z</published>
    <updated>2016-03-30T07:59:45.570Z</updated>
    <content type="html"><![CDATA[<p>主要内容：<br><a id="more"></a></p>
<h1 id="u4E00-__u4ECB_u7ECD"><a href="#u4E00-__u4ECB_u7ECD" class="headerlink" title="一. 介绍"></a>一. 介绍</h1><h1 id="u4E8C-_u8BED_u6CD5"><a href="#u4E8C-_u8BED_u6CD5" class="headerlink" title="二.语法"></a>二.语法</h1><h2 id="1-_u4E00_u7EA7_u76EE_u5F55"><a href="#1-_u4E00_u7EA7_u76EE_u5F55" class="headerlink" title="1.一级目录"></a>1.一级目录</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">标题</span><br><span class="line">=============</span></span><br></pre></td></tr></table></figure>
<h2 id="2-_u4E8C_u7EA7_u76EE_u5F55"><a href="#2-_u4E8C_u7EA7_u76EE_u5F55" class="headerlink" title="2.二级目录"></a>2.二级目录</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">标题</span><br><span class="line">---------------</span></span><br></pre></td></tr></table></figure>
<h2 id="3-_u8868_u683C"><a href="#3-_u8868_u683C" class="headerlink" title="3.表格"></a>3.表格</h2><p>语法:<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">|<span class="string"> 方法</span>|<span class="string"> 描述</span>|</span><br><span class="line">|<span class="string"> ----</span>|<span class="string"> ---</span>|</span><br><span class="line">|<span class="string"> 方法1</span>|<span class="string"> 描述1</span>|</span><br></pre></td></tr></table></figure></p>
<p>注意：表格前面后面空一行不输入文字<br>效果:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>方法1</td>
<td>描述1</td>
</tr>
</tbody>
</table>
<h2 id="4-_u56FE_u7247"><a href="#4-_u56FE_u7247" class="headerlink" title="4.图片"></a>4.图片</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="link_label">图片没有显示时会显示的文字</span>](<span class="link_url">文件目录/图片名称</span>)</span><br></pre></td></tr></table></figure>
<p>备注:hexo中以source为根目录<br>如source下的img下的1.png为</p>
<hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：<br>]]>
    
    </summary>
    
      <category term="markdown" scheme="http://www.bestzhangjin.com/tags/markdown/"/>
    
      <category term="markdown" scheme="http://www.bestzhangjin.com/categories/markdown/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JAVA学习篇]]></title>
    <link href="http://www.bestzhangjin.com/2016/02/02/java_use/"/>
    <id>http://www.bestzhangjin.com/2016/02/02/java_use/</id>
    <published>2016-02-02T04:22:14.000Z</published>
    <updated>2016-03-03T07:30:35.964Z</updated>
    <content type="html"><![CDATA[<p>主要内容:JAVA语言学习教程<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0_uFF1A_u4ECB_u7ECD"><a href="#u7B2C_u4E00_u7AE0_uFF1A_u4ECB_u7ECD" class="headerlink" title="第一章：介绍"></a>第一章：介绍</h1><h2 id="1-_u672C_u6559_u7A0B_u4ECB_u7ECD"><a href="#1-_u672C_u6559_u7A0B_u4ECB_u7ECD" class="headerlink" title="1.本教程介绍"></a>1.本教程介绍</h2><p>本教程使用的是MyEclipse+JDK1.8。<br>学习java已经半年了，很多东西虽然熟悉，却是朦朦胧胧，没有一个系统的总结，这里主要做一个系统的总结。本教程志在通过自己的学习与仿真写一篇系统的java学习笔记，以便后面复习或者查询用，本教程主要参考明日科技的JAVA 编程宝典一书。</p>
<h2 id="2-_u5E38_u7528_u5F00_u53D1_u73AF_u5883_u4ECB_u7ECD"><a href="#2-_u5E38_u7528_u5F00_u53D1_u73AF_u5883_u4ECB_u7ECD" class="headerlink" title="2.常用开发环境介绍"></a>2.常用开发环境介绍</h2><p>下面文章来自：<a href="http://blog.csdn.net/futureinhands/article/details/1329148" target="_blank" rel="external">http://blog.csdn.net/futureinhands/article/details/1329148</a><br>1995年3月23日，San Jose Mercury News登出一篇题为“Why Sun thinks Hot Java will give you a lift”的文章，在那篇文章里预言Java技术将是下一个重大事件，这个预言现在看来并不仅仅是商家的宣传伎俩，虽然文章是当时Sun的公关经理 Lisa Poulson安排撰写的。从世人知道Java那一刻起到现在，算起来已经过去整整十年，回顾过去的十年值得总结的东西有许多，但在这里笔者只想就Java开发环境谈些个人的想法与朋友们交流一下。</p>
<p>　　现在的软件开发人员在整个软件的开发生命周期里，也许会根据需要使用各式各样的开发工具来完成相对复杂的开发任务，而在几十年以前，人们还只是使用文本编辑器、编译器和Debugger进行开发，对于这个阶段的开发环境人们称之为CLEs(Command Line Environments)。 而当人们发现如果将那些单独分开的开发工具集成起来就可以有效的提高开发效率时，IDEs(Integrated Development Environments)就出现了。Java的出现尽管只有十年，但其开发环境也大至经历了从CLEs到IDEs再到XDEs这三个阶段，现在即将进入CDEs阶段。在上述Java开发环境发展过程中，有许多值得我们大家关注的地方。</p>
<p>　　Java开发环境的历史回顾</p>
<p>　　纵观过去十年Java开发环境的发展，大致可以粗略的划分为如下几个阶段:</p>
<p>　　●  1995，命令行开发环境CLEs</p>
<p>　　●  1996-2000，集成开发环境IDEs </p>
<p>　　●  2001-2004，扩展开发环境XDEs </p>
<p>　　●  2005至今，协同开发环境CDEs </p>
<p>　　1995年，不平凡的一年，这一年Java 获得了成功。可令人尴尬的是在1995年并没有一个令人满意的Java开发环境，开发人员在进行Java编程时，大多使用文本编辑器编辑源程序，然后再使用命令行的方式进行编译处理。那时的Java开发环境还处于CLEs时代，开发效率非常低，这预示着在Java开发工具上会有一番激烈的竞争。</p>
<p>　　有人称1996年为互联网年，有人却称之为Java年，还有人称之为Web开发年，但不论如何称呼1996年，它都反映了一个事实：Bill Joy将Java与互联网相结合的策略取得了成功。这一年的9月Sun推出了其Java开发环境-Java WorkShop，这是一款基于浏览器的Java开发工具，但由于当时 Java在许多方面还不成熟，所以实际上Java WorkShop并不成功，同年发布的Symantec Visual Cafe由于还是采用C/C++语言进行开发，所以性能与成熟度上就比WorkShop好得多。提到Visual Cafe就不能不提Eugene Wang，因为Eugene Wang常常是与计算机间谍这个词同时出现的人物，有人甚至讲当时Symantec的老板Gordon Eubanks与Eugene Wang签约时，也同时签下了监狱里的一个单元。Visual Cafe就是由Eugene Wang进行主要策划的，它是在同一年发布的Java开发环境中，唯一解决了与数据库连接问题的开发环境，带有一套可以与数据库相连接的组件，无需太多编程使用拖拽的方式就可完成大部分工作，这一优点使得Visual Cafe受到了Java开发人员的欢迎。这一年IBM收购了OTI公司，从而得到了Dave Thomas的弟子John Duimovich、Dave Thomson、Mike Wilson等一大批软件精英，这之中还包括“生活在技术刀锋上的开发者”Brian Barry。</p>
<p>　　1997年，由于微软垄断案，使得微软在Java开发环境上的努力受到了限制，Visual Cafe由于界面直观易用，可以很容易地连接各种数据源等功能再次受到开发人员的欢迎。这一年IBM发布VisualAge for Java。VisualAge for Java是面向代码库的开发环境，它提供代码库和项目管理以便于开发团队在 C/S环境下进行项目开发。但由于大多数Java开发人员比较熟悉面向文件的开发环境，还不太习惯面向代码库的开发，再加上VisalAge for Java对系统资源的要求比较高等因素，使得VisualAge for Java一开始未被Java开发人员所认可。</p>
<p>　　1998年至2000年比较成功的Java开发环境是JBuilder，这是由于Borland较好的把握住 J2SE、J2EE和J2ME发布后，Java技术升级的时机，全面支持Java1.1和Java1.2开发平台，它还提供了多种工具方便用户从旧的平台迁移到新的Java平台。JBuilder本身80%是基于JDK1.2进行开发的，它支持JavaBeans, Enterprise JavaBeans, JDBC等方面的应用开发，可以连接多种关系数据库。为支持分布式应用开发，JBuilder还集成了 VisiBroker ORB、JSP server、数据库和EJB AppServer，并提供Open Tools API便于第三方工具集成。上述种种的优点使得JBuilder一举超越Visual Cafe，成为当时最受欢迎的Java开发环境。在众多Java开发环境中，1999年IBM发布的VisualAge for Java Micro Edition是比较有特色的开发环境，它是由Erich Gamma和与Erich Gamma有“焦不离孟、孟不离焦”之称的John Wiegand共同进行设计的，采用了Java 扩展机制，并集成了JUnit测试框架，其当时所采用的架构深深地影响了后来Eclipse1.0所采用的架构。同时，通过VisualAge for Java Micro Edition的开发，那些来自“未来世界”(Smalltalk们总认为他们来自计算机的未来世界)的软件精英们，全面彻底地对Java技术进行了评估，得出了许多结论性的东西，这之中包括现在闹得沸沸扬扬的Swing和SWT对比。此外，Sun将其收购的NetBeans变成了开源的Java IDE也是一件不大不小的事情。</p>
<p>　　纵观1996年至2000年这五年时间里，随着Java及其相关开发应用的发展，Java开发环境也不断的完善，从CLEs进入到IDEs阶段。为了提高Java开发人员的开发效率，Java开发环境主要从两个方面进行改进与提高。一方面是提高集成在Java IDEs当中开发工具的性能和易用性，另一方面是将Java开发环境尽可能的覆盖到整个软件的开发生命周期。随着基于WEB，采用N-层结构的应用开发成为Java开发人员主要从事的开发任务，Java开发环境需要支持越来越多的技术，比如:XML、JSP、EJB和CORBA等，这就造成了Java IDEs的规模变得越来越大，许多Java开发环境都集成了数据库、JSP Server和AppServer，软件的研究人员将上述IDEs不断膨胀的现象称为“IDEs大爆炸”。</p>
<p>　　“IDEs大爆炸”现象发生以后，有关Java开发环境是走少而精的发展方向，还是走大而全的发展方向就成了广大Java开发人员关注的问题。2001年Java开发人员达到了200万，成为每个软件供应商都无法忽视的力量，这一年JetBrains推出了Java开发环境少而精的代表： IntelliJ IDEA。 IntelliJ IDEA明确的表示只做最好的Java代码编辑器，不做什么文件都可以编写的编辑器。它关注Java开发人员的工作实际并将这些工作进行了优化。由于减掉了一些可有可无的工具，所以价格上相对合理公道。当年IntelliJ IDEA击败JBuilder成为最受Java开发人员欢迎的Java开发环境，不过2002年随着JBuilder将大而全的功力再提升一步，将UML建模工具、JUnit测试框架以及Apache Struts等开发工具集成进来，大而全的发展方向又一次受到Java开发人员追捧。最全还是最好似乎使Java开发人员在选择Java开发环境时处于两难状况，但实际上当Eclipse 1.0发布时，这个问题已经得到了初步的解决，最好和最全是可以兼顾的。</p>
<p>　　Eclipse的出现不是从天上掉下来的，也不是某个天才拍脑袋想出来的，它是一群软件精英们集体智慧的结果。早在1998年IBM就打算开发新一代的工具平台以便将它现有的各种开发工具统一起来，并减少开发各种工具时重复的劳动，同时希望在新的平台上建立新的Java开发环境。经过一段时间的准备， IBM开始建立起一个开发团队，人员构成主要来自VisualAge for Java Micro Edition和VisualAge for Java两个项目的开发人员，选择的标准是过去10年至少开发过5到6个IDE。此外，IBM还联合了9家公司共同成立了一个开源组织Eclipse基金会，将Eclipse提供给开发人员使用，并在开源社区的帮助下进一步完善Eclipse本身。Eclipse在最初设计时，插件模型是静态的，不能实现插件的即插即用功能，即便是大受欢迎的Eclipse 2.1也还是静态的。所以到2004年发布Eclipse 3.0时，Eclipse进行了重大改进，采用OSGi的插件模型，初步实现了插件的即插即用功能，至此一个完美的、可扩展的开发环境展现在Java开发者面前，这时Java开发人员已经达到300万。</p>
<p>　　Java开发环境的现状</p>
<p>　　2004年Eclipse 3.0的发布极大刺激了Eclipse用户的增长，经过一年以后，Java开发人员现在使用Java开发环境的状况是如何的呢？看了下面的表格里的数据也许可以了解一个大致的状况。</p>
<p>　　首先需要指明的是上述的数据并不是当前Java用户使用Java开发环境的准确反映，但我们可以从中了解一个大致的状况。现在的Java环境可以分为三个集团，第一集团是Eclispe它大约占据1/3的份额，第二集团是 IntelliJ IDEA、NetBeans 和JBuilder占据另外1/3的份额，相互之间旗鼓相当，第三集团是以JDeveloper和WSAD为代表的十几种Java开发环境占据剩下的 1/3份额，但每种开发环境占总份额的比重不超过5%。我们考察Eclipse、intelliJ IDEA、NetBeans 和JBuilder这些主流开发环境，可以发觉它们有一个共同的特点那就是可扩展，尽管在实现手段上各有不同。这就是为什么称现在的Java开发环境为XDEs(eXtended Development Environments)的原因，IDEs已经死亡了4年，专业的开发人员需要了解这个事实，因为XDEs也快死了。</p>
<p>　　由于市场的压力，一个软件企业不仅要提高开发人员个体的工作效率，还要提高整个开发团队以及整个企业的开发效率，但在现有的Java开发环境XDEs下无法完全做到这些，所以新一代开发环境CDEs (Collaborative Development Environments)就产生。Grady Booch和Alan W. Brown的研究表明一个程序员一天工作时间的分配是这样的：分析占16%(从5%到40%不等)， 设计占14%(从1%到40%不等)，编程占16%(从0%到60%不等)，测试占10%，打电话占3%，阅读占7%(电子邮件，文档，月刊和杂志)，参加开发会议占10%，无关的会议占7% 。从这些数据可以发现，开发人员用于交流的时间约占工作时间的1/3，开发人员的相互交流非常重要。可是现有的主流Java开发环境一般仅将分析、设计、编程和测试等工具集成进来，却未包括用于交流的工具，这显然不合理。因此，所谓CDEs就是将用于人与人、人与团队以及团对于团队进行交流的工具集成进来的开发环境，比如，CDEs常具有发送电子邮件、进行及时通讯和屏幕分享等功能，通过实现无损耗过程的交流提高开发团队的开发效率。</p>
<p>　　现在已经商业化的CDEs是CodeBeamer Collaborative Development Platform和CodePro AnalytiX，上述两款软件都提供Eclipse的插件，可以与Eclipse集成在一起，使Eclipse升级成为一个CDEs。大家肯定知道Borland已经宣布开发基于Eclipse的新版JBuilder-“Peloton”，Peloton就是一个CDEs(Collaborative Development Environments)，当它明年上半年发布时，就意味着Java开发环境进入CDEs时代，现在Java开发环境还处于XDEs与CDEs交替的阶段。</p>
<p>　　Java开发环境的未来</p>
<p>　　在可以看得见的将来，Java的开发环境还会是以CDEs的形式存在。开源组织或开发工具供应商将会努力为软件的开发创建一个绝对光滑的平面 (Frictionless Surface)，实现无损耗的开发过程，以提高开发效率。为了实现无损耗的开发过程，Java的开发环境将会关注以下几个方面:</p>
<p>　　●  起步阶段方面 </p>
<p>　　●  协作开发方面 </p>
<p>　　●  维护开发团队有效沟通方面 </p>
<p>　　●  多个任务的时间协调方面 </p>
<p>　　●  相互协商方面 </p>
<p>　　●  资料有效性方面 </p>
<p>　　但这里必须承认未来Java开发环境是如何具体去实现无损耗的开发，还需要时间给与答案，因为现在所能采用的方法未必是最好的，比如，使用面向文件的 CVS进行协同开发就有需要改进的地方。</p>
<p>　　总结</p>
<p>　　罗里罗唆一大堆，归纳起来不过就是:一个目的、三种手段以及一条规律。</p>
<p>　　一个目的:十年Java开发环境的演变，其目的就是为了提高开发效率。</p>
<p>　　三种手段:</p>
<p>　　●  提高集成在Java开发环境中开发工具的性能和易用性 </p>
<p>　　●  将Java开发环境尽可能的覆盖到整个软件的开发生命周期 </p>
<p>　　●  集成人与人、人与团队以及团对于团队进行交流的工具 </p>
<p>　　一条规律:软件开发环境的发展过程是从CLEs到IDEs再到XDEs最后进入CDEs，这是由Grady Booch总结出来的，套在Java开发环境上也适用。 </p>
<h2 id="3-java_u5E94_u7528_u9886_u57DF"><a href="#3-java_u5E94_u7528_u9886_u57DF" class="headerlink" title="3.java应用领域"></a>3.java应用领域</h2><p>桌面应用系统开发<br>嵌入式系统开发<br>电子商务应用<br>企业级应用开发<br>交互式系统开发<br>多媒体系统开发<br>分布式系统开发<br>Web应用系统开发</p>
<h2 id="4-_u57FA_u672C_u77E5_u8BC6_u6784_u67B6"><a href="#4-_u57FA_u672C_u77E5_u8BC6_u6784_u67B6" class="headerlink" title="4.基本知识构架"></a>4.基本知识构架</h2><p>下图在网上看到的，具体地址遗忘：<br><img src="/img/javause/00.jpg" alt="图片"></p>
<table>
<thead>
<tr>
<th>NO</th>
<th>类别</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>01</td>
<td>操作系统</td>
<td>Windows –&gt; Linux</td>
</tr>
<tr>
<td>02</td>
<td>中间件</td>
<td>Tomcat –&gt; JBoss</td>
</tr>
<tr>
<td>03</td>
<td>数据库</td>
<td>MySQL –&gt; Oracle</td>
</tr>
<tr>
<td>04</td>
<td>JAVA SE</td>
<td>环境搭建 –&gt; 基础程序 –&gt; 面向对象 –&gt; 应用开发 –&gt; 高级应用 –&gt; Java新特性 –&gt; JDBC</td>
</tr>
<tr>
<td>05</td>
<td>JAVA EE</td>
<td>WEB    HTML –&gt; JavaScript –&gt; JSP –&gt; JavaBean –&gt; DAO –&gt; Smartupload –&gt; Servlet –&gt; MVC</td>
</tr>
<tr>
<td>06</td>
<td>开源框架</td>
<td>Struts 1.x –&gt; AJAX –&gt; ECSide报表组件 –&gt; Hibernate –&gt; Spring –&gt; Struts 2.0 –&gt; AJAX框架（DWR、JSON、JQuery）</td>
</tr>
<tr>
<td>07</td>
<td>XML      　</td>
<td>基础语法 –&gt; 解析（DOM/SAX/JDOM）</td>
</tr>
<tr>
<td>08</td>
<td>分布式开发</td>
<td>RMI –&gt; EJB 3.0 –&gt; XFire –&gt; Web Services</td>
</tr>
<tr>
<td>09</td>
<td>搜索引擎</td>
<td>Lucene、HTMLParser、Heritrix</td>
</tr>
<tr>
<td>10</td>
<td>工作流</td>
<td>JBPM</td>
</tr>
<tr>
<td>11</td>
<td>开发工具</td>
<td>Eclipse、Jboss IDE</td>
</tr>
</tbody>
</table>
<p>具体可以参考如下：<br><a href="http://blog.163.com/love_gzhj/blog/static/107086704201173135414127/?newFollowBlog" target="_blank" rel="external">http://blog.163.com/love_gzhj/blog/static/107086704201173135414127/?newFollowBlog</a></p>
<h1 id="u7B2C_u4E8C_u7AE0_uFF1A_u57FA_u672C_u77E5_u8BC6"><a href="#u7B2C_u4E8C_u7AE0_uFF1A_u57FA_u672C_u77E5_u8BC6" class="headerlink" title="第二章：基本知识"></a>第二章：基本知识</h1><h2 id="1-_u6570_u636E_u7C7B_u578B"><a href="#1-_u6570_u636E_u7C7B_u578B" class="headerlink" title="1.数据类型"></a>1.数据类型</h2><p>基本类型：<br>整数型：byte（1字节），short（2字节），int（4字节），long（8字节）<br>浮点型：float（4字节），double（8字节）<br>字符型：char——————————————-<br>Unicode码：’a’=97，char强制转换为int就可以得到<br>布尔类型：boolean（true，false）</p>
<p>自动类型转换：低精度向高精度，整数型与浮点型<br>byte-&gt;short-&gt;int-&gt;long-&gt;float-&gt;double</p>
<p>强制数据类型转换：容易造成数据丢失。boolean不能与其他类型强制转换</p>
<h2 id="2-_u8FD0_u7B97_u7B26"><a href="#2-_u8FD0_u7B97_u7B26" class="headerlink" title="2.运算符"></a>2.运算符</h2><p>赋值运算符：=<br>算术运算符：+,-,*,/,%<br>自增自减运算符：++，–      注意：a++;与++a;后者先加后运算，前者相反<br>比较运算符：&gt;,&lt;,==,&gt;=,&lt;=,!=<br>逻辑运算符:!,&amp;&amp;,&amp;,||,|        注意：&amp;&amp;存在短路：前面有false不会计算后面，而&amp;不存在短路，||与|区别一样<br>位运算符：按位运算符 ~,&amp;,|,^(异或)；移位运算符：&lt;&lt;,&gt;&gt;,&gt;&gt;&gt;(无符号右移位)<br>三元运算符：布尔表达式？表达式1：表达式2</p>
<h2 id="3-_u5E38_u91CF_u53D8_u91CF_uFF0C_u6807_u8BC6_u7B26_u5173_u952E_u5B57_uFF0C_u6CE8_u91CA"><a href="#3-_u5E38_u91CF_u53D8_u91CF_uFF0C_u6807_u8BC6_u7B26_u5173_u952E_u5B57_uFF0C_u6CE8_u91CA" class="headerlink" title="3.常量变量，标识符关键字，注释"></a>3.常量变量，标识符关键字，注释</h2><h2 id="4-_u6D41_u7A0B_u63A7_u5236_u8BED_u53E5"><a href="#4-_u6D41_u7A0B_u63A7_u5236_u8BED_u53E5" class="headerlink" title="4.流程控制语句"></a>4.流程控制语句</h2><p>if…else<br>if…else if…else<br>switch(){case: break;default:break;}<br>for<br>while<br>do…while<br>注意：区别continue与break，使用标签与标志位<br>break退出整个循环，continue退出本次循环，进入下一次；<br>标签应用实例如下：<br>打印出来的是5*5乘法表<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">loop</span>:</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">   <span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">		System.out.<span class="built_in">print</span>(i+<span class="string">"*"</span>+j+<span class="string">"="</span>+i*j+<span class="string">""</span>);</span><br><span class="line">		<span class="keyword">if</span>(j==<span class="number">5</span>)&#123;</span><br><span class="line">			<span class="keyword">break</span> <span class="built_in">loop</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	System.out.<span class="built_in">println</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="5-_u6570_u7EC4"><a href="#5-_u6570_u7EC4" class="headerlink" title="5.数组"></a>5.数组</h2><p>数组是相同类型的、用一个标识符封装到一起的对象序列或者基本类型数据序列，是效率最高的储存和随机访问对象引用序列的方式，他是一个简单的线性序列，所以访问速度快，缺点就是数组一旦创建大小就不可以改变。<br>可以是一维、二维、多维数组。</p>
<p>5.1 一维数组<br>声明<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数组类型 数组名<span class="string">[]</span>；</span><br><span class="line">或者</span><br><span class="line">数组类型<span class="string">[]</span> 数组名；</span><br></pre></td></tr></table></figure></p>
<p>分配空间<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组名字=new 数组类型<span class="string">[数组长度]</span>；</span><br></pre></td></tr></table></figure></p>
<p>初始化<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr1[]=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;<span class="comment">//第一种</span></span><br><span class="line"><span class="keyword">int</span> arr2[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;<span class="comment">//第二种</span></span><br><span class="line"><span class="comment">//第三种</span></span><br><span class="line"><span class="keyword">int</span> arr3[]=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">4</span>];\</span><br><span class="line">arr3[<span class="number">0</span>]=<span class="number">1</span>;arr3[<span class="number">1</span>]=<span class="number">2</span>;arr3[<span class="number">2</span>]=<span class="number">3</span>;arr3[<span class="number">3</span>]=<span class="number">4</span>;</span><br></pre></td></tr></table></figure></p>
<p>遍历<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">String</span> <span class="built_in">day</span>[]=<span class="keyword">new</span> <span class="keyword">String</span>[]&#123;<span class="string">"星期一"</span>,<span class="string">"星期二"</span>,<span class="string">"星期三"</span>,<span class="string">"星期四"</span>,<span class="string">"星期五"</span>,<span class="string">"星期六"</span>,<span class="string">"星期七"</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">day</span>.length;i++)&#123;</span><br><span class="line">	System.out.<span class="built_in">println</span>(<span class="built_in">day</span>[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>5.2 二维数组<br>声明<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">数组类型 数组名<span class="attr_selector">[]</span><span class="attr_selector">[]</span>;</span><br><span class="line">或者</span><br><span class="line">数组类型<span class="attr_selector">[]</span><span class="attr_selector">[]</span> 数组名;</span><br></pre></td></tr></table></figure></p>
<p>分配空间<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数组名字=new 数组类型[<span class="link_label">行</span>][<span class="link_reference">列</span>]；</span><br></pre></td></tr></table></figure></p>
<p>初始化<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">数据类型 变量名称[][]=&#123;</span><br><span class="line"><span class="code">	&#123;value1,value2...&#125;</span></span><br><span class="line"><span class="code">	&#123;valu1,valu2,...&#125;</span></span><br><span class="line">&#125;</span><br><span class="line">或者</span><br><span class="line">arr[<span class="link_label">i</span>][<span class="link_reference">j</span>]=value;</span><br></pre></td></tr></table></figure></p>
<p>遍历<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">String</span> arr[][]=&#123;&#123;<span class="string">"i"</span>,<span class="string">"you"</span>&#125;,&#123;<span class="string">"he"</span>&#125;,&#123;<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>&#125;&#125;<span class="comment">;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span><span class="comment">;i&lt;arr.length;i++)&#123;</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">0</span><span class="comment">;j&lt;arr[i].length;j++)&#123;</span></span><br><span class="line">		System.out.print(arr[i][j]+<span class="string">" "</span>)<span class="comment">;</span></span><br><span class="line">		&#125;</span><br><span class="line">	System.out.println()<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">输出:</span><br><span class="line">i you </span><br><span class="line">he </span><br><span class="line">a b c</span><br></pre></td></tr></table></figure></p>
<p>5.3 foreach遍历数组<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">for</span>(元素变量:遍历对象)&#123;</span><br><span class="line">	循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String arr[][]=&#123;&#123;<span class="string">"i"</span>,<span class="string">"you"</span>&#125;,&#123;<span class="string">"he"</span>&#125;,&#123;<span class="string">"a"</span>,<span class="string">"b"</span>,<span class="string">"c"</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">for</span>(String[] <span class="keyword">is</span>:arr)&#123;</span><br><span class="line">	<span class="keyword">for</span>(String <span class="keyword">is</span><span class="number">2</span>:<span class="keyword">is</span>)&#123;</span><br><span class="line">		System.<span class="keyword">out</span>.print(<span class="keyword">is</span><span class="number">2</span>+<span class="string">" "</span>);</span><br><span class="line">	&#125;</span><br><span class="line">System.<span class="keyword">out</span>.println();</span><br><span class="line">&#125;</span><br><span class="line">输出:</span><br><span class="line">i you </span><br><span class="line">he </span><br><span class="line">a b c</span><br></pre></td></tr></table></figure></p>
<p>5.4 排序<br>冒泡排序：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mysort</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">int</span> arr[]=&#123;<span class="number">6</span>,<span class="number">4</span>,<span class="number">43</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;arr.length;i++)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(arr[i]&gt;arr[j])&#123;<span class="comment">//大的忘后面移动</span></span><br><span class="line">					<span class="keyword">int</span> c=arr[i];</span><br><span class="line">					arr[i]=arr[j];</span><br><span class="line">					arr[j]=c;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			System.out.print(arr[i]+<span class="string">" "</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">输出结果：</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">43</span></span><br></pre></td></tr></table></figure></p>
<p>直接用Arrays提供的sort方法：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> arr[]=&#123;<span class="number">6</span>,<span class="number">4</span>,<span class="number">43</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line">Arrays.sort(arr);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">	System.out.print(arr[i]+<span class="string">" "</span>);</span><br><span class="line">&#125;</span><br><span class="line">输出结果：</span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> <span class="number">43</span></span><br></pre></td></tr></table></figure></p>
<p>Arrays提供的复制数组方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">copyOf</span><span class="params">(arr,int newlength)</span></span><span class="comment">//arr--要进行复制的数组，newlength-复制后的新数组长度 如果新数组长度大于arr数组，int用0填充，char用null填充</span></span><br><span class="line"><span class="function"><span class="title">copyOfRange</span><span class="params">(arr,int formIndex,int toIndex)</span></span><span class="comment">//arr-要进行复制的数组，formIndex-开始复制数组的索引位置，必须是0到数组长度之间，toIndex-复制范围的最后索引位置，可以大于arr长度，新数组包括索引为formIndex的位置，不包括索引为toIndex的位置</span></span><br></pre></td></tr></table></figure></p>
<h2 id="6-_u5B57_u7B26_u4E32"><a href="#6-_u5B57_u7B26_u4E32" class="headerlink" title="6.字符串"></a>6.字符串</h2><p>用java.lang包中的String类来创建字符串对象，String类有很多字符串处理方法</p>
<p>6.1 产生String对象<br>构造方法<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">String</span>()   <span class="comment">//构造的对象是一个空字符串（""）,与空值null是两个概念；用new String();</span></span><br><span class="line">			<span class="comment">//注意："a"+null+"b"结果为"anullb"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span>(<span class="built_in">byte</span>[] bytes)</span><br><span class="line">		[   <span class="built_in">byte</span>[] byteArr = <span class="keyword">new</span> <span class="built_in">byte</span>[]&#123;<span class="number">65</span>,<span class="number">66</span>,<span class="number">67</span>&#125;;</span><br><span class="line">    		<span class="keyword">String</span> <span class="built_in">str</span>=<span class="keyword">new</span> <span class="keyword">String</span>(byteArr);</span><br><span class="line">			System.out.<span class="built_in">print</span>(<span class="built_in">str</span>);</span><br><span class="line">		]<span class="comment">//输出：ABC</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span>(<span class="built_in">byte</span>[] bytes,<span class="keyword">String</span> charsetName)<span class="comment">//指定charsetName编码格式和byte字节数组构造一个新的字符串</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span>(<span class="built_in">char</span>[] value)<span class="comment">//新字符串是字符数组中所有元素连接的结果</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">String</span>(StringBuffer buffer)<span class="comment">//StringBuffer(缓冲字符串)对象缓冲区中的所有内容</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">String</span>(StringBuilder builder)<span class="comment">//StringBuilder(字符串生成器)对象中的内容</span></span><br></pre></td></tr></table></figure></p>
<p>6.2 字符串操作<br>获取长度：length（）<br>截取：substring(int beginIndex)//索引位置开始到字符串结尾<br>     substring(int beginIndex,int endIndex)//索引开始位置到结束位置（不包括结束位置上的字符串）<br>分割：split(String sign)//根据sign(分割符进行分割)//也可以使用正则表达式<br>     split(String sign,int limit)//根据分隔符进行分割，并限定拆分次数<br>如：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">String</span> str1=<span class="string">"姓名：小明！年龄：20,性别：男"</span>;</span><br><span class="line"><span class="keyword">String</span>[] info=<span class="keyword">null</span>;</span><br><span class="line">info=str1.<span class="built_in">split</span>(<span class="string">"！|!|,"</span>);<span class="comment">//中英文!或者,分   </span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; info.length; i++) &#123;</span><br><span class="line">	System.out.<span class="built_in">println</span>(info[i]);</span><br><span class="line">&#125;</span><br><span class="line">输出：</span><br><span class="line">姓名：小明</span><br><span class="line">年龄：<span class="number">20</span></span><br><span class="line">性别：男</span><br></pre></td></tr></table></figure></p>
<p>去除前导空白和尾部空白：trim()<br>查找字符串：<br>indexOf(String str)//返回str在字符串中首次出现的位置，没有则返回-1<br>lastIndexOf(String str)//最后一次出现的位置<br>indexOf(int ch)//返回字符ch(如：105代表i 97代表a)在字符串中首次出现的位置，没有则返回-1<br>lastIndexOf(int ch)//最后一次出现的位置<br>indexOf(int ch,int startIndex)//指定搜索点，指定字符ch首次出现的位置<br>lastIndexOf(int ch,int startIndex)//指定搜索点，指定字符ch最后一次出现的位置<br>如：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">String</span> s=<span class="string">"abcdefghijklmn"</span>;</span><br><span class="line"><span class="built_in">int</span> lastIndex=s.lastIndexOf(<span class="number">105</span>,<span class="number">8</span>);<span class="comment">//i所在的位置为8，如果将8改为小于8的数之后返回-1</span></span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"i所在的位置为"</span>+lastIndex);</span><br><span class="line">System.out.<span class="built_in">println</span>(s.indexOf(<span class="string">"i"</span>));</span><br></pre></td></tr></table></figure></p>
<p>判断是否相等：<br>==比较的是地址是否相同<br>equals（String）比较的是内容是否相同，区分大小写<br>equalsIgnoreCase（String）不区分大小写<br>toUpperCase()–转化为大写<br>toLowerCase()–转化为小写</p>
<p>6.3 可变字符串（StringBuffer类）<br>StringBuffer类创建的字符串可以进行增加、插入处理，可以转化为String对象<br>StringBuffer类的方法：<br>append()—–向字符串生成器中追加内容，此方法有多个重载形式的实现，可以接受任何类型数据<br>如：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">StringBuffer bf=<span class="built_in">new</span> StringBuffer(<span class="string">"java"</span>);</span><br><span class="line">bf.<span class="built_in">append</span>(<span class="string">"编程语言"</span>);</span><br><span class="line">System.out.<span class="built_in">println</span>(bf);<span class="comment">//java编程语言</span></span><br><span class="line">System.out.<span class="built_in">println</span>(bf.toString());<span class="comment">//java编程语言</span></span><br></pre></td></tr></table></figure></p>
<p>delete(start,end)//从StringBuffer对象中移除指定字符串，start-起点位置 end-终点位置<br>如：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">bf.<span class="keyword">delete</span>(<span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">System.out.println(bf);<span class="comment">//编程语言</span></span><br></pre></td></tr></table></figure></p>
<p>insert(offset,arg)//向StringBuffer对象中指定位置插入指定内容，offset-开始位置，arg-插入内容（可以是任意内容）<br>如：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bf</span>.<span class="built_in">insert</span>(<span class="number">0</span>,<span class="string">"java"</span>);</span><br><span class="line">System.out.println(<span class="keyword">bf</span>);//java编程语言</span><br></pre></td></tr></table></figure></p>
<p>toString()—将StringBuffer类对象转化为String对象</p>
<p>6.4 字符串反转<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> splitReverse(<span class="keyword">String</span> <span class="built_in">text</span>)&#123;<span class="comment">//使用split方法</span></span><br><span class="line">  <span class="keyword">String</span>[] <span class="built_in">split</span>= <span class="built_in">text</span>.<span class="built_in">split</span>(<span class="string">""</span>);<span class="comment">//实现截取字符串</span></span><br><span class="line">  <span class="keyword">String</span> newstr=<span class="string">""</span>;</span><br><span class="line">  <span class="built_in">int</span> len=<span class="built_in">split</span>.length;<span class="comment">//数组长度length区别于字符串长度length()</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="built_in">int</span> i = len-<span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">	newstr += <span class="built_in">split</span>[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> newstr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> chatAtReverse(<span class="keyword">String</span> <span class="built_in">text</span>)&#123;<span class="comment">//使用chatAt方法</span></span><br><span class="line">		<span class="keyword">String</span> newstr = <span class="string">""</span>;</span><br><span class="line">		<span class="built_in">int</span> len = <span class="built_in">text</span>.length();</span><br><span class="line">		<span class="keyword">for</span> (<span class="built_in">int</span> i = len-<span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">			newstr += <span class="built_in">text</span>.charAt(i);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> newstr;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="u7B2C_u4E09_u7AE0__u7C7B_uFF08_u5BF9_u8C61_uFF09_u3001_u7EE7_u627F_u4E0E_u591A_u6001_u3001_u63A5_u53E3_u4E0E_u62BD_u8C61_u7C7B"><a href="#u7B2C_u4E09_u7AE0__u7C7B_uFF08_u5BF9_u8C61_uFF09_u3001_u7EE7_u627F_u4E0E_u591A_u6001_u3001_u63A5_u53E3_u4E0E_u62BD_u8C61_u7C7B" class="headerlink" title="第三章 类（对象）、继承与多态、接口与抽象类"></a>第三章 类（对象）、继承与多态、接口与抽象类</h1><h2 id="1-_u7C7B_u4E0E_u5BF9_u8C61"><a href="#1-_u7C7B_u4E0E_u5BF9_u8C61" class="headerlink" title="1.类与对象"></a>1.类与对象</h2><p>面向对象（OOP）：将数据和处理数据的方法紧密的结合一起，形成类，再将类实例化，就形成对象<br>在面向对象的世界，不再需要考虑数据结构和功能函数，只要关注对象就行<br>类是对某一事物的描述，是抽象的、概念的定义，对象是实际存在的该类事物的个体</p>
<p>通过创建类对象的方式来访问类的属性和行为</p>
<p>包：确保类名的唯一性<br>包定义：package 包名；<br>引入包名：import 包名；或者import 包名.类名；</p>
<p>静态方法与成员方法区别：<br>成员方法必须通过对象才能访问，而静态方法还可以直接通过类名调用</p>
<p>静态块：应用static关键字包围，不包含在任何方法中的静态代码块，当类被加载时，静态块就会被执行且只被执行一次<br>如：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Mytest</span> &#123;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">"静态块被执行"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> Mytest();</span><br><span class="line">		<span class="keyword">new</span> Mytest();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">上面不写<span class="keyword">new</span> Mytest();或者写多个<span class="keyword">new</span> Mytest();都只是执行一次</span><br><span class="line">输出：静态块被执行</span><br></pre></td></tr></table></figure></p>
<p>权限修饰符：<br>public–任意可访问<br>protected–只有本包内的该类的子类或者其他类可以访问<br>private–只能在本类中被使用，在子类中不可见，对其他包的类不可见</p>
<p>方法重载：一个类中，出现多个方法名相同，但是参数个数和参数类型不同的方法</p>
<p>构造方法：一定要与类名称相同，一定不含有返回值，定义中不可以用void标识，方法中不能用return语句</p>
<h2 id="2-_u7EE7_u627F_u4E0E_u591A_u6001"><a href="#2-_u7EE7_u627F_u4E0E_u591A_u6001" class="headerlink" title="2.继承与多态"></a>2.继承与多态</h2><p>继承：子类需要拓展父类的功能，加强或者改进原本类所没有定义的属性及方法<br>多态：一个类有其他的表现形式，但是彼此间必须是继承关系</p>
<p>定义子类：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] <span class="class"><span class="keyword">class</span> <span class="title">子类名</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">父类名</span></span></span><br></pre></td></tr></table></figure></p>
<p>//修饰符–指定类的访问权限，有public,abstract,final</p>
<p>继承原则：<br>（1）子类能够继承父类中被声明为public和protected的成员变量和成员方法，但不能继承被声明为private的成员变量和方法<br>（2）子类能够继承在同一个包的由默认修饰符修饰的成员变量和方法<br>（3）子类声明了一个与父类同名的成员变量或者方法，则子类不能继承父类的成员变量或者方法，此时称子类的成员变量隐藏了父类的成员变量或者方法</p>
<p>方法覆盖（方法重写）：被覆盖的方法必须与覆盖方法有相同的方法名称、参数以及返回值类型<br>方法覆盖限制：<br>（1）子类不能覆盖父类中声明为final或者static的方法<br>（2）子类必须覆盖父类声明为abstract的方法，或者子类也将该方法声明为abstract<br>（3）子类覆盖父类声明的同名方法时，子类中的方法声明必须与被覆盖方法的声明相同<br> 注意：子类不能使用比父类中被覆盖的方法更加严格的访问权限，子类的访问权限必须要比父类的大</p>
<p>super关键字：子类中访问被父类隐藏的成员变量或者方法，子类中使用父类的构造方法（子类并不继承父类的构造方法）<br>实例：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">	<span class="keyword">protected</span> <span class="keyword">int</span> x=<span class="number">1</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">s</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bird</span> <span class="keyword">extends</span> <span class="title">Animal</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Bird</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>();<span class="comment">//写在构造方法内正确，写在其他地方错误</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> a=<span class="keyword">super</span>.x;<span class="comment">//父类中x为private则这里错误，可以是protected</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">supers</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">super</span>.s();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//	super.s();//放在外面错误</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>多态是指程序中的同一操作在不同环境中有不同的语义解释</p>
<p>方法重载：一个类中，出现多个相同名称的方法，但是参数类型和参数个数不同<br>注意：方法返回值类型不能作为区分方法重载的标志</p>
<p>上转型：子类可以强转为父类<br>实例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Animal</span> &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">"动物的爬行行为"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bird</span> <span class="title">extends</span> <span class="title">Animal</span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">move</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		System.<span class="keyword">out</span>.println(<span class="string">"鸟儿在天上飞"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Zoo</span> &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">free</span>(<span class="params">Animal animal</span>)</span>&#123;<span class="comment">//定义方式方法</span></span><br><span class="line">		animal.move();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		Zoo zoo = <span class="keyword">new</span> Zoo();</span><br><span class="line">		Bird bird = <span class="keyword">new</span> Bird();</span><br><span class="line">		zoo.free(bird);<span class="comment">//鸟儿在天上飞</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>计算圆形和矩形面积：用方法重载就行，用不同的参数就行，圆形传入一个半径r，而矩形传入长宽</p>
<p>重写equals()方法：<br>两个对象是存放在不同内存空间的两个数据结构，“==”对比的是两个对象的地址，而不能对比内容<br>判断内容是否相等必须用equals()方法，这个方法在Object类中定义，它是所有类的父类，任何类都隐式地继承了该方法，只是没有具体的实现代码，一个完整的数据储存类都应该重写该方法，实现自己的相等性判断<br>实例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bird</span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> boolean <span class="title">equals</span>(<span class="params">Object obj</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">this</span>==obj)<span class="comment">//当前对象</span></span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">		<span class="keyword">if</span>(obj==<span class="keyword">null</span>)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(getClass() != obj.getClass())</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		Bird other = (Bird)obj;</span><br><span class="line">		<span class="keyword">if</span>(id != other.id)</span><br><span class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="keyword">null</span>==name)&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">null</span>!=other.name)</span><br><span class="line">				<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">		&#125;<span class="function"><span class="keyword">else</span> <span class="title">if</span>(<span class="params">!name.equals(other.name</span>))<span class="comment">//注意：字符串比较不能用==</span></span><br><span class="line">			return <span class="keyword">false</span></span>;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span>(<span class="params">String name</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span>(<span class="params"><span class="keyword">int</span> id</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.id = id;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Zoo</span> &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		Bird a=<span class="keyword">new</span> Bird();</span><br><span class="line">		Bird b=<span class="keyword">new</span> Bird();</span><br><span class="line">		a.setName(<span class="string">"a"</span>);</span><br><span class="line">		a.setId(<span class="number">1</span>);</span><br><span class="line">		b.setName(<span class="string">"b"</span>);</span><br><span class="line">		b.setId(<span class="number">1</span>);</span><br><span class="line">		System.<span class="keyword">out</span>.println(a.equals(b));<span class="comment">//false</span></span><br><span class="line">		b.setName(<span class="string">"a"</span>);</span><br><span class="line">		System.<span class="keyword">out</span>.println(a.equals(b));<span class="comment">//true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注意：java C#使用单继承，而C++使用多继承</p>
<h2 id="3-_u63A5_u53E3_u4E0E_u62BD_u8C61_u7C7B"><a href="#3-_u63A5_u53E3_u4E0E_u62BD_u8C61_u7C7B" class="headerlink" title="3.接口与抽象类"></a>3.接口与抽象类</h2><p>抽象方法：只定义方法名而没有定义方法体的方法<br>一个类中定义了抽象方法，则这个类一定是抽象类，但是抽象类不一定含有抽象方法<br>接口：接口中所有方法都是抽象的，是一个完全抽象的类，接口就是一种标准和规范，只定义了方法名而没有方法体，接口只定义了类应该做什么，而不关心如何去做。</p>
<p>接口定义：接口必须被定义为public,否则没有意义，接口文件的文件名必须与接口名相同<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] <span class="class"><span class="keyword">interface</span> 接口名 [<span class="keyword">extends</span> 父接口列表]</span>&#123;</span><br><span class="line">	[<span class="keyword">public</span>] [<span class="keyword">static</span>] [<span class="keyword">final</span>] 常量；</span><br><span class="line">	[<span class="keyword">public</span>] [<span class="keyword">abstract</span>] 方法；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现接口：<br>继承（extends）只能使用单继承，而一次可以实现多个接口（implements）,每个接口用“,”分隔<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[修饰符] <span class="class"><span class="keyword">class</span> &lt;类名&gt; [<span class="keyword">extends</span> 父类名] [<span class="keyword">implements</span> 接口列表]</span>&#123;&#125;</span><br><span class="line">修饰符--访问权限,可选参数：<span class="keyword">public</span>,<span class="keyword">abstract</span>,<span class="keyword">final</span>;</span><br></pre></td></tr></table></figure></p>
<p>注意：实现接口时，方法名字、返回值类型、参数个数和类型必须与接口一样，必须实现接口中所有方法</p>
<p>抽象类（特殊类）：抽象类不能被实例化，即不能使用new关键字来创建对象<br>定义：<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> 类名</span>&#123;</span><br><span class="line">	类体；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注意：abstract只能用在类和方法上，不能用在属性和一般变量上</p>
<p>抽象方法：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> &lt;方法返回值类型&gt; 方法名（参数列表）;</span><br><span class="line">eg:<span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> eat();</span><br></pre></td></tr></table></figure></p>
<p>内部类（嵌套类）:在一个类的内部定义在另一个类，其使用范围只是这个类的内部<br>实例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Outer</span> &#123;</span><br><span class="line">	String outStr=<span class="string">"外部变量"</span>;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">outTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		Inner inner=<span class="keyword">new</span> Inner();</span><br><span class="line">		inner.innerTest();<span class="comment">//调用内部类方法</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">class</span> <span class="title">Inner</span>&#123;<span class="comment">//同一包中的其他类都不能访问</span></span><br><span class="line">		<span class="function"><span class="keyword">void</span> <span class="title">innerTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"内部类调用外部变量:"</span>+outStr);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		Outer <span class="keyword">out</span> = <span class="keyword">new</span> Outer();</span><br><span class="line">		<span class="keyword">out</span>.outTest();<span class="comment">//内部类调用外部变量:外部变量</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="u7B2C_u56DB_u7AE0__u96C6_u5408_u7C7B_uFF08_u5BB9_u5668_uFF09"><a href="#u7B2C_u56DB_u7AE0__u96C6_u5408_u7C7B_uFF08_u5BB9_u5668_uFF09" class="headerlink" title="第四章 集合类（容器）"></a>第四章 集合类（容器）</h1><p>数组长度固定，而集合长度固定<br>集合中储存的是对象，不是基本数据类型<br>集合类：用来存放java对象，常见的有List、Set、Map,其中List和Set实现了Collection接口<br>继承关系如下：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HashMap类，TreeMap类<span class="subst">-&gt;</span><span class="built_in">Map</span>接口<span class="subst">-&gt;</span>java<span class="built_in">.</span>lang<span class="built_in">.</span>Object</span><br><span class="line">HashSet类，TreeSet类<span class="subst">-&gt;</span><span class="built_in">Set</span>接口<span class="subst">-&gt;</span>Collection接口<span class="subst">-&gt;</span>java<span class="built_in">.</span>lang<span class="built_in">.</span>Object</span><br><span class="line">ArrayList类，LinkedList类<span class="subst">-&gt;</span><span class="built_in">List</span>接口<span class="subst">-&gt;</span>Collection接口<span class="subst">-&gt;</span>java<span class="built_in">.</span>lang<span class="built_in">.</span>Object</span><br></pre></td></tr></table></figure></p>
<h2 id="1-Collection_u63A5_u53E3"><a href="#1-Collection_u63A5_u53E3" class="headerlink" title="1.Collection接口"></a>1.Collection接口</h2><p>Collection接口常用方法：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">add(<span class="type">Object</span>)---将指定的对象添加到集合中</span><br><span class="line">remove（<span class="type">Object</span>）--将指定的对象移出集合</span><br><span class="line">isEmpty()---返回boolean,用于判断当前集合是否为空</span><br><span class="line"><span class="keyword">iterator</span>()--返回在此<span class="type">Collection</span>元素上进行迭代的迭代器，用于遍历集合中的对象</span><br><span class="line">size（）--返回<span class="type">int</span>型，获取该集合中元素的个数</span><br><span class="line">clear（）--清空该集合</span><br><span class="line">contains（<span class="type">Object</span> obj）--集合中是否存在指定对象，存在返回<span class="literal">true</span>，否则<span class="literal">false</span></span><br><span class="line">sort()---排序</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class Zoo &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		<span class="keyword">String</span> dog=<span class="string">"dog"</span>;</span><br><span class="line">		<span class="keyword">String</span> cat=<span class="string">"cat"</span>;</span><br><span class="line">		<span class="keyword">String</span> bird=<span class="string">"bird"</span>;</span><br><span class="line">		Collection&lt;<span class="keyword">String</span>&gt; list=<span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">		list.<span class="built_in">add</span>(bird);<span class="comment">//add方法</span></span><br><span class="line">		list.<span class="built_in">add</span>(cat);</span><br><span class="line">		list.<span class="built_in">add</span>(dog);</span><br><span class="line">		Collection&lt;<span class="keyword">String</span>&gt; list2=<span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">		list2.addAll(list);<span class="comment">//addAll方法</span></span><br><span class="line">		Iterator&lt;<span class="keyword">String</span>&gt; it=list2.iterator();<span class="comment">//iterator() </span></span><br><span class="line">		<span class="comment">//可以用isEmpty判断是否为空</span></span><br><span class="line">		System.out.<span class="built_in">println</span>(<span class="string">"是否为空"</span>+list2.isEmpty());<span class="comment">//是否为空false</span></span><br><span class="line">		<span class="keyword">while</span>(it.hasNext())&#123;<span class="comment">//遍历输出</span></span><br><span class="line">			System.out.<span class="built_in">println</span>(it.next());<span class="comment">//bird cat dog</span></span><br><span class="line">		&#125;</span><br><span class="line">		list2.removeAll(list);</span><br><span class="line">		System.out.<span class="built_in">println</span>(<span class="string">"是否为空"</span>+list2.isEmpty());<span class="comment">//是否为空true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u5E38_u89C1_u96C6_u5408_u7C7B"><a href="#2-_u5E38_u89C1_u96C6_u5408_u7C7B" class="headerlink" title="2.常见集合类"></a>2.常见集合类</h2><p>List、Set、Map区别：<br>List中对象可以重复，按照插入顺序排列<br>Set中对象没有顺序，对象不允许重复<br>Map按照Key-value形式储存</p>
<p>2.1 List集合<br>（1）list接口<br>列表类型，以线性方式储存，可以通过对象的索引操作对象<br>常用方法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">add(int index,Object obj)<span class="comment">---向集合的索引位置添加对象，索引位置从0开始，其他对象索引位置后移</span></span><br><span class="line">addAll(int index,Collection coll)<span class="comment">--向集合中的索引位置添加指定集合中的所有对象</span></span><br><span class="line">remove（int index）<span class="comment">--清除集合中指定索引位置的对象</span></span><br><span class="line"><span class="operator"><span class="keyword">set</span>（<span class="built_in">int</span> <span class="keyword">index</span>，<span class="keyword">Object</span> obj）<span class="comment">--将指定位置改为指定对象</span></span><br><span class="line"><span class="keyword">get</span>（<span class="built_in">int</span> <span class="keyword">index</span>）<span class="comment">--获得指定位置的对象</span></span><br><span class="line">indexOf(<span class="keyword">Object</span> obj)<span class="comment">--获取对象的第一个索引位置，不存在返回-1</span></span><br><span class="line">lastIndexOf(<span class="keyword">Object</span> obj)<span class="comment">--获取对象的最后一个索引位置，不存在返回-1</span></span></span><br></pre></td></tr></table></figure></p>
<p>（2）ArrayList类<br>ArrayList类实现的List集合采用数组结构保存对象，<br>数组结构优点：便于快速随机访问，如果经常需要根据索引位置访问对象，ArrayList类效率高<br>数组结构缺点：向指定索引位置插入、删除对象速度较慢，插入或者删除对象的索引位置越小效率越低，因为后面的对象要移动位置<br>eg：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class Zoo &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		<span class="keyword">String</span> dog=<span class="string">"dog"</span>;</span><br><span class="line">		<span class="keyword">String</span> cat=<span class="string">"cat"</span>;</span><br><span class="line">		<span class="keyword">String</span> bird=<span class="string">"bird"</span>;</span><br><span class="line">		List&lt;<span class="keyword">String</span>&gt; list=<span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">		list.<span class="built_in">add</span>(bird);<span class="comment">//add方法</span></span><br><span class="line">		list.<span class="built_in">add</span>(cat);</span><br><span class="line">		list.<span class="built_in">add</span>(dog);</span><br><span class="line">		List&lt;<span class="keyword">String</span>&gt; list2=<span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">		list2.addAll(list);<span class="comment">//addAll方法</span></span><br><span class="line">		Iterator&lt;<span class="keyword">String</span>&gt; it=list2.iterator();<span class="comment">//iterator() </span></span><br><span class="line">		<span class="comment">//可以用isEmpty判断是否为空</span></span><br><span class="line">		System.out.<span class="built_in">println</span>(<span class="string">"是否为空"</span>+list2.isEmpty());<span class="comment">//是否为空false</span></span><br><span class="line">		<span class="keyword">while</span>(it.hasNext())&#123;<span class="comment">//遍历输出</span></span><br><span class="line">			System.out.<span class="built_in">println</span>(it.next());<span class="comment">//bird cat dog</span></span><br><span class="line">		&#125;</span><br><span class="line">		list2.removeAll(list);</span><br><span class="line">		System.out.<span class="built_in">println</span>(<span class="string">"是否为空"</span>+list2.isEmpty());<span class="comment">//是否为空true</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(3)LinkedList类<br>LinkedList类实现List接口使用链表结构保存对象<br>链表结构优点：便于向集合中插入删除对象<br>链表结构缺点：随机访问对象的数据较慢<br>常用方法<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">addFirst</span><span class="params">(E obj)</span></span>--将指定对象插入列表的开头</span><br><span class="line"><span class="function"><span class="title">addLast</span><span class="params">(E obj)</span></span>--将指定对象插入列表的结尾</span><br><span class="line"><span class="function"><span class="title">getFirst</span><span class="params">()</span></span>--获得列表开头的对象</span><br><span class="line"><span class="function"><span class="title">getLast</span><span class="params">()</span></span>--获得列表结尾的对象</span><br><span class="line"><span class="function"><span class="title">removeFirst</span><span class="params">()</span></span>--移除列表开头对象</span><br><span class="line"><span class="function"><span class="title">removeLast</span><span class="params">()</span></span>--移除列表结尾对象</span><br></pre></td></tr></table></figure></p>
<p>eg：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class <span class="type">Zoo</span> &#123;</span><br><span class="line">	public <span class="keyword">static</span> <span class="type">void</span> main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="type">String</span> dog=<span class="string">"dog"</span>;</span><br><span class="line">		<span class="type">String</span> cat=<span class="string">"cat"</span>;</span><br><span class="line">		<span class="type">String</span> bird=<span class="string">"bird"</span>;</span><br><span class="line">		<span class="type">LinkedList</span>&lt;<span class="type">String</span>&gt; list=new <span class="type">LinkedList</span>&lt;<span class="type">String</span>&gt;();</span><br><span class="line">		list.add(bird);//add方法</span><br><span class="line">		list.add(cat);</span><br><span class="line">		list.addFirst(dog);</span><br><span class="line">		<span class="type">Iterator</span>&lt;<span class="type">String</span>&gt; it=list.<span class="keyword">iterator</span>();//<span class="keyword">iterator</span>() </span><br><span class="line">		<span class="keyword">while</span>(it.hasNext())&#123;//遍历输出</span><br><span class="line">			<span class="type">System</span>.<span class="keyword">out</span>.println(it.next());//dog bird cat</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>2.2 Set集合<br>Set集合为集类型，集是最简单的一种集合，集中的对象不按特定的方式排序，只是简单地把对象加入集合中，集中对象的访问操作是通过对象的引用进行的，故而在集中不能放重复对象<br>所以add()方法添加set对象存在对象时，不会进行操作<br>其实现类有HashSet和TreeSet类<br>（1）此类实现Set接口，由哈希表(实际上是一个HashMap实例)支持，它不保证Set的迭代顺序，此类允许用null元素<br>(2)TreeSet类不仅实现了Set接口，还实现了java.util.SortedSet接口，因此其在遍历集合时按照自然顺序递增排序，也可以是按照指定比较器递增排序<br>TreeSet类增加的方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">first</span><span class="params">()</span></span>--返回set中当前第一个（最低）元素</span><br><span class="line"><span class="function"><span class="title">last</span><span class="params">()</span></span>--返回set中当前最后一个（最高）元素</span><br><span class="line"><span class="function"><span class="title">comparator</span><span class="params">()</span></span>--对set中元素进行排序的比较器，如果set使用其元素的自然顺序，则返回null</span><br><span class="line"><span class="function"><span class="title">headSet</span><span class="params">(Object obj)</span></span>--返回一个新的Set集合，新的集合包含<span class="function"><span class="title">obj</span><span class="params">(不包含)</span></span>之前的所有对象</span><br><span class="line"><span class="function"><span class="title">subSet</span><span class="params">(Object form,Object to)</span></span>---返回一个新的Set集合，新的集合包含<span class="function"><span class="title">from</span><span class="params">(包含)</span></span>到<span class="function"><span class="title">to</span><span class="params">(不包含)</span></span>之间的所有对象</span><br><span class="line">tailSet（Object to）--返回一个新的Set集合，新的集合包含<span class="function"><span class="title">to</span><span class="params">(包含)</span></span>之后的所有对象</span><br></pre></td></tr></table></figure></p>
<p>2.3 Map集合<br>Map没有继承Collection接口，其提供的是key到value的映射，Map中不能包含相同的key值，每个key值只能映射一个value<br>(1)Map接口<br>Map接口包含集合常用的方法如clear()、isEmpty()与size()方法等还包含Map接口特有的方法.<br>常用方法：<br><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">put(<span class="keyword">key</span> k,value v)--返回<span class="built_in">Object</span>--向集合添加指定的<span class="keyword">key</span>与value的映射关系</span><br><span class="line">containskey(<span class="built_in">Object</span> <span class="keyword">key</span>)--返回<span class="built_in">boolean</span>--包含指定键的映射则返回<span class="literal">true</span></span><br><span class="line">containsValue(<span class="built_in">Object</span> value)--返回<span class="built_in">boolean</span>--映射将一个或者多个键映射到指定值则返回<span class="literal">true</span></span><br><span class="line"><span class="keyword">get</span>（<span class="built_in">Object</span> <span class="keyword">key</span>）--返回<span class="built_in">Object</span>--返回指定键对象的值，无则返回null</span><br><span class="line">keySet()--返回<span class="keyword">Set</span>--返回集合中所有键对象形成的<span class="keyword">Set</span>集合</span><br><span class="line">values()--返回Collection--返回集合中所有值对象形成的Collection集合</span><br></pre></td></tr></table></figure></p>
<p>（2）HashMap类<br>允许以null作为键对象，但是键对象不能重复，所以只能出现一次<br>HashMap类适合经常需要添加、删除和定位映射关系，不过在遍历集合时得到的映射关系是无序的<br>不能直接遍历Map集合，需要先获取集合中的Key集合与Value集合，再分别遍历Key集合与Value集合<br>实例：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public class <span class="type">Zoo</span> &#123;</span><br><span class="line">	public <span class="keyword">static</span> <span class="type">void</span> main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="type">String</span> dog=<span class="string">"dog"</span>;</span><br><span class="line">		<span class="type">String</span> cat=<span class="string">"cat"</span>;</span><br><span class="line">		<span class="type">String</span> bird=<span class="string">"bird"</span>;</span><br><span class="line">		<span class="type">String</span> pig=<span class="string">"pig"</span>;</span><br><span class="line">		<span class="type">HashMap</span>&lt;<span class="type">String</span>,<span class="type">String</span>&gt; list=new <span class="type">HashMap</span>&lt;<span class="type">String</span>,<span class="type">String</span>&gt;();</span><br><span class="line">		list.put(<span class="string">"1"</span>,bird);//add方法</span><br><span class="line">		list.put(<span class="string">"2"</span>,cat);</span><br><span class="line">		list.put(<span class="string">"3"</span>,dog);</span><br><span class="line">		list.put(<span class="string">"4"</span>, pig);</span><br><span class="line">		</span><br><span class="line">		<span class="type">Collection</span>&lt;<span class="type">String</span>&gt; keySet=list.keySet();</span><br><span class="line">		<span class="type">Iterator</span>&lt;<span class="type">String</span>&gt; keyIt=keySet.<span class="keyword">iterator</span>();//<span class="keyword">iterator</span>() 	</span><br><span class="line">		<span class="keyword">while</span>(keyIt.hasNext())&#123;//遍历输出</span><br><span class="line">			<span class="type">System</span>.<span class="keyword">out</span>.print(keyIt.next()+<span class="string">" "</span>);//<span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">4</span></span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="type">Collection</span>&lt;<span class="type">String</span>&gt; valueSet=list.values();</span><br><span class="line">		<span class="type">Iterator</span>&lt;<span class="type">String</span>&gt; valueIt=valueSet.<span class="keyword">iterator</span>();//<span class="keyword">iterator</span>() 	</span><br><span class="line">		<span class="keyword">while</span>(valueIt.hasNext())&#123;//遍历输出</span><br><span class="line">			<span class="type">System</span>.<span class="keyword">out</span>.print(valueIt.next()+<span class="string">" "</span>);//dog cat bird pig </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>(3)TreeMap类<br>TreeMap类不仅实现了Map接口，还实现了Map接口的子接口java.util.SortedMap<br>TreeMap类实现的集合不允许键对象为null，因为集合中的映射关系按照一定的顺序排序<br>需要进行有序的遍历输出建议用TreeMap类，否则建议用HashMap类<br>实例：<br>键升序排列<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public class <span class="type">Zoo</span> &#123;</span><br><span class="line">	public <span class="keyword">static</span> <span class="type">void</span> main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="type">String</span> dog=<span class="string">"dog"</span>;</span><br><span class="line">		<span class="type">String</span> cat=<span class="string">"cat"</span>;</span><br><span class="line">		<span class="type">String</span> bird=<span class="string">"bird"</span>;</span><br><span class="line">		<span class="type">String</span> pig=<span class="string">"pig"</span>;</span><br><span class="line">		<span class="type">TreeMap</span>&lt;<span class="type">String</span>,<span class="type">String</span>&gt; list=new <span class="type">TreeMap</span>&lt;<span class="type">String</span>,<span class="type">String</span>&gt;();</span><br><span class="line">		list.put(<span class="string">"2"</span>,cat);</span><br><span class="line">		list.put(<span class="string">"1"</span>,bird);//add方法</span><br><span class="line">		list.put(<span class="string">"3"</span>,dog);</span><br><span class="line">		list.put(<span class="string">"4"</span>, pig);</span><br><span class="line">		</span><br><span class="line">		<span class="type">Collection</span>&lt;<span class="type">String</span>&gt; keySet=list.keySet();</span><br><span class="line">		<span class="type">Iterator</span>&lt;<span class="type">String</span>&gt; keyIt=keySet.<span class="keyword">iterator</span>();//<span class="keyword">iterator</span>() 	</span><br><span class="line">		<span class="keyword">while</span>(keyIt.hasNext())&#123;//遍历输出</span><br><span class="line">			<span class="type">System</span>.<span class="keyword">out</span>.print(keyIt.next()+<span class="string">" "</span>);//<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span>  </span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="type">Collection</span>&lt;<span class="type">String</span>&gt; valueSet=list.values();</span><br><span class="line">		<span class="type">Iterator</span>&lt;<span class="type">String</span>&gt; valueIt=valueSet.<span class="keyword">iterator</span>();//<span class="keyword">iterator</span>() 	</span><br><span class="line">		<span class="keyword">while</span>(valueIt.hasNext())&#123;//遍历输出</span><br><span class="line">			<span class="type">System</span>.<span class="keyword">out</span>.print(valueIt.next()+<span class="string">" "</span>);//bird cat dog pig </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>2.4 例子<br>（1）简单电话本<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class Mytest&#123;</span><br><span class="line">	<span class="keyword">static</span> Map <span class="built_in">map</span>=<span class="keyword">new</span> <span class="keyword">HashMap</span>&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt;();<span class="comment">//此行放main中会出错</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> addPerson(<span class="keyword">String</span> name,<span class="keyword">String</span> phone)&#123;</span><br><span class="line">		<span class="built_in">map</span>.put(name, phone);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">String</span> findPhoneByName(<span class="keyword">String</span> name)&#123;</span><br><span class="line">		<span class="keyword">return</span> (<span class="keyword">String</span>) <span class="built_in">map</span>.<span class="built_in">get</span>(name);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		Mytest book=<span class="keyword">new</span> Mytest();</span><br><span class="line">		book.addPerson(<span class="string">"liming"</span>, <span class="string">"111"</span>);</span><br><span class="line">		book.addPerson(<span class="string">"danling"</span>, <span class="string">"222"</span>);</span><br><span class="line">		System.out.<span class="built_in">print</span>(<span class="string">"liming's phone is:"</span>+book.findPhoneByName(<span class="string">"liming"</span>));<span class="comment">//liming's phone is:111</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>（2）去除List集合重复值<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class Zoo &#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		<span class="keyword">String</span> dog=<span class="string">"dog"</span>;</span><br><span class="line">		<span class="keyword">String</span> cat=<span class="string">"cat"</span>;</span><br><span class="line">		<span class="keyword">String</span> bird=<span class="string">"bird"</span>;</span><br><span class="line">		List list=<span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">		list.<span class="built_in">add</span>(cat);</span><br><span class="line">		list.<span class="built_in">add</span>(bird);<span class="comment">//add方法</span></span><br><span class="line">		list.<span class="built_in">add</span>(dog);</span><br><span class="line">		list.<span class="built_in">add</span>(dog);</span><br><span class="line">		</span><br><span class="line">		Iterator&lt;<span class="keyword">String</span>&gt; it=list.iterator();</span><br><span class="line">		<span class="keyword">while</span>(it.hasNext())&#123;<span class="comment">//遍历输出</span></span><br><span class="line">			System.out.<span class="built_in">print</span>(it.next()+<span class="string">" "</span>);<span class="comment">//cat bird dog dog</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//去除重复值---因为set不能重复</span></span><br><span class="line">		Set <span class="built_in">set</span>=<span class="keyword">new</span> HashSet&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">		<span class="built_in">set</span>.addAll(list);</span><br><span class="line">		it=<span class="built_in">set</span>.iterator();</span><br><span class="line">		<span class="keyword">while</span>(it.hasNext())&#123;<span class="comment">//遍历输出</span></span><br><span class="line">			System.out.<span class="built_in">print</span>(it.next()+<span class="string">" "</span>);<span class="comment">//bird cat dog </span></span><br><span class="line">		&#125; 	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="u7B2C_u4E94_u7AE0_IO_u6D41"><a href="#u7B2C_u4E94_u7AE0_IO_u6D41" class="headerlink" title="第五章 IO流"></a>第五章 IO流</h1><p>I/O处理技术可以将数据保存到文本文件、二进制文件等，以达到永久保存数据的要求<br>java以流的形式处理数据，流是一组有序的数组序列，程序从输入流读取数据，向输出流写入数据，每一个数据流都是一个对象，提供各种支持”读入”与”写出”操作的流类。<br>输入输出的数据流可以为文件、网络、压缩包、其他数据源<br>java的输入输出功能来自java.io包中的InputStream类、OutputStream类、Reader类、Writer类以及继承他们的各种子类</p>
<h2 id="1-_u6587_u4EF6_u7C7B"><a href="#1-_u6587_u4EF6_u7C7B" class="headerlink" title="1.文件类"></a>1.文件类</h2><p>File类用于封装系统的文件和目录的相关信息<br>创建File对象<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="keyword">File</span>(<span class="typename">String</span> pathName);//pathName<span class="comment">---包含文件名称的路径名eg:"D://1.txt"</span></span><br><span class="line">或者</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">File</span>(<span class="typename">String</span> parent,<span class="typename">String</span> child);//patent-父路径（必须存在，否则IO异常），child-子路径eg：（<span class="string">"D://a"</span>,<span class="string">"1.txt"</span>）</span><br><span class="line">或者</span><br><span class="line"><span class="keyword">new</span> <span class="keyword">File</span>(<span class="keyword">File</span> parent,<span class="typename">String</span> child);//patent-父抽象路径，child-子路径</span><br></pre></td></tr></table></figure></p>
<p>File类常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String <span class="function"><span class="title">getName</span><span class="params">()</span></span>--------------------获取文件名称</span><br><span class="line">String <span class="function"><span class="title">getParent</span><span class="params">()</span></span>------------------获取文件父路径字符串</span><br><span class="line">String <span class="function"><span class="title">getPath</span><span class="params">()</span></span>--------------------获取文件的相对路径字符串</span><br><span class="line">String <span class="function"><span class="title">getAbsolutePath</span><span class="params">()</span></span>------------获取文件的绝对路径字符串</span><br><span class="line">boolean <span class="function"><span class="title">exists</span><span class="params">()</span></span>--------------------判断文件或者文件夹是否存在</span><br><span class="line">boolean <span class="function"><span class="title">isFile</span><span class="params">()</span></span>--------------------判断是不是文件类型</span><br><span class="line">boolean <span class="function"><span class="title">idDirectory</span><span class="params">()</span></span>---------------判断是不是文件夹类型</span><br><span class="line">boolean <span class="function"><span class="title">isAbsolute</span><span class="params">()</span></span>----------------判断是不是绝对路径</span><br><span class="line">boolean <span class="function"><span class="title">delete</span><span class="params">()</span></span>--------------------删除文件或者文件夹，如果删除成功返回结果为true</span><br><span class="line">boolean <span class="function"><span class="title">mkdir</span><span class="params">()</span></span>---------------------创建文件夹，创建成功返回true</span><br><span class="line">boolean <span class="function"><span class="title">mkdirs</span><span class="params">()</span></span>--------------------创建路径中包含的所有父文件夹和子文件夹，如果所有父文件夹和子文件夹都成功创建返回true</span><br><span class="line">boolean <span class="function"><span class="title">setReadOnly</span><span class="params">()</span></span>---------------设置文件或者文件夹为只读属性</span><br><span class="line">long <span class="function"><span class="title">length</span><span class="params">()</span></span>-----------------------获取文件的长度</span><br><span class="line">long <span class="function"><span class="title">lastModified</span><span class="params">()</span></span>-----------------获取文件的最后修改日期</span><br><span class="line">String[] <span class="function"><span class="title">list</span><span class="params">()</span></span>---------------------获取文件夹中文件或者子文件夹的名称，并存放在字符串数组中</span><br><span class="line">File[] <span class="function"><span class="title">listFiles</span><span class="params">()</span></span>------------------获取文件夹中文件或者子文件夹的名称，并存放在File类型数组中</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Mytest&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="keyword">print</span>(String str)&#123;<span class="comment">//此处需要为static 不然main中不能直接调用</span></span><br><span class="line">		System.out.<span class="keyword">println</span>(str);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">		String filePath=<span class="string">"file/my.txt"</span>;</span><br><span class="line">		<span class="keyword">File</span> <span class="keyword">file</span>=<span class="keyword">new</span> <span class="keyword">File</span>(filePath);<span class="comment">//创建文件对象</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.getName());<span class="comment">//my.txt</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="string">""</span>+<span class="keyword">file</span>.exists());<span class="comment">//boolean类型需要+""转化字符串//false--------------因为没有创建</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.getPath());<span class="comment">//file\my.txt</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.getAbsolutePath());<span class="comment">//F:\Work\MyEclipse_Web\Test\file\my.txt</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.canExecute()+<span class="string">""</span>);<span class="comment">//是不是可执行文件//false</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.canRead()+<span class="string">""</span>);<span class="comment">//是不是可以读取//false</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.canWrite()+<span class="string">""</span>);<span class="comment">//是否可写//false-----因为没有文件</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.getParent());<span class="comment">//file</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.length()+<span class="string">"B"</span>);<span class="comment">//0B</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">new</span> Date(<span class="keyword">file</span>.lastModified())+<span class="string">""</span>);<span class="comment">//Thu Jan 01 08:00:00 CST 1970</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.isFile()+<span class="string">""</span>);<span class="comment">//false</span></span><br><span class="line">		<span class="keyword">print</span>(<span class="keyword">file</span>.isDirectory()+<span class="string">""</span>);<span class="comment">//false</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u5B57_u8282_u8F93_u5165_u8F93_u51FA_u6D41"><a href="#2-_u5B57_u8282_u8F93_u5165_u8F93_u51FA_u6D41" class="headerlink" title="2.字节输入输出流"></a>2.字节输入输出流</h2><p>（1）字节输入流抽象类（不能new实例对象）InputStream<br>方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">int <span class="function"><span class="title">available</span><span class="params">()</span></span>----------------------------返回当前输入流数据读取方法可以读取的有效字节数量</span><br><span class="line">Abstract int <span class="function"><span class="title">read</span><span class="params">()</span></span>------------------------从当前数据流读取一个字节，已经达到结尾则返回-<span class="number">1</span></span><br><span class="line">int <span class="function"><span class="title">read</span><span class="params">(byte[] bytes)</span></span>---------------------从当前输入流读取一定的byte数据，并存放在数组中，返回读取byte数据的数量，达到结尾则返回-<span class="number">1</span></span><br><span class="line">int <span class="function"><span class="title">read</span><span class="params">(byte[] bytes,int off,int len)</span></span>-----从当前输入流读取一定的byte数据，并存放在数组中指定位置，返回读取byte数据的数量，达到结尾则返回-<span class="number">1</span></span><br><span class="line">void <span class="function"><span class="title">reset</span><span class="params">()</span></span>-------------------------------将当前输入流重新定位到最后一次调用<span class="function"><span class="title">mark</span><span class="params">()</span></span>方法时的位置</span><br><span class="line">void <span class="function"><span class="title">mark</span><span class="params">(int readlimit)</span></span>-------------------在当前输入流中做标记位置，当调用reset方法时返回到该位置，从标记位置开始，到再读入readlimit个字符为止，这个标记都维持有效</span><br><span class="line">boolean <span class="function"><span class="title">markSupported</span><span class="params">()</span></span>-------------------测试当前输入流是否支持<span class="function"><span class="title">mark</span><span class="params">()</span></span>和<span class="function"><span class="title">reset</span><span class="params">()</span></span>方法，只要其中一个不支持则返回false</span><br><span class="line">long <span class="function"><span class="title">skip</span><span class="params">(long n)</span></span>--------------------------跳过和丢弃当前输入流的n个字节数据</span><br><span class="line">void <span class="function"><span class="title">close</span><span class="params">()</span></span>-------------------------------关闭当前输入流，并释放与之关联的系统资源</span><br></pre></td></tr></table></figure></p>
<p>实例：用户输入什么，控制台就输出什么<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Mytest</span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		InputStream <span class="keyword">in</span>=System.<span class="keyword">in</span>;</span><br><span class="line">		<span class="keyword">byte</span>[] info=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">while</span>(<span class="keyword">in</span>.read(info) != -<span class="number">1</span>)&#123;<span class="comment">//循环读取用户输入信息</span></span><br><span class="line">				String str=<span class="keyword">new</span> String(info).trim();<span class="comment">//根据输入信息创建字符串</span></span><br><span class="line">				System.<span class="keyword">out</span>.println(str);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">in</span>.close();<span class="comment">//关闭数据流</span></span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(2) 字节输出流抽象类OutputStream<br>方法：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="keyword">write</span>(<span class="keyword">byte</span>[] b)---------------------------将<span class="keyword">byte</span>[]数组中的数据写入当前输出流</span><br><span class="line"><span class="keyword">void</span> <span class="keyword">write</span>(<span class="keyword">byte</span>[] b,<span class="keyword">int</span> off,<span class="keyword">int</span> len)-----------将<span class="keyword">byte</span>[]数组下标off开始的len长度的数据写入当前输出流</span><br><span class="line"><span class="keyword">Abstract</span> <span class="keyword">void</span> <span class="keyword">write</span>(<span class="keyword">byte</span> b)--------------------写入一个<span class="keyword">byte</span>数据到当前输出流</span><br><span class="line"><span class="keyword">void</span> flush()-----------------------------------刷新当前输出流，并强制写入所有缓冲的字节数据</span><br><span class="line"><span class="keyword">void</span> close()-----------------------------------关闭输出流，释放资源</span><br></pre></td></tr></table></figure></p>
<p>实例<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Mytest</span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		OutputStream <span class="keyword">out</span>=System.<span class="keyword">out</span>;</span><br><span class="line">		<span class="keyword">byte</span>[] info=<span class="string">"hello world"</span>.getBytes();</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="keyword">out</span>.write(info);<span class="comment">//控制台输出：hello world</span></span><br><span class="line">			<span class="keyword">out</span>.close();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(3)文件字节输入流FileInputStream<br>文件字节输入流可以从指定文件中读取字节数据，继承自InputStream类<br>创建FileInputStream实例：<br><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> FileInputStream(<span class="keyword">File</span> <span class="keyword">file</span>);</span><br><span class="line">或者</span><br><span class="line"><span class="keyword">new</span> FileInputStream(<span class="typename">String</span> filePath);</span><br></pre></td></tr></table></figure></p>
<p>(4)文件字节输出流类FileOutputStream<br>数据通过文件字节输出流以字节为单位输出并保存到文件中<br>实例创建同FileInputStream<br>输入输出流应用程序：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Mytest&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">		<span class="keyword">File</span> <span class="keyword">file</span>=<span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"1.txt"</span>);</span><br><span class="line">		<span class="keyword">if</span>(!<span class="keyword">file</span>.exists())&#123;<span class="comment">//文件不存在情况</span></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				<span class="keyword">file</span>.createNewFile();<span class="comment">//用File file=new File("file/1.txt");时出现找不到路径</span></span><br><span class="line">				FileOutputStream out=<span class="keyword">new</span> FileOutputStream(<span class="keyword">file</span>);</span><br><span class="line">				<span class="keyword">byte</span>[] info=<span class="string">"hello world"</span>.getBytes();</span><br><span class="line">				out.<span class="keyword">write</span>(info);<span class="comment">//控制台输出：hello world</span></span><br><span class="line">				out.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			FileInputStream in = <span class="keyword">new</span> FileInputStream(<span class="keyword">file</span>);</span><br><span class="line">			<span class="keyword">byte</span>[] msg=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">			<span class="keyword">int</span> len=in.<span class="keyword">read</span>(msg);<span class="comment">//读取文件信息存入msg</span></span><br><span class="line">			System.out.<span class="keyword">print</span>(<span class="keyword">new</span> String(msg,<span class="number">0</span>,len));<span class="comment">//将文件信息输出  //hello world</span></span><br><span class="line">			in.close();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u5B57_u7B26_u8F93_u5165_u8F93_u51FA_u6D41"><a href="#3-_u5B57_u7B26_u8F93_u5165_u8F93_u51FA_u6D41" class="headerlink" title="3.字符输入输出流"></a>3.字符输入输出流</h2><p>注意：<br>字节流以字节为单位传送数据，可以是任何类型的数据如：文本、音频、视频、图片等。<br>字符流以字符为单位传送数据，只能传送文本类型数据，优点：使用字符流读取中文不会乱码，而字节流不能保证<br>java中汉字两个字节，而字符类型数据也是两个字节，所以字符类型能够容纳汉字<br>(1)字符输入流抽象类Reader<br>方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">boolean <span class="function"><span class="title">ready</span><span class="params">()</span></span>-----------------------------判断数据流是否准备好</span><br><span class="line">int <span class="function"><span class="title">read</span><span class="params">()</span></span>----------------------------------读入一个字符，读到流结尾返回-<span class="number">1</span></span><br><span class="line">int <span class="function"><span class="title">read</span><span class="params">(char[])</span></span>----------------------------读取一些字符到char[]数组内，并返回所读入的字符数量，读到流结尾则返回-<span class="number">1</span></span><br><span class="line">Abstract int <span class="function"><span class="title">read</span><span class="params">(char[] chars,int off,int len)</span></span>-读取一些字符到char[]数组小标从off到off+len的位置，并返回读入字符的数量，达到结尾则返回-<span class="number">1</span></span><br><span class="line">void <span class="function"><span class="title">reset</span><span class="params">()</span></span>--------------------------------将当前输入流重新定位到最后一次调用<span class="function"><span class="title">mark</span><span class="params">()</span></span>时的位置</span><br><span class="line">void <span class="function"><span class="title">mark</span><span class="params">(int readLimit)</span></span>--------------------在当前输入流中做标记位置，当调用reset方法时将返回该位置。从标记开始到再读入readLimit个字符为止，这个标记保持有效</span><br><span class="line">boolean <span class="function"><span class="title">markSupported</span><span class="params">()</span></span>---------------------测试当前输入流是否支持mark和reset方法，有一个不支持则返回false</span><br><span class="line">long <span class="function"><span class="title">skip</span><span class="params">(long n)</span></span>----------------------------跳过参数n指定的字符数量，并返回所跳过的字符数量</span><br><span class="line">Abstract void <span class="function"><span class="title">close</span><span class="params">()</span></span>-----------------------关闭流并释放资源</span><br></pre></td></tr></table></figure></p>
<p>（2）字符输出流抽象类Writer<br>方法：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="keyword">write</span>(<span class="keyword">char</span>[] buf)---------------------------将字符数组中的数据写入当前输出流</span><br><span class="line"><span class="keyword">Abstract</span> <span class="keyword">void</span> <span class="keyword">write</span>(<span class="keyword">char</span>[] b,<span class="keyword">int</span> off,<span class="keyword">int</span> len)----将字符数组下标off开始的len长度的数据写入当前输出流</span><br><span class="line"><span class="keyword">void</span> <span class="keyword">write</span>(<span class="keyword">char</span> c)-------------------------------向输出流写入一个字符数据</span><br><span class="line"><span class="keyword">void</span> <span class="keyword">write</span>(String c)-----------------------------向输出流写入一个字符串数据</span><br><span class="line"><span class="keyword">void</span> <span class="keyword">write</span>(String str,<span class="keyword">int</span> off,<span class="keyword">int</span> len)-----------向输出流写入一个字符串从off开始长度为len的数据</span><br><span class="line"><span class="keyword">Abstract</span> <span class="keyword">void</span> flush()----------------------------刷新当前输出流，并强制写入所有缓冲的字节数据</span><br><span class="line"><span class="keyword">Abstract</span> <span class="keyword">void</span> close()----------------------------关闭输出流，释放资源</span><br></pre></td></tr></table></figure></p>
<p>（3）文件字符输入流FileReader<br>创建FileReader实例<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new <span class="function"><span class="title">FileReader</span><span class="params">(File file)</span></span></span><br><span class="line">或者</span><br><span class="line">new <span class="function"><span class="title">FileReader</span><span class="params">(String filePath)</span></span></span><br></pre></td></tr></table></figure></p>
<p>(4)文件字符输出流FileWriter<br>继承自Writer<br>数据通过文件字符输出流以字符为单位输出并保存到文件中<br>创建实例<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">new <span class="function"><span class="title">FileWriter</span><span class="params">(File file)</span></span></span><br><span class="line">或者</span><br><span class="line">new <span class="function"><span class="title">FileWriter</span><span class="params">(String filePath)</span></span></span><br></pre></td></tr></table></figure></p>
<p>文件字符输入输出流实例：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">class</span> Mytest&#123;</span><br><span class="line">	public static void main(String[] <span class="keyword">args</span>) &#123;</span><br><span class="line">		<span class="keyword">File</span> <span class="keyword">file</span>=new <span class="keyword">File</span>(<span class="string">"1.txt"</span>);</span><br><span class="line">			try &#123;</span><br><span class="line">				<span class="keyword">if</span>(!<span class="keyword">file</span>.exists())&#123;<span class="comment">//文件不存在情况</span></span><br><span class="line">					<span class="keyword">file</span>.createNewFile();<span class="comment">//用File file=new File("file/1.txt");时出现找不到路径</span></span><br><span class="line">					&#125;</span><br><span class="line">				FileWriter <span class="keyword">out</span>=new FileWriter(<span class="keyword">file</span>);</span><br><span class="line">				String info=<span class="string">"你好......................."</span>;</span><br><span class="line">				<span class="keyword">out</span>.write(info);<span class="comment">//控制台输出：</span></span><br><span class="line">				<span class="keyword">out</span>.<span class="keyword">close</span>();</span><br><span class="line">			&#125; catch (IOException <span class="keyword">e</span>) &#123;</span><br><span class="line">				<span class="keyword">e</span>.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		try &#123;</span><br><span class="line">			FileReader <span class="keyword">in</span> = new FileReader(<span class="keyword">file</span>);</span><br><span class="line">			<span class="keyword">char</span>[] msg=new <span class="keyword">char</span>[1024];</span><br><span class="line">			int len;</span><br><span class="line">			<span class="keyword">while</span>((len=<span class="keyword">in</span>.<span class="keyword">read</span>(msg))!=-1)&#123;;<span class="comment">//循环读取到文件末尾</span></span><br><span class="line">			System.<span class="keyword">out</span>.<span class="keyword">print</span>(new <span class="literal">String</span>(msg,0,len));<span class="comment">//将文件信息输出 </span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">in</span>.<span class="keyword">close</span>();</span><br><span class="line">		&#125; catch (FileNotFoundException <span class="keyword">e</span>) &#123;</span><br><span class="line">			<span class="keyword">e</span>.printStackTrace();</span><br><span class="line">		&#125; catch (IOException <span class="keyword">e</span>) &#123;</span><br><span class="line">			<span class="keyword">e</span>.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="4-_u64CD_u4F5C"><a href="#4-_u64CD_u4F5C" class="headerlink" title="4.操作"></a>4.操作</h2><p>(1)复制文件夹<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Mytest&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="keyword">copy</span>(<span class="keyword">File</span>[] file1,<span class="keyword">File</span> file2)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!file2.exists())</span><br><span class="line">			file2.mkdir();</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;file1.length;i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(file1[i].isFile())&#123;</span><br><span class="line">				<span class="keyword">try</span>&#123;</span><br><span class="line">					FileInputStream in=<span class="keyword">new</span> FileInputStream(file1[i]);</span><br><span class="line">					FileOutputStream out=<span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> <span class="keyword">File</span>(file2.getPath()+<span class="keyword">File</span>.separator+file1[i].getName()));</span><br><span class="line">					<span class="keyword">int</span> <span class="keyword">count</span>=in.available();</span><br><span class="line">					<span class="keyword">byte</span>[] data=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="keyword">count</span>];</span><br><span class="line">					<span class="keyword">if</span>((in.<span class="keyword">read</span>(data))!=-<span class="number">1</span>)</span><br><span class="line">						out.<span class="keyword">write</span>(data);</span><br><span class="line">					out.close();</span><br><span class="line">					in.close();</span><br><span class="line">				&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(file1[i].isDirectory())&#123;</span><br><span class="line">				<span class="keyword">File</span> des=<span class="keyword">new</span> <span class="keyword">File</span>(file2.getPath()+<span class="keyword">File</span>.separator+file1[i].getName());</span><br><span class="line">				des.mkdir();</span><br><span class="line">				<span class="keyword">copy</span>(file1[i].listFiles(),des);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">		<span class="keyword">File</span> sourFile=<span class="keyword">null</span>,desFile=<span class="keyword">null</span>;</span><br><span class="line">		String sourFolder=<span class="string">"mysrc"</span>;<span class="comment">//被复制的文件夹</span></span><br><span class="line">		String desFolder=<span class="string">"copy"</span>;</span><br><span class="line">		sourFile=<span class="keyword">new</span> <span class="keyword">File</span>(sourFolder);</span><br><span class="line">		desFile=<span class="keyword">new</span> <span class="keyword">File</span>(desFolder);</span><br><span class="line">		<span class="keyword">if</span>(!sourFile.isDirectory()||!sourFile.exists())&#123;<span class="comment">//原文件夹不存在</span></span><br><span class="line">			System.out.<span class="keyword">print</span>(<span class="string">"源文件夹不存在"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		desFile.mkdir();</span><br><span class="line">		<span class="keyword">copy</span>(sourFile.listFiles(),desFile);</span><br><span class="line">		System.out.<span class="keyword">print</span>(<span class="string">"文件夹复制成功"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(2)分行向文件写入数据<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Mytest&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">		String filePath=<span class="string">"mysrc/1.txt"</span>;</span><br><span class="line">		<span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(filePath);</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(!<span class="keyword">file</span>.exists())&#123;</span><br><span class="line">				<span class="keyword">file</span>.createNewFile();</span><br><span class="line">			&#125;</span><br><span class="line">			FileWriter fw=<span class="keyword">new</span> FileWriter(<span class="keyword">file</span>);<span class="comment">//文件字符输出流</span></span><br><span class="line">			BufferedWriter bw=<span class="keyword">new</span> BufferedWriter(fw);<span class="comment">//使用缓冲数据流封装输出流</span></span><br><span class="line">			bw.<span class="keyword">write</span>(<span class="string">"hello"</span>.toCharArray());<span class="comment">//写入数据到输出流</span></span><br><span class="line">			bw.newLine();<span class="comment">//写入换行符</span></span><br><span class="line">			bw.<span class="keyword">write</span>(<span class="string">"你好啊"</span>);</span><br><span class="line">			bw.flush();</span><br><span class="line">		&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>注意：java中的输入输出流是针对内存而言的，将文件从磁盘写入内存就是输入，将内存内容写入磁盘就是输出</p>
<h1 id="u7B2C_u516D_u7AE0_TCP_u4E0EUDP_u534F_u8BAE"><a href="#u7B2C_u516D_u7AE0_TCP_u4E0EUDP_u534F_u8BAE" class="headerlink" title="第六章 TCP与UDP协议"></a>第六章 TCP与UDP协议</h1><h2 id="1-_u7F51_u7EDC_u7F16_u7A0B_u5FC5_u9700_u7AEF_u53E3_u4E0E_u5957_u63A5_u5B57"><a href="#1-_u7F51_u7EDC_u7F16_u7A0B_u5FC5_u9700_u7AEF_u53E3_u4E0E_u5957_u63A5_u5B57" class="headerlink" title="1.网络编程必需端口与套接字"></a>1.网络编程必需端口与套接字</h2><p>网络实现服务器和客户端之间通信<br>服务器：提供信息的计算机或者程序<br>客户端：请求信息的计算机或者程序<br>客户端和服务器沟通除了用相同的协议外，还要指定一个专用开口——端口。</p>
<p>端口并非真实的物理存在，而是一个虚拟的连接装置，端口被规定为0-65535之间的整数<br>HTTP服务一般使用80端口，FTP服务使用21端口<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">客户机1 <span class="tag">&lt;<span class="title">-</span>&gt;</span> 80端口 <span class="tag">&lt;<span class="title">-</span>&gt;</span> HTTP服务器</span><br><span class="line">客户机2 <span class="tag">&lt;<span class="title">-</span>&gt;</span> 21端口 <span class="tag">&lt;<span class="title">-</span>&gt;</span>FTP服务器</span><br></pre></td></tr></table></figure></p>
<p>套接字(Socket)：<br>用来接收或者传送分组的一个端点<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">客户端（应用程序） <span class="tag">&lt;<span class="title">-</span>&gt;</span> Socket <span class="tag">&lt;<span class="title">-</span>&gt;</span> Port ------------- Port <span class="tag">&lt;<span class="title">-</span>&gt;</span> Socket <span class="tag">&lt;<span class="title">-</span>&gt;</span> 服务器（应用程序）</span><br></pre></td></tr></table></figure></p>
<h2 id="2-TCP_u7F16_u7A0B_u539F_u7406"><a href="#2-TCP_u7F16_u7A0B_u539F_u7406" class="headerlink" title="2.TCP编程原理"></a>2.TCP编程原理</h2><p>TCP（Transimission Control Protocol,传输控制协议）：一种以固接连线为基础的协议，提供两台计算机间可靠的数据传送。抵达数据顺序与传输顺序一样。<br>TCP负责数据或者文件的分组和重组，与IP协议一起称为TCP/IP协议，IP协议负责发送与接收数据包<br>TCP协议通信两个应用程序：服务器程序、客户机程序<br>服务器端与客户端交互如下：<br>(1)服务器程序创建一个ServerSocket(服务器套接字)，调用accept()方法等待客户端连接<br>(2)客户端程序创建一个Socket,请求与服务器建立连接<br>(3)服务器接收客户的连接请求，同时创建一个新的Socket与客户建立连接，服务器继续等待新的请求</p>
<p>TCP编程常用类<br>(1)InetAddress类<br>位于java.net包中，InetAddress类对象包含一个Internet主机地址的域名和IP地址<br>常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">InetAddress <span class="function"><span class="title">getByName</span><span class="params">(String host)</span></span>-------------------给定主机名确定IP地址</span><br><span class="line">String <span class="function"><span class="title">getHostAddress</span><span class="params">()</span></span>------------------------------返回IP地址字符串</span><br><span class="line">String <span class="function"><span class="title">getHostName</span><span class="params">()</span></span>---------------------------------获取此IP地址的主机名</span><br><span class="line">Object <span class="function"><span class="title">get</span><span class="params">(int index)</span></span>--------------------------------获取指定索引位置的对象</span><br><span class="line">InetAddress <span class="function"><span class="title">getLocalHost</span><span class="params">()</span></span>---------------------------返回本地主机的InetAddress对象</span><br><span class="line">String <span class="function"><span class="title">toString</span><span class="params">()</span></span>------------------------------------将IP地址转化为String</span><br></pre></td></tr></table></figure></p>
<p>异常处理：UnknownHostException异常——指示主机IP无法确定而抛出的异常<br>实例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Mytest</span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		InetAddress net;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			net=InetAddress.getLocalHost();<span class="comment">//实例化对象</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(net.getHostName());<span class="comment">//主机名:DESKTOP-27618UQ</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(net.getHostAddress());<span class="comment">//IP:127.0.0.1</span></span><br><span class="line">		&#125;<span class="keyword">catch</span>(UnknownHostException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(2)服务器套接字(ServerSocket)<br>用来给服务器端创建套接字，功能：等待来自网络的”请求”，通过指定的端口来等待连接的套接字<br>服务器套接字一次可以与一个套接字连接，多台客户机同时请求时，服务器套接字会将连接的客户机存入队列，从中取出套接字连接，如果请求连接数大于最大容纳数（队列默认50），多出的请求将被拒绝。<br>常用构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">ServerSocket</span><span class="params">(int port)</span></span>----------------创建绑定到特定端口的服务器套接字</span><br><span class="line"><span class="function"><span class="title">ServerSocket</span><span class="params">()</span></span>------------------------创建非绑定服务器套接字</span><br><span class="line"><span class="function"><span class="title">ServerSocket</span><span class="params">(int port,int backlog)</span></span>----利用指定的最大列队长度创建指定的本地端口的服务器端套接字</span><br></pre></td></tr></table></figure></p>
<p>常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Socket <span class="function"><span class="title">accept</span><span class="params">()</span></span>------------------------等待客户机连接，连接上则创建一个套接字</span><br><span class="line">boolean <span class="function"><span class="title">isBound</span><span class="params">()</span></span>----------------------判断ServerSocket的绑定状态</span><br><span class="line">InetAddress <span class="function"><span class="title">getInetAddress</span><span class="params">()</span></span>-----------返回此服务器套接字的本地地址</span><br><span class="line">boolean <span class="function"><span class="title">isClosed</span><span class="params">()</span></span>---------------------返回服务器套接字的关闭状态</span><br><span class="line">void <span class="function"><span class="title">close</span><span class="params">()</span></span>---------------------------关闭服务器套接字</span><br><span class="line">void <span class="function"><span class="title">bind</span><span class="params">(SocketAddress endpoint)</span></span>------将ServerSocket绑定到特定地址（IP地址和端口号）</span><br><span class="line">int <span class="function"><span class="title">getInetAddress</span><span class="params">()</span></span>-------------------返回服务器套接字等待的端口号</span><br></pre></td></tr></table></figure></p>
<p>(3)套接字Socket类<br>客户端创建Socket对象后会向指定的IP地址及端口尝试连接，服务器套接字会创建新的套接字与客户端套接字建立连接，连接成功则可以获取套接字的输入输出流，进行数据交换<br>Socket类常用构造方法<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Socket</span><span class="params">(InetAddress address,int port)</span></span>-------创建连接指定服务器的套接字</span><br><span class="line"><span class="function"><span class="title">Socket</span><span class="params">(String host,int port)</span></span>---------------创建连接指定服务器（主机和端口）的套接字</span><br><span class="line"><span class="function"><span class="title">Socket</span><span class="params">()</span></span>-----------------------------------创建未进行连接的套接字</span><br></pre></td></tr></table></figure></p>
<p>常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">InetAddress <span class="function"><span class="title">getInetAddress</span><span class="params">()</span></span>--------------获取套接字连接的地址</span><br><span class="line">int <span class="function"><span class="title">getPort</span><span class="params">()</span></span>-----------------------------获取套接字连接的端口</span><br><span class="line">InetAddress <span class="function"><span class="title">getLocalAddress</span><span class="params">()</span></span>-------------获取套接字绑定的本地地址</span><br><span class="line">int <span class="function"><span class="title">getLocalPort</span><span class="params">()</span></span>------------------------获取套接字绑定的本地接口</span><br><span class="line">void <span class="function"><span class="title">close</span><span class="params">()</span></span>------------------------------关闭套接字连接</span><br><span class="line">InputStream <span class="function"><span class="title">getInputStream</span><span class="params">()</span></span>--------------获取套接字的输入流</span><br><span class="line">OutputStream <span class="function"><span class="title">getOutputStream</span><span class="params">()</span></span>------------获取套接字的输出流</span><br></pre></td></tr></table></figure></p>
<p>(4)TCP程序编写<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">服务器:</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Server</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> ServerSocket serverSocket;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			serverSocket = <span class="keyword">new</span> ServerSocket(<span class="number">1234</span>);</span><br><span class="line">			Socket cliSocket=serverSocket.accept();<span class="comment">//客户端套接字--接收客户连接呼叫</span></span><br><span class="line">			DataInputStream <span class="keyword">in</span>=<span class="keyword">new</span> DataInputStream(cliSocket.getInputStream());</span><br><span class="line">			DataOutputStream <span class="keyword">out</span>=<span class="keyword">new</span> DataOutputStream(cliSocket.getOutputStream());</span><br><span class="line">			String str=<span class="keyword">null</span>;</span><br><span class="line">			<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">				str=<span class="keyword">in</span>.readUTF();<span class="comment">//读取用户放入连接中的信息</span></span><br><span class="line">				<span class="keyword">out</span>.writeUTF(str);<span class="comment">//信息写回去</span></span><br><span class="line">				System.<span class="keyword">out</span>.println(<span class="string">"服务器收到数据："</span>+str);</span><br><span class="line">				Thread.sleep(<span class="number">1000</span>);<span class="comment">//线程休眠</span></span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">		&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">客户端：</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Client</span> &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> Socket clientScoket;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">		clientScoket = <span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>, <span class="number">1234</span>);</span><br><span class="line">		DataInputStream <span class="keyword">in</span>=<span class="keyword">new</span> DataInputStream(clientScoket.getInputStream());</span><br><span class="line">		DataOutputStream <span class="keyword">out</span>=<span class="keyword">new</span> DataOutputStream(clientScoket.getOutputStream());</span><br><span class="line">		<span class="keyword">out</span>.writeUTF(<span class="string">"我是客户端"</span>);</span><br><span class="line">		<span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">		String str;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">			str=<span class="keyword">in</span>.readUTF();</span><br><span class="line">			<span class="keyword">out</span>.writeUTF(i++ +<span class="string">""</span>);</span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"客户端收到:"</span>+str);</span><br><span class="line">			Thread.sleep(<span class="number">1000</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">运行结果：</span><br><span class="line">服务器收到数据：我是客户端</span><br><span class="line">服务器收到数据：<span class="number">0</span></span><br><span class="line">服务器收到数据：<span class="number">1</span></span><br><span class="line">服务器收到数据：<span class="number">2</span></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">客户端收到:我是客户端</span><br><span class="line">客户端收到:<span class="number">0</span></span><br><span class="line">客户端收到:<span class="number">1</span></span><br><span class="line">客户端收到:<span class="number">2</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<h2 id="3-UDP_u7F16_u7A0B_u539F_u7406"><a href="#3-UDP_u7F16_u7A0B_u539F_u7406" class="headerlink" title="3.UDP编程原理"></a>3.UDP编程原理</h2><p>UDP是一种无连接、不可靠的通信协议，信息传输速度比TCP快<br>UDP程序步骤：<br>发送数据包：<br>(1)使用DatagramSocket()构造方法创建一个数据包套接字<br>(2)使用DatagramPacket(byte[] buf,int offset,int length,InetAddress address,int port)创建要发送的数据包<br>(3)使用DatagramSocket类的send()方法发送数据包<br>接收数据包：<br>(1)使用DatagramSocket(int port)创建数据包套接字，绑定到指定的端口<br>(2)使用DatagramPacket(byte[] buf,int length)创建字节数组，来接收数据包<br>(3)使用DatagramPacket类的receive()方法接收UDP包</p>
<p>UDP编程常用类<br>(1)UDP程序套接字DatagramSocket类<br>构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">DatagramSocket</span><span class="params">()</span></span>------------------------------创建绑定到本地主机上的任何可用的端口</span><br><span class="line"><span class="function"><span class="title">DatagramSocket</span><span class="params">(int port)</span></span>----------------------创建绑定到本地主机上的指定端口的套接字</span><br><span class="line"><span class="function"><span class="title">DatagramSocke</span><span class="params">(int port,InetAddress address)</span></span>---创建数据报套接字，将其绑定到指定的本地地址</span><br><span class="line">通过类的<span class="function"><span class="title">send</span><span class="params">()</span></span>方法发送数据包，<span class="function"><span class="title">receive</span><span class="params">()</span></span>方法接收数据包</span><br></pre></td></tr></table></figure></p>
<p>(2)数据报包类DatagramPacket<br>构造方法：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DatagramPacket(<span class="keyword">byte</span>[] buf,int <span class="built_in">length</span>)<span class="comment">------------------------------指定接收长度，创建DatagramPacket实例</span></span><br><span class="line">DatagramPacket(<span class="keyword">byte</span>[] buf,int <span class="built_in">length</span>,InetAddress address,int port)<span class="comment">--指定了数据包的内容空间和大小，同时指定了数据包的目标地址和端口</span></span><br></pre></td></tr></table></figure></p>
<h2 id="4-_u7EC3_u4E60"><a href="#4-_u7EC3_u4E60" class="headerlink" title="4.练习"></a>4.练习</h2><p>(1)聊天室<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将连接套接字、删除套接字、通过套接字输出信息等操作封装在类 SocketManager中</span></span><br><span class="line"><span class="keyword">public</span> class SocketManager extends ArrayList &#123;</span><br><span class="line">	<span class="comment">//synchronized -- Java语言的关键字，当它用来修饰一个方法或者一个代码块的时候，能够保证在同一时刻最多只有一个线程执行该段代码。</span></span><br><span class="line">	<span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="built_in">add</span>(Socket socket) &#123;</span><br><span class="line">		<span class="keyword">super</span>.<span class="built_in">add</span>(socket);	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">synchronized</span> <span class="keyword">void</span> delete(Socket socket)&#123;</span><br><span class="line">		<span class="keyword">super</span>.remove(socket);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">synchronized</span> <span class="keyword">void</span> sendClientCount()&#123;<span class="comment">//输出当前聊天人数</span></span><br><span class="line">		<span class="keyword">String</span> info=<span class="string">"当前聊天人数"</span>+<span class="built_in">size</span>();<span class="comment">//ArrayList的方法</span></span><br><span class="line">		System.out.<span class="built_in">println</span>(info);</span><br><span class="line">		writeAll(info);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">synchronized</span> <span class="keyword">void</span> writeAll(<span class="keyword">String</span> <span class="built_in">str</span>)&#123;</span><br><span class="line">		PrintWriter writer=<span class="keyword">null</span>;<span class="comment">//PrintWriter是一个非常实用的输出流。</span></span><br><span class="line">		Socket socket;</span><br><span class="line">		<span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">			socket = (Socket)<span class="built_in">get</span>(i);</span><br><span class="line">			<span class="keyword">try</span>&#123;</span><br><span class="line">				writer=<span class="keyword">new</span> PrintWriter(socket.getOutputStream(),<span class="keyword">true</span>);</span><br><span class="line">				<span class="keyword">if</span>(writer!=<span class="keyword">null</span>)</span><br><span class="line">					writer.<span class="built_in">println</span>(<span class="built_in">str</span>);</span><br><span class="line">			&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class ServerProcess &#123;</span><br><span class="line">	<span class="keyword">private</span> SocketManager socketMan=<span class="keyword">new</span> SocketManager();</span><br><span class="line">	<span class="keyword">void</span> getServer()&#123;<span class="comment">//创建套接字方法</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			ServerSocket serverSocket=<span class="keyword">new</span> ServerSocket(<span class="number">1234</span>);</span><br><span class="line">			System.out.<span class="built_in">println</span>(<span class="string">"服务器套接字创建"</span>);</span><br><span class="line">			<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">				Socket socket=serverSocket.accept();<span class="comment">//等待连接</span></span><br><span class="line">				<span class="keyword">new</span> write_Thread(socket).start();</span><br><span class="line">				socketMan.<span class="built_in">add</span>(socket);</span><br><span class="line">				socketMan.sendClientCount();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	class write_Thread extends Thread&#123;</span><br><span class="line">		Socket socket=<span class="keyword">null</span>;</span><br><span class="line">		<span class="keyword">private</span> <span class="keyword">BufferedReader</span> reader;</span><br><span class="line">		<span class="keyword">private</span> PrintWriter writer;</span><br><span class="line">		<span class="keyword">public</span> write_Thread(Socket socket)&#123;</span><br><span class="line">			<span class="keyword">this</span>.socket=socket;</span><br><span class="line">		&#125;</span><br><span class="line">		@Override</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				reader =<span class="keyword">new</span> <span class="keyword">BufferedReader</span>(<span class="keyword">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class="line">				writer =<span class="keyword">new</span> PrintWriter(socket.getOutputStream(),<span class="keyword">true</span>);</span><br><span class="line">				<span class="keyword">String</span> msg;</span><br><span class="line">				<span class="keyword">while</span>((msg=reader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">					System.out.<span class="built_in">println</span>(msg);</span><br><span class="line">					socketMan.writeAll(msg);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		ServerProcess server=<span class="keyword">new</span> ServerProcess();</span><br><span class="line">		server.getServer();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class Client extends JFrame implements Runnable &#123;</span><br><span class="line">	<span class="keyword">private</span> JPanel jpanel = <span class="keyword">new</span> JPanel();</span><br><span class="line">	<span class="keyword">private</span> JLabel nameLabel=<span class="keyword">new</span> JLabel(<span class="string">"姓名： "</span>);</span><br><span class="line">	<span class="keyword">private</span> JTextField nameField=<span class="keyword">new</span> JTextField();</span><br><span class="line">	<span class="keyword">private</span> JTextArea msgArea=<span class="keyword">new</span> JTextArea();</span><br><span class="line">	<span class="keyword">private</span> JTextField sendFiled=<span class="keyword">new</span> JTextField();</span><br><span class="line">	<span class="keyword">private</span> JScrollPane jScrollPane=<span class="keyword">new</span> JScrollPane();</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">BufferedReader</span> reader;</span><br><span class="line">	<span class="keyword">private</span> PrintWriter writer;</span><br><span class="line">	<span class="keyword">private</span> Socket socket;</span><br><span class="line">	<span class="keyword">public</span> Client(<span class="keyword">String</span> title)&#123;</span><br><span class="line">		<span class="keyword">super</span>(title);</span><br><span class="line">		<span class="keyword">this</span>.setSize(<span class="number">360</span>,<span class="number">340</span>);</span><br><span class="line">		<span class="keyword">this</span>.<span class="built_in">add</span>(jpanel);</span><br><span class="line">		jpanel.setLayout(<span class="keyword">null</span>);<span class="comment">//窗体布局</span></span><br><span class="line">		msgArea.setEditable(<span class="keyword">false</span>);</span><br><span class="line">		jpanel.<span class="built_in">add</span>(nameLabel);</span><br><span class="line">		nameLabel.setBounds(<span class="number">10</span>,<span class="number">10</span>,<span class="number">60</span>,<span class="number">20</span>);</span><br><span class="line">		jpanel.<span class="built_in">add</span>(nameField);</span><br><span class="line">		nameField.setBounds(<span class="number">60</span>,<span class="number">10</span>,<span class="number">270</span>,<span class="number">21</span>);</span><br><span class="line">		jpanel.<span class="built_in">add</span>(sendFiled);</span><br><span class="line">		sendFiled.setBounds(<span class="number">10</span>,<span class="number">270</span>,<span class="number">320</span>,<span class="number">21</span>);</span><br><span class="line">		msgArea.setColumns(<span class="number">20</span>);</span><br><span class="line">		msgArea.setRows(<span class="number">5</span>);</span><br><span class="line">		jScrollPane.setViewportView(msgArea);</span><br><span class="line">		jpanel.<span class="built_in">add</span>(jScrollPane);</span><br><span class="line">		jScrollPane.setBounds(<span class="number">10</span>,<span class="number">40</span>,<span class="number">320</span>,<span class="number">220</span>);</span><br><span class="line">		sendFiled.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				writer.<span class="built_in">println</span>(nameField.getText()+<span class="string">":"</span>+sendFiled.getText());</span><br><span class="line">				sendFiled.setText(<span class="string">""</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">			<span class="keyword">try</span>&#123;</span><br><span class="line">				msgArea.<span class="built_in">append</span>(reader.readLine()+<span class="string">"\n"</span>);<span class="comment">//文本域中读取内容分行显示</span></span><br><span class="line">			&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">void</span> getSocket()&#123;</span><br><span class="line">		msgArea.<span class="built_in">append</span>(<span class="string">"尝试与服务器连接"</span>);</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			socket=<span class="keyword">new</span> Socket(<span class="string">"127.0.0.1"</span>,<span class="number">1234</span>);</span><br><span class="line">			msgArea.<span class="built_in">append</span>(<span class="string">"聊天准备完毕"</span>);</span><br><span class="line">			reader=<span class="keyword">new</span> <span class="keyword">BufferedReader</span>(<span class="keyword">new</span> InputStreamReader(socket.getInputStream()));</span><br><span class="line">			writer = <span class="keyword">new</span> PrintWriter(socket.getOutputStream(),<span class="keyword">true</span>);</span><br><span class="line">			<span class="keyword">new</span> Thread(<span class="keyword">this</span>).start();</span><br><span class="line">		&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		Client client=<span class="keyword">new</span> Client(<span class="string">"聊天室"</span>);</span><br><span class="line">		client.setVisible(<span class="keyword">true</span>);</span><br><span class="line">		client.getSocket();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br>服务器：<br>服务器套接字创建<br>当前聊天人数1<br>当前聊天人数2<br>zhang:你好<br>li:你好</p>
<p>客户端：<br><img src="/img/javause/12.png" alt="图片"><br><img src="/img/javause/13.png" alt="图片"></p>
<p>(2)广播数据报<br>一个UDP程序，实现主机不断地向客户端发送消息<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Weather</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	String weather=<span class="string">"天气预报，明天降温"</span>;</span><br><span class="line">	<span class="keyword">int</span> port=<span class="number">1234</span>;</span><br><span class="line">	InetAddress iaddress=<span class="keyword">null</span>;</span><br><span class="line">	MulticastSocket socket=<span class="keyword">null</span>;<span class="comment">//创建多点广播套接字</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Weather</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			iaddress=InetAddress.getByName(<span class="string">"127.0.0.1"</span>);<span class="comment">//实例化InetAddress对象，指定地址</span></span><br><span class="line">			socket=<span class="keyword">new</span> MulticastSocket(port);<span class="comment">//实例化多点广播套接字</span></span><br><span class="line">			socket.setTimeToLive(<span class="number">1</span>);<span class="comment">//指定发送范围是本地网络</span></span><br><span class="line">			socket.joinGroup(iaddress);<span class="comment">//加入广播组</span></span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">			DatagramPacket packet=<span class="keyword">null</span>;</span><br><span class="line">			<span class="keyword">byte</span>[] data=weather.getBytes();<span class="comment">//声明字节数组</span></span><br><span class="line">			packet=<span class="keyword">new</span> DatagramPacket(data, data.length, iaddress, port);</span><br><span class="line">			System.out.println(<span class="keyword">new</span> String(data));</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				socket.send(packet);</span><br><span class="line">				sleep(<span class="number">3000</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Weather w=<span class="keyword">new</span> Weather();</span><br><span class="line">		w.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> <span class="keyword">extends</span> <span class="title">JFrame</span> <span class="keyword">implements</span> <span class="title">Runnable</span>, <span class="title">ActionListener</span> </span>&#123;</span><br><span class="line">	<span class="keyword">int</span> port=<span class="number">1234</span>;</span><br><span class="line">	InetAddress group=<span class="keyword">null</span>;</span><br><span class="line">	MulticastSocket socket=<span class="keyword">null</span>;</span><br><span class="line">	JButton begain=<span class="keyword">new</span> JButton(<span class="string">"接收"</span>);</span><br><span class="line">	JButton stop=<span class="keyword">new</span> JButton(<span class="string">"停止"</span>);</span><br><span class="line">	JTextArea textArea=<span class="keyword">new</span> JTextArea(<span class="number">10</span>,<span class="number">10</span>);<span class="comment">//显示接收广播的文本域</span></span><br><span class="line">	JTextArea textArea2=<span class="keyword">new</span> JTextArea(<span class="number">10</span>,<span class="number">10</span>);</span><br><span class="line">	Thread thread;</span><br><span class="line">	<span class="keyword">boolean</span> b=<span class="keyword">false</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Client</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(<span class="string">"广播数据报"</span>);</span><br><span class="line">		thread=<span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line">		begain.addActionListener(<span class="keyword">this</span>);<span class="comment">//绑定按钮的单击事件</span></span><br><span class="line">		stop.addActionListener(<span class="keyword">this</span>);<span class="comment">//绑定按钮的单击事件</span></span><br><span class="line">		textArea.setForeground(Color.blue);<span class="comment">//指定文本域中文本的颜色</span></span><br><span class="line">		JPanel north=<span class="keyword">new</span> JPanel();<span class="comment">//创建JPanel对象</span></span><br><span class="line">		north.add(begain);</span><br><span class="line">		north.add(stop);</span><br><span class="line">		add(north,BorderLayout.NORTH);<span class="comment">//将north放置在窗体的上面</span></span><br><span class="line">		JPanel center=<span class="keyword">new</span> JPanel();<span class="comment">//创建面板对象center</span></span><br><span class="line">		center.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">1</span>,<span class="number">2</span>));<span class="comment">//设置面板布局</span></span><br><span class="line">		center.add(textArea);<span class="comment">//将文本域添加到面板上</span></span><br><span class="line">		center.add(textArea2);<span class="comment">//将文本域添加到面板上</span></span><br><span class="line">		add(center,BorderLayout.CENTER);<span class="comment">//设置面板布局</span></span><br><span class="line">		validate();<span class="comment">//刷新</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			group=InetAddress.getByName(<span class="string">"127.0.0.1"</span>);</span><br><span class="line">			socket=<span class="keyword">new</span> MulticastSocket(port);</span><br><span class="line">			socket.joinGroup(group);<span class="comment">//加入广播组</span></span><br><span class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">50</span>,<span class="number">360</span>,<span class="number">380</span>);<span class="comment">//设置布局</span></span><br><span class="line">		setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(e.getSource()==begain)&#123;<span class="comment">//单击按钮begain触发事件</span></span><br><span class="line">			begain.setBackground(Color.pink);<span class="comment">//设置按钮颜色</span></span><br><span class="line">			stop.setBackground(Color.gray);</span><br><span class="line">			<span class="keyword">if</span>(!(thread.isAlive()))&#123;<span class="comment">//如果线程不处于新建状态</span></span><br><span class="line">				thread=<span class="keyword">new</span> Thread(<span class="keyword">this</span>);<span class="comment">//实例化Thread</span></span><br><span class="line">			&#125;</span><br><span class="line">			thread.start();</span><br><span class="line">			b=<span class="keyword">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(e.getSource()==stop)&#123;</span><br><span class="line">			begain.setBackground(Color.yellow);</span><br><span class="line">			stop.setBackground(Color.red);</span><br><span class="line">			b=<span class="keyword">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"> 	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> 		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"> 			<span class="keyword">byte</span>[] data=<span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line"> 			DatagramPacket packet=<span class="keyword">new</span> DatagramPacket(data, data.length, group, port);<span class="comment">//待接收的数据包</span></span><br><span class="line"> 			<span class="keyword">try</span> &#123;</span><br><span class="line">				socket.receive(packet);<span class="comment">//接收数据包</span></span><br><span class="line">				String msg=<span class="keyword">new</span> String(data, <span class="number">0</span>, packet.getLength());<span class="comment">//获取数据包中的内容</span></span><br><span class="line">				textArea.setText(<span class="string">"接收的内容： "</span>+msg);<span class="comment">//将接收的内容显示在文本域中</span></span><br><span class="line">				textArea2.append(msg+<span class="string">"\n"</span>);<span class="comment">//每条信息为一行</span></span><br><span class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line"> 			<span class="keyword">if</span>(b==<span class="keyword">true</span>)&#123;</span><br><span class="line"> 				<span class="keyword">break</span>;</span><br><span class="line"> 			&#125;</span><br><span class="line"> 			</span><br><span class="line"> 		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Client client=<span class="keyword">new</span> Client();</span><br><span class="line">		client.setSize(<span class="number">460</span>, <span class="number">200</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br><img src="/img/javause/14.png" alt="图片"></p>
<h1 id="u7B2C_u4E03_u7AE0__u7A97_u53E3_u7A0B_u5E8F_u5F00_u53D1"><a href="#u7B2C_u4E03_u7AE0__u7A97_u53E3_u7A0B_u5E8F_u5F00_u53D1" class="headerlink" title="第七章 窗口程序开发"></a>第七章 窗口程序开发</h1><p>Swing功能比AWT强大，Swing中除了保留AWT中的几个重要的重量级组件外，其他都是轻量级组件，使用java窗体开发很复杂。<br>java窗体开发包含窗体、面板、容器布局以及基本组件等</p>
<h2 id="1-_u521B_u5EFAJFrame_u7A97_u4F53"><a href="#1-_u521B_u5EFAJFrame_u7A97_u4F53" class="headerlink" title="1.创建JFrame窗体"></a>1.创建JFrame窗体</h2><p>JFrame类：定义生成窗体的模板，实例化一个窗体类就生成一个窗体。创建窗体后，可以向窗体添加组件，同时为组件添加事件监听器，处理最大化、最小化、关闭、调整大小等窗体事件。<br>窗体是一个组件容器，所有组件都必须有窗体去承载。<br>构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public <span class="function"><span class="title">JFrame</span><span class="params">()</span></span><span class="comment">//默认构造方法，创建一个初始不可见、没有标题的新窗体</span></span><br><span class="line">或者</span><br><span class="line">public <span class="function"><span class="title">JFrame</span><span class="params">(String title)</span></span><span class="comment">//创建一个初始不可见、有标题的新窗体</span></span><br><span class="line">注意：窗体创建是不可见的，需要使用<span class="function"><span class="title">setVisible</span><span class="params">(true)</span></span>方法使窗体可见，自定义窗体继承自JFrame类</span><br></pre></td></tr></table></figure></p>
<p>实例:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DemoFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		setTitle(<span class="string">"JFrame窗体"</span>);<span class="comment">//设置窗体标题</span></span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">300</span>);<span class="comment">//设置窗口显示位置及窗体大小</span></span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<span class="comment">//给予窗体关闭方式，EXIT_ON_CLOSE表示退出程序，并关闭窗体</span></span><br><span class="line">		<span class="keyword">final</span> JLabel label=<span class="keyword">new</span> JLabel();<span class="comment">//定义标签对象</span></span><br><span class="line">		label.setText(<span class="string">"我的自定义窗口"</span>);</span><br><span class="line">		getContentPane().add(label,BorderLayout.CENTER);<span class="comment">//向窗体添加组件，首先要在窗体中添加容器对象，在容器对象添加组件</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		EventQueue.invokeLater(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">try</span>&#123;</span><br><span class="line">					DemoFrame frame=<span class="keyword">new</span> DemoFrame();</span><br><span class="line">					frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">				&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br><img src="/img/javause/1.png" alt="自定义窗体图片"></p>
<h2 id="2-_u5411_u7A97_u4F53_u6DFB_u52A0_u9762_u677F"><a href="#2-_u5411_u7A97_u4F53_u6DFB_u52A0_u9762_u677F" class="headerlink" title="2.向窗体添加面板"></a>2.向窗体添加面板</h2><p>面板也是一个Swing容器，可以容纳其他组件。<br>面板不能像窗口一样独立使用，必须添加到其他容器中才能发挥作用。<br>(1)JPanel面板<br>JPanel面板可以聚集一些组件进行布局，它继承自java.awt.Container类。<br>JPanel组件作为容器类，除可以添加组件，也可以设置布局管理器，将面板中组件布局<br>如:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> JPanelTest extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">JPanelTest</span><span class="params">()</span></span>&#123;</span><br><span class="line">		Container c=getContentPane();</span><br><span class="line">		c.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>));<span class="comment">//将容器设置为两行两列的网络布局</span></span><br><span class="line">		<span class="comment">//初始化面板，设置边界布局</span></span><br><span class="line">		JPanel p1=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">		JPanel p2=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">		JPanel p3=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">		JPanel p4=<span class="keyword">new</span> JPanel(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">		<span class="comment">//在各面板中添加按钮</span></span><br><span class="line">		p1.add(<span class="keyword">new</span> JButton(<span class="string">"按钮1"</span>));</span><br><span class="line">		p2.add(<span class="keyword">new</span> JButton(<span class="string">"按钮2"</span>));</span><br><span class="line">		p3.add(<span class="keyword">new</span> JButton(<span class="string">"按钮3"</span>));</span><br><span class="line">		p4.add(<span class="keyword">new</span> JButton(<span class="string">"按钮4"</span>));</span><br><span class="line">		<span class="comment">//在容器中添加面板</span></span><br><span class="line">		c.add(p1);</span><br><span class="line">		c.add(p2);</span><br><span class="line">		c.add(p3);</span><br><span class="line">		c.add(p4);</span><br><span class="line">		setVisible(<span class="literal">true</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">400</span>,<span class="number">400</span>);<span class="comment">//设置窗体的显示位置与大小</span></span><br><span class="line">		pack();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> JPanelTest();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/javause/2.png" alt="图片"></p>
<p>(2)JScrollPane面板<br>JScrollPane面板是一种带滚动条的面板，可以较小的容器窗体显示一个较大部分的内容，但是常用于布置单个组件，不可以使用布局管理器。<br>如果要在JScrollPane面板上放置多个组件，需要将多个组件放置在JPanel面板上，然后将面板作为一个整体组件添加在JScrollPane组件上。<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">JScrollPaneDemo</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JFrame</span> &#123;</span></span><br><span class="line">	public <span class="type">JScrollPaneDemo</span>()&#123;</span><br><span class="line">		<span class="type">Container</span> c=getContentPane();<span class="comment">//创建容器</span></span><br><span class="line">		<span class="type">JTextArea</span> jta=<span class="keyword">new</span> <span class="type">JTextArea</span>(<span class="number">20</span>, <span class="number">50</span>);<span class="comment">//创建文本区域组件</span></span><br><span class="line">		<span class="type">JScrollPane</span> jspane=<span class="keyword">new</span> <span class="type">JScrollPane</span>(jta);</span><br><span class="line">		c.add(jspane);<span class="comment">//面板添加到容器中</span></span><br><span class="line">		setTitle(<span class="string">"有滚动条的文字编辑器"</span>);</span><br><span class="line">		setSize(<span class="number">200</span>, <span class="number">200</span>);<span class="comment">//设置窗体大小</span></span><br><span class="line">		setVisible(<span class="literal">true</span>);<span class="comment">//可见</span></span><br><span class="line">		setDefaultCloseOperation(<span class="type">WindowConstants</span>.<span class="type">EXIT_ON_CLOSE</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="keyword">new</span> <span class="type">JScrollPaneDemo</span>();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/javause/3.png" alt="图片"></p>
<p>(3)分割面板<br>分割面板不像JPanel与JScrollPane面板简单，需要设置分割面板水平分割还是垂直分割等<br>分割面板JSplitPane类常用构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JSplitPane</span><span class="params">()</span></span>-----------------------------------------创建一个在水平方向进行分割、无连续布局且为组件使用两个按钮的分割面板</span><br><span class="line"><span class="function"><span class="title">JSplitPane</span><span class="params">(int orient)</span></span>-------------------------------创建一个水平方向分割且无连续布局的分割面板</span><br><span class="line"><span class="function"><span class="title">JSplitPane</span><span class="params">(int orient,Component leftC,Component rigthC)</span></span>-创建一个在指定方向进行分割、不连续重绘的指定组件的分割面板</span><br></pre></td></tr></table></figure></p>
<p>常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">getBottomComponent</span><span class="params">()</span></span>-----------------------------返回分隔条下面或者右边的组件</span><br><span class="line"><span class="function"><span class="title">getDividerSize</span><span class="params">()</span></span>---------------------------------返回分隔条的大小</span><br><span class="line"><span class="function"><span class="title">getLeftComponent</span><span class="params">()</span></span>-------------------------------返回分隔条左边或者上面的组件</span><br><span class="line"><span class="function"><span class="title">getRightComponent</span><span class="params">()</span></span>------------------------------返回分隔条右边或者下面的组件</span><br><span class="line"><span class="function"><span class="title">getTopComponent</span><span class="params">()</span></span>--------------------------------返回分隔条上面或者左边的组件</span><br><span class="line"><span class="function"><span class="title">remove</span><span class="params">(Component component)</span></span>----------------------移除窗格中的子组件component</span><br><span class="line"><span class="function"><span class="title">setBottomComponent</span><span class="params">(Component comp)</span></span>---------------将组件设置到分隔条的下面或者右面</span><br><span class="line"><span class="function"><span class="title">setLeftComponent</span><span class="params">(Component comp)</span></span>-----------------将组件设置到分隔条的左边或者上面</span><br><span class="line"><span class="function"><span class="title">setRightComponent</span><span class="params">(Component comp)</span></span>----------------将组件设置到分隔条的右边或者下面</span><br><span class="line"><span class="function"><span class="title">setTopComponent</span><span class="params">(Component comp)</span></span>------------------将组件设置到分隔条的上面或者左边</span><br><span class="line"><span class="function"><span class="title">setDividerLocation</span><span class="params">(int location)</span></span>-----------------设置分隔条位置</span><br><span class="line"><span class="function"><span class="title">setDividerSize</span><span class="params">(int newSize)</span></span>----------------------设置分隔条大小</span><br><span class="line"><span class="function"><span class="title">setOneTouchExpandable</span><span class="params">(boolean newValue)</span></span>----------属性为true时，可以使分隔条上提供一个UI小部件来快速展开/折叠分隔条</span><br><span class="line"><span class="function"><span class="title">setOrientation</span><span class="params">(int orient)</span></span>-----------------------设置分隔方向，JSplitPane.HORIZONTAL_SPLIT-------------------------水平方向上对分割面板进行分割，JSplitPane.VERTICAL_SPLIT-------------------------垂直方向上对分割面板进行分割</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">SplitPaneFrame</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JFrame</span> &#123;</span></span><br><span class="line">	public <span class="type">SplitPaneFrame</span>()&#123;</span><br><span class="line">		setTitle(<span class="string">"使用分割面板"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">		setDefaultCloseOperation(<span class="type">JFrame</span>.<span class="type">EXIT_ON_CLOSE</span>);</span><br><span class="line">		<span class="comment">//创建在水平方向分割的分割面板</span></span><br><span class="line">		<span class="keyword">final</span> <span class="type">JSplitPane</span> hSplitPane=<span class="keyword">new</span> <span class="type">JSplitPane</span>();</span><br><span class="line">		<span class="type">JButton</span> labelLeft=<span class="keyword">new</span> <span class="type">JButton</span>(<span class="string">"左边"</span>);<span class="comment">//创建标签</span></span><br><span class="line">		<span class="comment">//创建一个在垂直方向进行分割的分割面板</span></span><br><span class="line">		<span class="keyword">final</span> <span class="type">JSplitPane</span> vSplitPane=<span class="keyword">new</span> <span class="type">JSplitPane</span>(<span class="type">JSplitPane</span>.<span class="type">VERTICAL_SPLIT</span>);</span><br><span class="line">		<span class="type">JLabel</span> labelTop=<span class="keyword">new</span> <span class="type">JLabel</span>(<span class="string">"上面"</span>);<span class="comment">//创建标签</span></span><br><span class="line">		<span class="type">JLabel</span> labelBottom=<span class="keyword">new</span> <span class="type">JLabel</span>(<span class="string">"下面"</span>);</span><br><span class="line">		vSplitPane.setBottomComponent(labelBottom);</span><br><span class="line">		vSplitPane.setTopComponent(labelTop);</span><br><span class="line">		vSplitPane.setDividerLocation(<span class="number">40</span>);<span class="comment">//设置垂直分割分隔条距离上边为40像素</span></span><br><span class="line">		hSplitPane.setLeftComponent(labelLeft);<span class="comment">//水平分割面板左边放置标签</span></span><br><span class="line">		hSplitPane.setRightComponent(vSplitPane);<span class="comment">//水平分割面板右边放置垂直分割面板</span></span><br><span class="line">		hSplitPane.setDividerLocation(<span class="number">40</span>);<span class="comment">//水平分隔条距离左边为40像素</span></span><br><span class="line">		hSplitPane.setOneTouchExpandable(<span class="literal">true</span>);<span class="comment">//设置水平分割面板分隔条显示UI小部件</span></span><br><span class="line">		getContentPane().add(hSplitPane);<span class="comment">//把水平分割面板添加到窗体上</span></span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="type">SplitPaneFrame</span> splitPaneFrame=<span class="keyword">new</span> <span class="type">SplitPaneFrame</span>();</span><br><span class="line">		splitPaneFrame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/javause/4.png" alt="图片"></p>
<p>(4)选项卡面板<br>JTabbedPane对象<br>选项卡面板可以在窗体中放置多个标签页，每个标签页相当于与选项卡大小相同的容器，每个标签页可以放置一个或者多个组件，使每个标签页实现不同页面的效果。<br>构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JTabbedPane</span><span class="params">()</span></span>-------------------------------创建一个上面显示标签，布局方式为自动换行的空选项卡</span><br><span class="line"><span class="function"><span class="title">JTabbedPane</span><span class="params">(int tabPlace)</span></span>-------------------创建一个在指定位置显示标签，布局方式为自动换行的空选项卡</span><br><span class="line"><span class="function"><span class="title">JTabbedPane</span><span class="params">(int tabPlace,int tabLayout)</span></span>-----创建一个在指定位置显示标签和具有指定布局策略的空选项卡</span><br></pre></td></tr></table></figure></p>
<p>JTabbedPane类常用字段:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JTabbedPane.TOP<span class="comment">-----------------------------选项卡的上边位置显示标签</span></span><br><span class="line">JTabbedPane.BOTTOM<span class="comment">--------------------------选项卡的下边位置显示标签</span></span><br><span class="line">JTabbedPane.LEFT<span class="comment">----------------------------选项卡的左边位置显示标签</span></span><br><span class="line">JTabbedPane.<span class="constant">RIGHT</span><span class="comment">---------------------------选项卡的右边位置显示标签</span></span><br><span class="line">JTabbedPane.WRAP_TAB_LAYOUT<span class="comment">-----------------当选项卡的一行或一列不能显示所有标签时，标签会自动换行或者换列</span></span><br><span class="line">JTabbedPane.SCROLL_TAB_LAYOUT<span class="comment">---------------当选项卡的一行或一列标签显示不全时，标签行或列会出现UI调节组件</span></span><br></pre></td></tr></table></figure></p>
<p>选项卡面板常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">addTab</span><span class="params">(String title,Component component)</span></span>-------------------------添加一个标题为title且没有图标的选项卡</span><br><span class="line"><span class="function"><span class="title">addTab</span><span class="params">(String title,Icon icon,Component component)</span></span>-------------------------添加一个标题为title,图标为<span class="attribute">icon</span>的选项卡</span><br><span class="line"><span class="function"><span class="title">addTab</span><span class="params">(String title,Icon icon,Component component，String tip)</span></span>-------------------------添加一个标题为title,图标为<span class="attribute">icon</span>，工具提示文本为tip的选项卡</span><br><span class="line"><span class="function"><span class="title">getSelectedComponent</span><span class="params">()</span></span>-------------------------------------------返回选项卡面板当前选择的选项卡</span><br><span class="line"><span class="function"><span class="title">getSelectedIndex</span><span class="params">()</span></span>-----------------------------------------------返回当前选择的选项卡的索引</span><br><span class="line"><span class="function"><span class="title">getTabComponentAt</span><span class="params">(int index)</span></span>-------------------------------------返回索引值为index位置上的选项卡</span><br><span class="line"><span class="function"><span class="title">getTabCount</span><span class="params">()</span></span>----------------------------------------------------返回选项卡面板的选项卡数</span><br><span class="line"><span class="function"><span class="title">getTitleAt</span><span class="params">(int index)</span></span>--------------------------------------------返回索引值为index位置的选项卡标题</span><br><span class="line"><span class="function"><span class="title">getToolTipTextAt</span><span class="params">(int index)</span></span>--------------------------------------返回索引值为index位置的选项卡工具的提示文本</span><br><span class="line"><span class="function"><span class="title">insertTab</span><span class="params">(String title,Icon icon,Component component,String tip,int index)</span></span>--在索引值为index位置插入一个标题为title，图标为<span class="attribute">icon</span>,工具提示文本为tip的选项卡</span><br><span class="line"><span class="function"><span class="title">setIconAt</span><span class="params">(int index,Icon icon)</span></span>-----------------------------------将索引值为index的位置的图标设置为<span class="attribute">icon</span></span><br><span class="line"><span class="function"><span class="title">setSelectedComponent</span><span class="params">(Component e)</span></span>--------------------------------设置此选项卡面板的已选组件</span><br><span class="line"><span class="function"><span class="title">setSelectedIndex</span><span class="params">(int index)</span></span>--------------------------------------设置索引值为index位置处的选项卡为当前选项卡</span><br><span class="line"><span class="function"><span class="title">setTitleAt</span><span class="params">(int index,String title)</span></span>-------------------------------将索引值为index位置的选项卡标题设置为true</span><br><span class="line"><span class="function"><span class="title">setToolTipTextAt</span><span class="params">(int index,String toolTipText)</span></span>-------------------将索引值为index位置的工具提示文本设置为toolTipText</span><br></pre></td></tr></table></figure></p>
<p>实例:——————————————————-图片怎么弄???????????????????????<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">JTabblePaneText</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JFrame</span> &#123;</span></span><br><span class="line">	public <span class="type">JTabblePaneText</span>()&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		setTitle(<span class="string">"创建选项卡面板"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">		setDefaultCloseOperation(<span class="type">JFrame</span>.<span class="type">EXIT_ON_CLOSE</span>);</span><br><span class="line">		<span class="comment">//创建一个在上面显示标签，布局方式为自动换行的空选项卡</span></span><br><span class="line">		<span class="keyword">final</span> <span class="type">JTabbedPane</span> tabbedPane=<span class="keyword">new</span> <span class="type">JTabbedPane</span>();</span><br><span class="line">		<span class="keyword">final</span> <span class="type">JButton</span> button=<span class="keyword">new</span> <span class="type">JButton</span>(<span class="string">"按钮"</span>);<span class="comment">//创建按钮组件</span></span><br><span class="line">		<span class="type">URL</span> url1=<span class="type">JTabblePaneText</span>.<span class="keyword">class</span>.getResource(<span class="string">"1.ico"</span>);<span class="comment">//获取图片所在的URL，本类路径下包含一个1.gif的图片文件，路径不正确会抛出异常</span></span><br><span class="line">		<span class="type">Icon</span> icon1=<span class="keyword">new</span> <span class="type">ImageIcon</span>(url1);<span class="comment">//实例化Icon对象</span></span><br><span class="line">		tabbedPane.addTab(<span class="string">"选项卡1"</span>, icon1, button, <span class="string">"这里使用了按钮"</span>);<span class="comment">//添加组件是按钮，提示文本：这里使用了按钮</span></span><br><span class="line">		<span class="keyword">final</span> <span class="type">JCheckBox</span> checkBox=<span class="keyword">new</span> <span class="type">JCheckBox</span>(<span class="string">"复选框"</span>);<span class="comment">//创建复选框组件</span></span><br><span class="line">		tabbedPane.addTab(<span class="string">"选项卡2"</span>, <span class="literal">null</span>, checkBox, <span class="literal">null</span>);<span class="comment">//第二个选项卡，放置复选框组件，无标题图标和工具栏提示文本</span></span><br><span class="line">		<span class="type">URL</span> url2=<span class="type">JTabblePaneText</span>.<span class="keyword">class</span>.getResource(<span class="string">"2.ico"</span>);</span><br><span class="line">		<span class="type">Icon</span> icon2=<span class="keyword">new</span> <span class="type">ImageIcon</span>(url2);</span><br><span class="line">		tabbedPane.setIconAt(<span class="number">1</span>, icon2);<span class="comment">//第二个选项卡添加标签图标</span></span><br><span class="line">		<span class="type">JTextArea</span> textArea = <span class="keyword">new</span> <span class="type">JTextArea</span>(<span class="string">"文本区域"</span>);<span class="comment">//创建文本域组件</span></span><br><span class="line">		<span class="type">URL</span> url3=<span class="type">JTabblePaneText</span>.<span class="keyword">class</span>.getResource(<span class="string">"3.ico"</span>);</span><br><span class="line">		<span class="type">Icon</span> icon3=<span class="keyword">new</span> <span class="type">ImageIcon</span>(url3);</span><br><span class="line">		tabbedPane.addTab(<span class="string">"选项卡3"</span>, icon3, textArea, <span class="literal">null</span>);<span class="comment">//第三个选项卡，放置文本域组件，选项卡无标签图片和工具提示文本</span></span><br><span class="line">		tabbedPane.setToolTipTextAt(<span class="number">2</span>, <span class="string">"这里使用文本域"</span>);<span class="comment">//为第3个选项卡添加工具提示文本</span></span><br><span class="line">		<span class="keyword">final</span> <span class="type">JRadioButton</span> radioButton=<span class="keyword">new</span> <span class="type">JRadioButton</span>(<span class="string">"单选按钮"</span>);<span class="comment">//创建单选按钮组件</span></span><br><span class="line">		<span class="type">URL</span> url4=<span class="type">JTabblePaneText</span>.<span class="keyword">class</span>.getResource(<span class="string">"4.ico"</span>);</span><br><span class="line">		<span class="type">Icon</span> icon4=<span class="keyword">new</span> <span class="type">ImageIcon</span>(url4);</span><br><span class="line">		tabbedPane.addTab(<span class="string">"选项卡4"</span>, icon4, radioButton, <span class="literal">null</span>);</span><br><span class="line">		getContentPane().add(tabbedPane, <span class="type">BorderLayout</span>.<span class="type">CENTER</span>);<span class="comment">//选项卡放到窗体上</span></span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="type">JTabblePaneText</span> tabblePaneFrame=<span class="keyword">new</span> <span class="type">JTabblePaneText</span>();</span><br><span class="line">		tabblePaneFrame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u5E03_u5C40"><a href="#3-_u5E03_u5C40" class="headerlink" title="3.布局"></a>3.布局</h2><p>java开发应用程序必须用布局管理器管理每个容器中的组件布局，因为不同的平台显示组件的策略和样式不一样，无法确定不同平台的组件大小和样式<br>(1)绝对布局<br>使用绝对布局的窗体，需要牺牲跨平台的性能，采用绝对布局在不同的平台上可能出现组件重叠现象。<br>绝对布局步骤：<br>A.使用Container.setLayout(null)方式取消布局管理器<br>B.使用Component.setBounds()方法来设置每个组件的大小与位置<br>实例：绝对布局创建登录窗体<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> EntryFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">EntryFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);<span class="comment">//窗体设置为绝对布局</span></span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">320</span>,<span class="number">180</span>);<span class="comment">//窗体显示位置和大小</span></span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();<span class="comment">//定义面板组件</span></span><br><span class="line">		panel.setLayout(null);<span class="comment">//面板布局方式</span></span><br><span class="line">		panel.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">316</span>,<span class="number">150</span>);<span class="comment">//面板位置和大小</span></span><br><span class="line">		getContentPane().add(panel);<span class="comment">//窗体中添加面板</span></span><br><span class="line">		</span><br><span class="line">		final JLabel name =<span class="keyword">new</span> JLabel();<span class="comment">//标签</span></span><br><span class="line">		name.setFont(<span class="keyword">new</span> Font(<span class="string">"微软雅黑"</span>, Font.PLAIN,<span class="number">12</span>));<span class="comment">//设置标签显示字体样式</span></span><br><span class="line">		name.setText(<span class="string">"用户名："</span>);<span class="comment">//设置标签显示内容</span></span><br><span class="line">		name.setBounds(<span class="number">62</span>,<span class="number">27</span>,<span class="number">52</span>,<span class="number">26</span>);</span><br><span class="line">		panel.add(name);</span><br><span class="line">		JTextField nameTextField=<span class="keyword">new</span> JTextField();<span class="comment">//文本控件框</span></span><br><span class="line">		nameTextField.setBounds(<span class="number">120</span>,<span class="number">30</span>,<span class="number">129</span>,<span class="number">22</span>);</span><br><span class="line">		panel.add(nameTextField);</span><br><span class="line">		</span><br><span class="line">		final JLabel passWd =<span class="keyword">new</span> JLabel();<span class="comment">//标签</span></span><br><span class="line">		passWd.setFont(<span class="keyword">new</span> Font(<span class="string">"微软雅黑"</span>, Font.PLAIN,<span class="number">12</span>));<span class="comment">//设置标签显示字体样式</span></span><br><span class="line">		passWd.setText(<span class="string">"密码："</span>);<span class="comment">//设置标签显示内容</span></span><br><span class="line">		passWd.setBounds(<span class="number">65</span>,<span class="number">55</span>,<span class="number">44</span>,<span class="number">18</span>);</span><br><span class="line">		panel.add(passWd);</span><br><span class="line">		JTextField passWdTextField=<span class="keyword">new</span> JTextField();<span class="comment">//文本控件框</span></span><br><span class="line">		passWdTextField.setBounds(<span class="number">120</span>,<span class="number">58</span>,<span class="number">129</span>,<span class="number">22</span>);</span><br><span class="line">		panel.add(passWdTextField);</span><br><span class="line">		</span><br><span class="line">		final JButton entry=<span class="keyword">new</span> JButton();</span><br><span class="line">		entry.setText(<span class="string">"登录"</span>);</span><br><span class="line">		entry.setBounds(<span class="number">84</span>,<span class="number">104</span>,<span class="number">64</span>,<span class="number">28</span>);</span><br><span class="line">		panel.add(entry);</span><br><span class="line">		final JButton cancel=<span class="keyword">new</span> JButton();</span><br><span class="line">		cancel.setText(<span class="string">"取消"</span>);</span><br><span class="line">		cancel.setBounds(<span class="number">170</span>,<span class="number">104</span>,<span class="number">64</span>,<span class="number">28</span>);</span><br><span class="line">		panel.add(cancel);</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		EventQueue.invokeLater(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">				<span class="keyword">try</span>&#123;</span><br><span class="line">					EntryFrame frame=<span class="keyword">new</span> EntryFrame();</span><br><span class="line">					frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">				&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/javause/6.png" alt="图片"></p>
<p>(2)边界布局<br>BorderLayout类<br>该布局管理器将组件布局在东南西北中五个区域，每个区域放置一个组件，也可以是指定区域中放置包含其他组件的容器。<br>构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">BorderLayout</span><span class="params">()</span></span>--------------------------创建默认的边界布局管理器，在各个区域的水平垂直方向没有设置组件间距</span><br><span class="line"><span class="function"><span class="title">BorderLayout</span><span class="params">(h,v)</span></span>-----------------------根据接收的两个参数设置管理器水平和垂直方向的间距</span><br></pre></td></tr></table></figure></p>
<p>定位常量:<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BorderLayout.NORTH<span class="comment">-----------------------在容器中添加组件时组件位于顶部</span></span><br><span class="line">BorderLayout.SOUTH<span class="comment">-----------------------在容器中添加组件时组件位于底部</span></span><br><span class="line">BorderLayout.EAST<span class="comment">------------------------在容器中添加组件时组件位于右部</span></span><br><span class="line">BorderLayout.WEST<span class="comment">------------------------在容器中添加组件时组件位于左 部</span></span><br><span class="line">BorderLayout.CENTER<span class="comment">----------------------在容器中添加组件时组件置于中间开始填充，直到与其他组件边界连接</span></span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BorderFrame</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JFrame</span> &#123;</span></span><br><span class="line">	public <span class="type">BorderFrame</span>()&#123;</span><br><span class="line">		setTitle(<span class="string">"边界布局管理器"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line">		<span class="type">JButton</span> northButton=<span class="keyword">new</span> <span class="type">JButton</span>(<span class="string">"北"</span>);</span><br><span class="line">		<span class="type">JButton</span> southButton=<span class="keyword">new</span> <span class="type">JButton</span>(<span class="string">"南"</span>);</span><br><span class="line">		<span class="type">JButton</span> westButton=<span class="keyword">new</span> <span class="type">JButton</span>(<span class="string">"西"</span>);</span><br><span class="line">		<span class="type">JButton</span> eastButton=<span class="keyword">new</span> <span class="type">JButton</span>(<span class="string">"东"</span>);</span><br><span class="line">		<span class="type">JButton</span> centerButton=<span class="keyword">new</span> <span class="type">JButton</span>(<span class="string">"中"</span>);</span><br><span class="line">		<span class="type">Container</span> panel=getContentPane();<span class="comment">//获取窗体容器</span></span><br><span class="line">		panel.setLayout(<span class="keyword">new</span> <span class="type">BorderLayout</span>());<span class="comment">//容器使用边界布局管理器</span></span><br><span class="line">		panel.add(northButton,<span class="type">BorderLayout</span>.<span class="type">NORTH</span>);<span class="comment">//将按钮添加到指定位置</span></span><br><span class="line">		panel.add(southButton,<span class="type">BorderLayout</span>.<span class="type">SOUTH</span>);<span class="comment">//将按钮添加到指定位置</span></span><br><span class="line">		panel.add(westButton,<span class="type">BorderLayout</span>.<span class="type">WEST</span>);<span class="comment">//将按钮添加到指定位置</span></span><br><span class="line">		panel.add(eastButton,<span class="type">BorderLayout</span>.<span class="type">EAST</span>);<span class="comment">//将按钮添加到指定位置</span></span><br><span class="line">		panel.add(centerButton,<span class="type">BorderLayout</span>.<span class="type">CENTER</span>);<span class="comment">//将按钮添加到指定位置</span></span><br><span class="line">		setDefaultCloseOperation(<span class="type">WindowConstants</span>.<span class="type">EXIT_ON_CLOSE</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="type">BorderFrame</span> frame=<span class="keyword">new</span> <span class="type">BorderFrame</span>();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果：<br><img src="/img/javause/7.png" alt="图片"></p>
<p>(3)网格布局<br>GridLayout类<br>网格布局：容器被分成大小相等的矩形，每个矩形区域可以放置一个组件<br>构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">GridLayout</span><span class="params">()</span></span>-----------------------------------------------创建默认网格布局，组件排列在一行或者一列中</span><br><span class="line"><span class="function"><span class="title">GridLayout</span><span class="params">(int rows,int cols)</span></span>------------------------------指定行数、列数网格布局，所有组件分配相同大小空间</span><br><span class="line"><span class="function"><span class="title">GridLayout</span><span class="params">(int rows,int cols,int hgap,int vgap)</span></span>------------指定行数、列数、组件间距网格布局，所有组件分配相同大小空间</span><br></pre></td></tr></table></figure></p>
<p>常用方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">setColumns</span><span class="params">(int cols)</span></span>---------------------------------------设置布局管理器列数</span><br><span class="line"><span class="function"><span class="title">setRows</span><span class="params">(int rows)</span></span>------------------------------------------设置布局管理器行数</span><br><span class="line"><span class="function"><span class="title">setHgap</span><span class="params">(int hgap)</span></span>------------------------------------------设置布局管理器组件水平距离</span><br><span class="line"><span class="function"><span class="title">setVgap</span><span class="params">(int vgap)</span></span>------------------------------------------设置布局管理器组件垂直距离</span><br></pre></td></tr></table></figure></p>
<p>实例<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> GridLayoutFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">GridLayoutFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		setTitle(<span class="string">"网格布局"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">200</span>);</span><br><span class="line">		JButton[] button=<span class="keyword">new</span> JButton[<span class="number">9</span>];<span class="comment">//定义按钮数组</span></span><br><span class="line">		Container panel=getContentPane();<span class="comment">//定义容器</span></span><br><span class="line">		panel.setLayout(<span class="keyword">new</span> GridLayout(<span class="number">3</span>,<span class="number">3</span>));</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; button.length; i++) &#123;</span><br><span class="line">			button[i]=<span class="keyword">new</span> JButton(<span class="string">"按钮"</span>+(i+<span class="number">1</span>));<span class="comment">//不能用++i---否则死循环</span></span><br><span class="line">			panel.add(button[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		GridLayoutFrame frame=<span class="keyword">new</span> GridLayoutFrame();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br><img src="/img/javause/8.png" alt="图片"></p>
<p>（4）流式布局<br>FlowLayout类<br>像流一样按指定方向排放控件，直到占据一行的所有空间（根据窗体大小而定），再向下移动到下一行。<br>构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">FlowLayout</span><span class="params">()</span></span>-----------------------------------------居中对齐，默认的水平和垂直间距是<span class="number">5</span>个单位</span><br><span class="line"><span class="function"><span class="title">FlowLayout</span><span class="params">(int align)</span></span>--------------------------------创建具有指定对齐方式的FlowLayout对象</span><br><span class="line"><span class="function"><span class="title">FlowLayout</span><span class="params">(int align,int hgap,int vgap)</span></span>--------------创建指定对齐方式及指定的水平垂直间隔</span><br></pre></td></tr></table></figure></p>
<p>对齐方式（align）:<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">FlowLayout.LEFT<span class="comment">---------------单行中左对齐</span></span><br><span class="line">FlowLayout.CENTER<span class="comment">-------------单行中中对齐</span></span><br><span class="line">FlowLayout.<span class="constant">RIGHT</span><span class="comment">--------------单行中右对齐</span></span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> FlowLayoutFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FlowLayoutFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		setTitle(<span class="string">"流式布局管理器"</span>);</span><br><span class="line">		Container c=getContentPane();</span><br><span class="line">		c.setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER,<span class="number">10</span>,<span class="number">10</span>));<span class="comment">//窗体使用流式布局，控件居中</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">			c.add(<span class="keyword">new</span> JButton(<span class="string">"按钮"</span>+i));</span><br><span class="line">		&#125;</span><br><span class="line">		setSize(<span class="number">300</span>,<span class="number">200</span>);<span class="comment">//设置窗体大小</span></span><br><span class="line">		setVisible(<span class="literal">true</span>);</span><br><span class="line">		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> FlowLayoutFrame();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：调整窗体大小会得到不同排列结果——根据窗口大小一行一行排完<br><img src="/img/javause/9.png" alt="图片"></p>
<h2 id="4-_u57FA_u672C_u63A7_u4EF6"><a href="#4-_u57FA_u672C_u63A7_u4EF6" class="headerlink" title="4.基本控件"></a>4.基本控件</h2><p>组件是绘制软件界面的基本元素，是软件和用户之间的交流要素。<br>(1)标签JLabel<br>标签用于显示文本或者提示信息，支持文本字符串和图标。<br>构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JLabel</span><span class="params">()</span></span>-----------------------------------------------创建一个既无文本内容又无图像内容的标签</span><br><span class="line"><span class="function"><span class="title">JLabel</span><span class="params">(String text)</span></span>------------------------------------创建一个具有文本内容的标签</span><br><span class="line"><span class="function"><span class="title">JLabel</span><span class="params">(String text,int horizontalAlignment)</span></span>------------创建一个具有文本内容并且指定水平显示位置的标签</span><br><span class="line"><span class="function"><span class="title">JLabel</span><span class="params">(Icon icon)</span></span>--------------------------------------创建一个具有图像内容的标签</span><br><span class="line"><span class="function"><span class="title">JLabel</span><span class="params">(Icon icon,int horizontalAlignment)</span></span>--------------创建一个具有图像内容并且指定水平显示位置的标签</span><br><span class="line"><span class="function"><span class="title">JLabel</span><span class="params">(String text,Icon icon,int horizontalAlignment)</span></span>--创建一个既有文本内容又有图像内容并且指定水平显示位置的标签</span><br></pre></td></tr></table></figure></p>
<p>常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">setText</span><span class="params">(String text)</span></span>-----------------------------------设置显示的文本</span><br><span class="line"><span class="function"><span class="title">setIcon</span><span class="params">(Icon icon)</span></span>-------------------------------------设置显示的图像</span><br><span class="line"><span class="function"><span class="title">setHorizontalAlignment</span><span class="params">(int alignment)</span></span>------------------设置标签内容在水平方向的对齐方式</span><br><span class="line"><span class="function"><span class="title">setHorizontalTextPosition</span><span class="params">(int textPosition)</span></span>------------设置文本相对于图像在水平方向的位置</span><br><span class="line"><span class="function"><span class="title">setVerticalAlignment</span><span class="params">(int alignment)</span></span>--------------------设置标签内容在垂直方向的对齐方式</span><br><span class="line"><span class="function"><span class="title">setVerticalTextPosition</span><span class="params">(int textPosition)</span></span>--------------设置文本相对于图像在垂直方向的位置</span><br><span class="line"><span class="function"><span class="title">setIconTextGap</span><span class="params">(int iconTextGap)</span></span>------------------------设置文本与图像之间的距离，单位像素，默认为<span class="number">4</span></span><br><span class="line"><span class="function"><span class="title">setEnabled</span><span class="params">(boolean enabled)</span></span>----------------------------设置标签是否可用</span><br><span class="line"><span class="function"><span class="title">setDisabledIcon</span><span class="params">(Icon disabledIcon)</span></span>---------------------设置当标签不考用时显示的图像</span><br></pre></td></tr></table></figure></p>
<p>(2)普通按钮JButton<br>构造方法：<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">JButton</span>(String <span class="value">text</span>)-----------------------------创建一个带有文本标识的按钮</span><br><span class="line"><span class="function">JButton</span>(<span class="attribute">Icon</span> <span class="attribute">icon</span>)-------------------------------创建一个带有图像标识的按钮</span><br><span class="line"><span class="function">JButton</span>(String <span class="value">text</span>，<span class="attribute">Icon</span> <span class="attribute">icon</span>)------------------创建一个带有文本和图像标识的按钮</span><br></pre></td></tr></table></figure></p>
<p>常用方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">isDefaultButton</span><span class="params">()</span></span>--------------------------------查看按钮是否为所在顶层容器组件的默认按钮，是则true</span><br><span class="line"><span class="function"><span class="title">removeNotify</span><span class="params">()</span></span>-----------------------------------如果按钮为所在顶层容器组件的默认按钮，则将顶层容器组件的默认按钮设置为null</span><br><span class="line"><span class="function"><span class="title">setEnabled</span><span class="params">(boolean b)</span></span>----------------------------设置按钮是否可用，默认可用，设置false不可用</span><br><span class="line"><span class="function"><span class="title">setIcon</span><span class="params">(Icon defaultIcon)</span></span>------------------------设置按钮的默认图像</span><br><span class="line"><span class="function"><span class="title">setRolloverIcon</span><span class="params">(Icon rolloverIcon)</span></span>---------------设置当光标移动到按钮上时显示的图像</span><br><span class="line"><span class="function"><span class="title">setPressedIcon</span><span class="params">(Icon pressedIcon)</span></span>-----------------设置当按钮被按下时显示的图像</span><br><span class="line"><span class="function"><span class="title">setDisabledIcon</span><span class="params">(Icon disabledIcon)</span></span>---------------设置当按钮不可用时显示的图像</span><br><span class="line"><span class="function"><span class="title">addActionListener</span><span class="params">(ActionListener l)</span></span>--------------为按钮添加一个ActionListener监听器，捕获按钮的ActionEvent事件</span><br><span class="line"><span class="function"><span class="title">addChangeListener</span><span class="params">(ChangeListener l)</span></span>--------------为按钮添加一个ChangeListener监听器，捕获按钮的ChangeEvent事件</span><br></pre></td></tr></table></figure></p>
<p>(3)单选按钮JRadioButton<br>JRadioButton类可以单独使用，也可以与ButtonGroup类联合使用组成一个单选按钮组（只能选择其中一个）<br>ButtonGroup常用方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">add</span><span class="params">(AbstractButton b)</span></span>--------------------------------------添加按钮到按钮组中</span><br><span class="line"><span class="function"><span class="title">remove</span><span class="params">(AbstractButton b)</span></span>-----------------------------------从按钮组中移除按钮</span><br><span class="line"><span class="function"><span class="title">getButtonCount</span><span class="params">()</span></span>-------------------------------------------返回按钮组中包含按钮的个数，返回int型</span><br><span class="line"><span class="function"><span class="title">getElements</span><span class="params">()</span></span>----------------------------------------------返回一个Enumeration类型的对象，通过该对象可以遍历按钮组中包含的所有按钮对象</span><br></pre></td></tr></table></figure></p>
<p>JRadioButton构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JRadioButton</span><span class="params">()</span></span>------------------------------------------创建一个默认的单选按钮，在默认情况下没有指定文本和图像，而且没有被选中</span><br><span class="line"><span class="function"><span class="title">JRadioButton</span><span class="params">(String text)</span></span>-------------------------------创建一个指定文本的单选按钮</span><br><span class="line"><span class="function"><span class="title">JRadioButton</span><span class="params">(String text,boolean selected)</span></span>--------------创建一个指定文本和选择状态的单选按钮</span><br></pre></td></tr></table></figure></p>
<p>注意:在联合使用JRadioButton和ButtonGroup时，并不能将包含JRadioButton对象的Button对象添加到相应的容器组中，只能逐个添加JRadioButton对象到相应的容器控件中<br>实例:<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JRadioButtonFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">	<span class="keyword">public</span> JRadioButtonFrame()&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		setTitle(<span class="string">"单选按钮"</span>);</span><br><span class="line">		ButtonGroup <span class="keyword">group</span>=<span class="keyword">new</span> ButtonGroup();</span><br><span class="line">		getContentPane().setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER));</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">230</span>,<span class="number">90</span>);</span><br><span class="line">		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		<span class="keyword">final</span> JRadioButton radioButton1=<span class="keyword">new</span> JRadioButton();</span><br><span class="line">		<span class="keyword">group</span>.add(radioButton1);</span><br><span class="line">		radioButton1.setText(<span class="string">"运动"</span>);</span><br><span class="line">		getContentPane().add(radioButton1);</span><br><span class="line">		<span class="keyword">final</span> JRadioButton radioButton2=<span class="keyword">new</span> JRadioButton(<span class="string">"读书"</span>,<span class="keyword">true</span>);</span><br><span class="line">		<span class="keyword">group</span>.add(radioButton2);</span><br><span class="line">		getContentPane().add(radioButton2);</span><br><span class="line"><span class="comment">//		final JRadioButton radioButton3=new JRadioButton("音乐",true);//设置成这样不取作用，还是只有按钮2被选中</span></span><br><span class="line">		<span class="keyword">final</span> JRadioButton radioButton3=<span class="keyword">new</span> JRadioButton(<span class="string">"音乐"</span>);</span><br><span class="line">		<span class="keyword">group</span>.add(radioButton3);</span><br><span class="line">		getContentPane().add(radioButton3);</span><br><span class="line">		setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</span><br><span class="line">		<span class="keyword">new</span> JRadioButtonFrame();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br><img src="/img/javause/10.png" alt="图片"></p>
<p>(4)复选框JCheckBox<br>复选框控件可以同时选择多个选项<br>构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JCheckBox</span><span class="params">()</span></span>--------------------------------------------创建一个默认的复选框，在默认情况下既未指定文本又未指定图像，并且未被选择</span><br><span class="line"><span class="function"><span class="title">JCheckBox</span><span class="params">(String text)</span></span>---------------------------------创建一个指定文本的复选框</span><br><span class="line"><span class="function"><span class="title">JCheckBox</span><span class="params">(String text,boolean selected)</span></span>----------------创建一个指定文本和选择状态的复选框</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> CheckBoxFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CheckBoxFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">300</span>,<span class="number">100</span>);</span><br><span class="line">		setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);</span><br><span class="line">		JCheckBox cb1=<span class="keyword">new</span> JCheckBox();</span><br><span class="line">		cb1.setBounds(<span class="number">10</span>,<span class="number">34</span>,<span class="number">64</span>,<span class="number">26</span>);</span><br><span class="line">		cb1.setText(<span class="string">"运动"</span>);</span><br><span class="line">		getContentPane().add(cb1);</span><br><span class="line">		JCheckBox cb2=<span class="keyword">new</span> JCheckBox();</span><br><span class="line">		cb2.setBounds(<span class="number">110</span>,<span class="number">34</span>,<span class="number">64</span>,<span class="number">26</span>);</span><br><span class="line">		cb2.setText(<span class="string">"读书"</span>);</span><br><span class="line">		getContentPane().add(cb2);</span><br><span class="line">		JCheckBox cb3=<span class="keyword">new</span> JCheckBox();</span><br><span class="line">		cb3.setBounds(<span class="number">210</span>,<span class="number">34</span>,<span class="number">64</span>,<span class="number">26</span>);</span><br><span class="line">		cb3.setText(<span class="string">"音乐"</span>);</span><br><span class="line">		getContentPane().add(cb3);</span><br><span class="line">		final JLabel label=<span class="keyword">new</span> JLabel();</span><br><span class="line">		label.setText(<span class="string">"你的爱好是:"</span>);</span><br><span class="line">		label.setBounds(<span class="number">10</span>,<span class="number">10</span>,<span class="number">91</span>,<span class="number">18</span>);</span><br><span class="line">		getContentPane().add(label);</span><br><span class="line">		setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> CheckBoxFrame();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/11.png" alt="图片"></p>
<p>（5）文本<br>文本控件包含单行文本框控件JTextFiled、密码控件JPasswordField、文本域控件JTextArea<br>单行文本框控件JTextFiled类构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JTextFiled</span><span class="params">()</span></span>---------------------------------------创建一个默认的文本框</span><br><span class="line"><span class="function"><span class="title">JTextFiled</span><span class="params">(String text)</span></span>----------------------------创建一个指定初始化文本信息的文本框</span><br><span class="line"><span class="function"><span class="title">JTextFiled</span><span class="params">(int columns)</span></span>----------------------------创建一个指定列数的文本框</span><br><span class="line"><span class="function"><span class="title">JTextFiled</span><span class="params">(String text,int columns)</span></span>----------------创建一个指定初始化文本信息又指定列数的文本框</span><br></pre></td></tr></table></figure></p>
<p>密码控件JPasswordField构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JPasswordField</span><span class="params">()</span></span>-----------------------------------创建一个默认的密码框</span><br><span class="line"><span class="function"><span class="title">JPasswordField</span><span class="params">(String text)</span></span>------------------------创建一个指定初始化文本信息的密码框</span><br><span class="line"><span class="function"><span class="title">JPasswordField</span><span class="params">(int columns)</span></span>------------------------创建一个指定列数的密码框</span><br><span class="line"><span class="function"><span class="title">JPasswordField</span><span class="params">(String text,int columns)</span></span>------------创建一个指定初始化文本信息和指定列数的密码框</span><br><span class="line"></span><br><span class="line">方法：</span><br><span class="line"><span class="function"><span class="title">setEchoChar</span><span class="params">(char a)</span></span>--------------------------------改变密码框中的显示字符</span><br></pre></td></tr></table></figure></p>
<p>文本域控件JTextArea构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JTextArea</span><span class="params">()</span></span>---------------------------------------创建一个默认的文本域</span><br><span class="line"><span class="function"><span class="title">JTextArea</span><span class="params">(String text)</span></span>----------------------------创建一个包含指定内容的文本域</span><br><span class="line"><span class="function"><span class="title">JTextArea</span><span class="params">(int rows,int columns)</span></span>-------------------创建一个指定行数和列数的文本域</span><br><span class="line"><span class="function"><span class="title">JTextArea</span><span class="params">(String text,int rows,int columns)</span></span>-------创建一个包含指定内容又指定行数和列数的文本域</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">FieldDemo</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JFrame</span> &#123;</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">JTextArea</span> textArea;</span><br><span class="line">	public static void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="type">FieldDemo</span> frame=<span class="keyword">new</span> <span class="type">FieldDemo</span>();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	public <span class="type">FieldDemo</span>() &#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">		getContentPane().setLayout(<span class="literal">null</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">378</span>, <span class="number">311</span>);</span><br><span class="line">		setDefaultCloseOperation(<span class="type">JFrame</span>.<span class="type">EXIT_ON_CLOSE</span>);</span><br><span class="line">		<span class="keyword">final</span> <span class="type">JScrollPane</span> scrollPane=<span class="keyword">new</span> <span class="type">JScrollPane</span>();<span class="comment">//滚动面板</span></span><br><span class="line">		scrollPane.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">370</span>,<span class="number">277</span>);</span><br><span class="line">		getContentPane().add(scrollPane);<span class="comment">//将滚动面板添加到窗体中</span></span><br><span class="line">		textArea=<span class="keyword">new</span> <span class="type">JTextArea</span>();<span class="comment">//创建文本域控件</span></span><br><span class="line">		scrollPane.setViewportView(textArea);<span class="comment">//将文本域添加到控制面板</span></span><br><span class="line">		<span class="type">String</span> aline;</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			<span class="type">BufferedReader</span> br=<span class="keyword">new</span> <span class="type">BufferedReader</span>(<span class="keyword">new</span> <span class="type">FileReader</span>(<span class="string">"src/com/zhang/test/FieldDemo.java"</span>));</span><br><span class="line">			<span class="keyword">while</span>((aline=br.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">				textArea.append(aline+<span class="string">"\n"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			br.close(); </span><br><span class="line">		&#125; <span class="keyword">catch</span> (<span class="type">Exception</span> e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/15.png" alt="图片"></p>
<p>(6)列表控件<br>列表框包括列表框Jlist和下拉列表框JComboBox。<br>Jlist类构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Jlist</span><span class="params">()</span></span>------------------------------------------创建一个不包含任何选项的列表框</span><br><span class="line"><span class="function"><span class="title">Jlist</span><span class="params">(Object[] listData)</span></span>-------------------------创建一个包含选项的列表框，选项为指定数组的所有元素</span><br><span class="line"><span class="function"><span class="title">JList</span><span class="params">(Vector&lt;?&gt; listData)</span></span>------------------------创建一个包含选项的选择框，选项为指定数组的所有元素</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> JListDemo extends JFrame &#123;</span><br><span class="line">	<span class="keyword">private</span> JList <span class="built_in">list</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">JListDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">266</span>, <span class="number">182</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">262</span>, <span class="number">151</span>);</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		final JLabel label=<span class="keyword">new</span> JLabel();<span class="comment">//定义标签</span></span><br><span class="line">		label.setText(<span class="string">"爱好"</span>);</span><br><span class="line">		label.setBounds(<span class="number">44</span>, <span class="number">30</span>, <span class="number">39</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(label);</span><br><span class="line">		final JScrollPane scrollPane=<span class="keyword">new</span> JScrollPane();<span class="comment">//滚动面板</span></span><br><span class="line">		scrollPane.setBounds(<span class="number">92</span>, <span class="number">28</span>, <span class="number">100</span>, <span class="number">105</span>);</span><br><span class="line">		panel.add(scrollPane);</span><br><span class="line">		String[] like=&#123;<span class="string">"看电影"</span>,<span class="string">"跑步"</span>,<span class="string">"听音乐"</span>,<span class="string">"读书"</span>,<span class="string">"打游戏"</span>,<span class="string">"健身"</span>,<span class="string">"聊天"</span>&#125;;</span><br><span class="line">		<span class="built_in">list</span>=<span class="keyword">new</span> JList(like);<span class="comment">//将数组添加到组件中</span></span><br><span class="line">		scrollPane.setViewportView(<span class="built_in">list</span>);<span class="comment">//将列表添加到滚动面板</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		JListDemo frame=<span class="keyword">new</span> JListDemo();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/16.png" alt="图片"></p>
<p>JComboBox类构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JComboBox</span><span class="params">()</span></span>--------------------------------------创建一个不包含任何选项的选择框</span><br><span class="line"><span class="function"><span class="title">JComboBox</span><span class="params">(Object[] items)</span></span>------------------------创建一个包含选项的选择框，选择为指定数组中的所有元素</span><br><span class="line"><span class="function"><span class="title">JComboBox</span><span class="params">(Vector&lt;?&gt; items)</span></span>-----------------------创建一个包含选项的选择框，选项为指定向量中的所有元素</span><br><span class="line"><span class="function"><span class="title">JComboBox</span><span class="params">(ComboBoxModel aModel)</span></span>------------------创建一个JComboBox，列表项目取自指定的ComboBoxModel</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> JComboBoxDemo extends JFrame &#123;</span><br><span class="line">	<span class="keyword">private</span> JComboBox <span class="built_in">list</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">JComboBoxDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">266</span>, <span class="number">240</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">262</span>, <span class="number">151</span>);</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		final JLabel label=<span class="keyword">new</span> JLabel();<span class="comment">//定义标签</span></span><br><span class="line">		label.setText(<span class="string">"爱好"</span>);</span><br><span class="line">		label.setBounds(<span class="number">44</span>, <span class="number">30</span>, <span class="number">39</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(label);</span><br><span class="line">		final JScrollPane scrollPane=<span class="keyword">new</span> JScrollPane();<span class="comment">//滚动面板</span></span><br><span class="line">		scrollPane.setBounds(<span class="number">92</span>, <span class="number">28</span>, <span class="number">100</span>, <span class="number">30</span>);</span><br><span class="line">		panel.add(scrollPane);</span><br><span class="line">		String[] like=&#123;<span class="string">"看电影"</span>,<span class="string">"跑步"</span>,<span class="string">"听音乐"</span>,<span class="string">"读书"</span>,<span class="string">"打游戏"</span>,<span class="string">"健身"</span>,<span class="string">"聊天"</span>&#125;;</span><br><span class="line">		<span class="built_in">list</span>=<span class="keyword">new</span> JComboBox(like);<span class="comment">//将数组添加到组件中</span></span><br><span class="line">		scrollPane.setViewportView(<span class="built_in">list</span>);<span class="comment">//将列表添加到滚动面板</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		JComboBoxDemo frame=<span class="keyword">new</span> JComboBoxDemo();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/17.png" alt="图片"></p>
<h2 id="5-_u7EC3_u4E60"><a href="#5-_u7EC3_u4E60" class="headerlink" title="5.练习"></a>5.练习</h2><p>(1)制作不规则按钮<br>不规则按钮可以使按钮只显示图片，需要用到JButton类方法setContentAreaFilled(Boolean bool)使按钮取消填充区域和setBorder(Border border)取消组件的边框。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">setContentAreaFilled</span><span class="params">(Boolean bool)</span></span>---------bool为ture表示填充内容区域，false取消填充区域</span><br><span class="line"><span class="function"><span class="title">setBorder</span><span class="params">(Border border)</span></span>-------------------<span class="attribute">border</span>表示为此组件呈现的边框，为null时取消组件的边框</span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> ComBoBoxDemo extends JFrame &#123;</span><br><span class="line">	<span class="keyword">private</span> JComboBox comboBox;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ComBoBoxDemo</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);<span class="comment">//设置容器</span></span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">182</span>,<span class="number">144</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">176</span>,<span class="number">164</span>);</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		URL url=getClass().getResource(<span class="string">"1.png"</span>);<span class="comment">//1.png与类ComBoBoxDemo放一起</span></span><br><span class="line">		ImageIcon icon=<span class="keyword">new</span> ImageIcon(url);<span class="comment">//根据图片地址定义ImageIcon对象</span></span><br><span class="line">		final JButton button=<span class="keyword">new</span> JButton();</span><br><span class="line">		button.setIcon(icon);<span class="comment">//设置按钮显示图片</span></span><br><span class="line">		button.setBounds(<span class="number">61</span>, <span class="number">10</span>, <span class="number">46</span>, <span class="number">46</span>);</span><br><span class="line">		button.setContentAreaFilled(<span class="literal">false</span>);<span class="comment">//设置按钮没有填充效果</span></span><br><span class="line">		button.setBorder(null);<span class="comment">//设置按钮不显示边框</span></span><br><span class="line">		panel.add(button);</span><br><span class="line">		final JLabel msg=<span class="keyword">new</span> JLabel();</span><br><span class="line">		msg.setText(<span class="string">"定义不规则按钮"</span>);</span><br><span class="line">		msg.setBounds(<span class="number">37</span>, <span class="number">77</span>, <span class="number">91</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(msg);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		ComBoBoxDemo frame=<span class="keyword">new</span> ComBoBoxDemo();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/18.png" alt="图片"></p>
<p>(2)设置关于信息窗体<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Demo extends JFrame&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Demo</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setTitle(<span class="string">"设置信息窗体"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">346</span>, <span class="number">178</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setLayout(null);<span class="comment">//设置面板布局null</span></span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">338</span>, <span class="number">144</span>);</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		final JLabel label=<span class="keyword">new</span> JLabel();<span class="comment">//标签控件</span></span><br><span class="line">		label.setFont(<span class="keyword">new</span> Font(<span class="string">"华文楷体"</span>, Font.PLAIN, <span class="number">42</span>));</span><br><span class="line">		label.setText(<span class="string">"MR"</span>);</span><br><span class="line">		label.setBounds(<span class="number">26</span>, <span class="number">41</span>, <span class="number">65</span>, <span class="number">59</span>);</span><br><span class="line">		panel.add(label);</span><br><span class="line">		final JLabel label2=<span class="keyword">new</span> JLabel();</span><br><span class="line">		label2.setText(<span class="string">"企业进销系统"</span>);</span><br><span class="line">		label2.setBounds(<span class="number">10</span>, <span class="number">106</span>, <span class="number">98</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(label2);</span><br><span class="line">		final JLabel name=<span class="keyword">new</span> JLabel();</span><br><span class="line">		name.setText(<span class="string">"科技企业系统"</span>);</span><br><span class="line">		name.setBounds(<span class="number">140</span>, <span class="number">21</span>, <span class="number">156</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(name);</span><br><span class="line">		final JLabel number=<span class="keyword">new</span> JLabel();</span><br><span class="line">		number.setText(<span class="string">"版本1.1"</span>);</span><br><span class="line">		number.setBounds(<span class="number">140</span>, <span class="number">47</span>, <span class="number">135</span>, <span class="number">18</span>);</span><br><span class="line">		label.add(number);</span><br><span class="line">		final JLabel flat=<span class="keyword">new</span> JLabel();</span><br><span class="line">		flat.setText(<span class="string">"适用于任何平台"</span>);</span><br><span class="line">		flat.setBounds(<span class="number">140</span>, <span class="number">71</span>, <span class="number">135</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(flat);</span><br><span class="line">		final JLabel copyright=<span class="keyword">new</span> JLabel();</span><br><span class="line">		copyright.setText(<span class="string">"版权所有:"</span>);</span><br><span class="line">		copyright.setBounds(<span class="number">140</span>, <span class="number">106</span>, <span class="number">66</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(copyright);</span><br><span class="line">		final JLabel company=<span class="keyword">new</span> JLabel();</span><br><span class="line">		company.setText(<span class="string">"科技有限公司"</span>);</span><br><span class="line">		company.setBounds(<span class="number">209</span>, <span class="number">106</span>, <span class="number">119</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(company);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Demo demo=<span class="keyword">new</span> Demo();</span><br><span class="line">		demo.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/19.png" alt="图片"></p>
<h1 id="u7B2C_u516B_u7AE0__u591A_u7EBF_u7A0B_u6280_u672F"><a href="#u7B2C_u516B_u7AE0__u591A_u7EBF_u7A0B_u6280_u672F" class="headerlink" title="第八章 多线程技术"></a>第八章 多线程技术</h1><h2 id="1-_u591A_u7EBF_u7A0B_u4ECB_u7ECD"><a href="#1-_u591A_u7EBF_u7A0B_u4ECB_u7ECD" class="headerlink" title="1.多线程介绍"></a>1.多线程介绍</h2><p>程序启动就自动产生一个线程，主函数在这个线程上运行，当不在有多的线程产生，程序就是单线程，否则多线程<br>程序：计算机指令集合，以文件形式储存在磁盘上<br>进程：一个运行的程序，每个进程都有其独立的内存空间和系统资源<br>线程：进程内部的任务，线程是进程的实体一个进程可以拥有多个线程</p>
<p>线程生命周期：创建，可执行，非可执行，消亡<br>实例化一个线程并执行start()后线程进入“可执行”状态，同一时间只有一个线程在执行。<br>启用start()方法后，进入可执行状态，执行用户覆盖的run（）方法，但并不是一直执行到run（）结束，只是加入应用程序执行安排的队列中，可能正在等待取得CPU时间<br>当线程离开可执行状态下的队列时，线程进入非可执行状态，可以使用Thread类的wait()和sleep()方法进入非可执行状态<br>run()方法执行完毕后，线程自动消亡</p>
<h2 id="2-_u5B9E_u73B0_u591A_u7EBF_u7A0B"><a href="#2-_u5B9E_u73B0_u591A_u7EBF_u7A0B" class="headerlink" title="2.实现多线程"></a>2.实现多线程</h2><p>创建线程(必须实现Runnable接口)的两种方法：继承Thread类(已经实现Runnable接口)和实现Runnable接口<br>(1)继承Thread类<br>语法：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">类名</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Thread</span>&#123;</span></span><br><span class="line">	public void run()&#123;</span><br><span class="line">		执行代码;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//启动线程</span></span><br><span class="line">public void start()</span><br></pre></td></tr></table></figure></p>
<p>实例:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreadDemo</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> String name=<span class="string">"name"</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ThreadDemo</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name=name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">			System.out.println(name+<span class="string">""</span>);</span><br><span class="line">			<span class="keyword">try</span>&#123;</span><br><span class="line">				Thread.sleep((<span class="keyword">int</span>)Math.random()*<span class="number">1000</span>);</span><br><span class="line">			&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Thread a1=<span class="keyword">new</span> ThreadDemo(<span class="string">"线程1"</span>);</span><br><span class="line">		Thread a2=<span class="keyword">new</span> ThreadDemo(<span class="string">"\t线程2"</span>);</span><br><span class="line">		a1.start();</span><br><span class="line">		a2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">线程<span class="number">1</span></span><br><span class="line">	线程<span class="number">2</span></span><br><span class="line">线程<span class="number">1</span></span><br><span class="line">	线程<span class="number">2</span></span><br><span class="line">线程<span class="number">1</span></span><br><span class="line">	线程<span class="number">2</span></span><br><span class="line">线程<span class="number">1</span></span><br><span class="line">线程<span class="number">1</span></span><br><span class="line">	线程<span class="number">2</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure></p>
<p>(2)实现Runnable接口<br>如果继承Thread类,会导致无法继承其他类——因为单继承<br>使用Runnable接口可以实现继承其他类的同时创建线程<br>语法:<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Simple</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	Simple simple=<span class="keyword">new</span> Simple();<span class="comment">//实例化Simple对象</span></span><br><span class="line">	Thread thread=<span class="keyword">new</span> Thread(simple);<span class="comment">//实例化Thread对象</span></span><br><span class="line">	thread.start();<span class="comment">//启动线程</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实例程序：实现标签的大小变化<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> SimpleThread extends JFrame implements Runnable &#123;</span><br><span class="line">	JLabel jlabel=<span class="keyword">new</span> JLabel();</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SimpleThread</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);<span class="comment">//窗体布局</span></span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">700</span>,<span class="number">700</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);<span class="comment">//窗口关闭状态</span></span><br><span class="line">		URL url=getClass().getResource(<span class="string">"2.jpeg"</span>);</span><br><span class="line">		ImageIcon icon=<span class="keyword">new</span> ImageIcon(url);</span><br><span class="line">		Thread thread=<span class="keyword">new</span> Thread(<span class="keyword">this</span>);</span><br><span class="line">		thread.start();</span><br><span class="line"><span class="comment">//		jlabel=new JLabel(); //不能放这里，要放外面 否则不是一个label</span></span><br><span class="line">		jlabel.setBounds(<span class="number">40</span>,<span class="number">10</span>,<span class="number">640</span>,<span class="number">640</span>);</span><br><span class="line">		jlabel.setIcon(icon);</span><br><span class="line">		getContentPane().add(jlabel);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">10</span>; i &lt;= <span class="number">640</span>; i++) &#123;</span><br><span class="line">				jlabel.setBounds(<span class="number">40</span>,<span class="number">10</span>,i,i);</span><br><span class="line">				<span class="keyword">try</span>&#123;</span><br><span class="line">					Thread.sleep(<span class="number">50</span>);</span><br><span class="line">				&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">					e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(<span class="number">100</span>==i)&#123;</span><br><span class="line">					<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">640</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">						jlabel.setBounds(<span class="number">40</span>,<span class="number">10</span>,j,j);</span><br><span class="line">						<span class="keyword">try</span>&#123;</span><br><span class="line">							Thread.sleep(<span class="number">50</span>);</span><br><span class="line">						&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">							e.printStackTrace();</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SimpleThread frame=<span class="keyword">new</span> SimpleThread();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果:<br>图片由小变大到一定程度再全屏由大变小<br><img src="/img/javause/20.png" alt="图片"></p>
<h2 id="3-_u7EBF_u7A0B_u63A7_u5236"><a href="#3-_u7EBF_u7A0B_u63A7_u5236" class="headerlink" title="3.线程控制"></a>3.线程控制</h2><p>(1)启动<br>调用start()方法启动线程run()方法不同于一般调用方法，调用一般方法必须等一般方法执行完毕才能返回，而start()方法启动run()方法后就返回继续调用start()方法后面的语句，此时可能run()方法还在执行，从而形成多线程<br>(2)休眠<br>线程的休眠是指线程的暂停，通过调用sleep()可以实现，休眠单位为毫秒<br>(3)停止<br>JDK1.1开始就取消了stop()方法，因为stop()方法会造成系统进入不安全状态，提倡在run()方法中使用布尔型标记控制循环停止。<br>eg:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> 类名 <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">continue</span> isContinue=<span class="keyword">false</span>;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(!isContinue)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(4)优先级<br>每个线程都有优先级，优先级高的线程比优先级低的线程获得更多的执行时间<br>优先级范围1~10，默认为5<br>使用Thread类中的setPriority()方法设定优先级，但是必须1~10，否则异常<br>优先级高的线程会提前执行，执行完毕才会轮到优先级低的线程，优先级相同的的线程常用轮流执行方式<br>例：<br>本领运行出来应该是线程1先运行完再线程2——————-但是我运行出来是随机的<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Priority</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;=<span class="number">5</span> ; i++) &#123;</span><br><span class="line">				System.out.println(getName()+<span class="string">":"</span>+i);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Priority p1=<span class="keyword">new</span> Priority();</span><br><span class="line">		Priority p2=<span class="keyword">new</span> Priority();</span><br><span class="line">		p1.setName(<span class="string">"线程1"</span>);</span><br><span class="line">		p2.setName(<span class="string">"线程2"</span>);</span><br><span class="line">		p1.setPriority(MAX_PRIORITY);<span class="comment">//最高优先级10</span></span><br><span class="line">		p2.setPriority(MIN_PRIORITY);<span class="comment">//最低优先级1</span></span><br><span class="line">		p1.start();</span><br><span class="line">		p2.start();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="4-_u7EC3_u4E60-1"><a href="#4-_u7EC3_u4E60-1" class="headerlink" title="4.练习"></a>4.练习</h2><p>(1)会游泳的鱼<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> FishFrame extends JFrame implements Runnable &#123;</span><br><span class="line">	JPanel panel=<span class="keyword">new</span> JPanel();<span class="comment">//JPanel面板</span></span><br><span class="line">	JLabel label=<span class="keyword">new</span> JLabel();</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FishFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);<span class="comment">//设置窗体绝对布局</span></span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">345</span>, <span class="number">193</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">337</span>, <span class="number">159</span>);</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		URL url=getClass().getResource(<span class="string">"fish.jpg"</span>);</span><br><span class="line">		ImageIcon imageIcon=<span class="keyword">new</span> ImageIcon(url);</span><br><span class="line">		label.setIcon(imageIcon);<span class="comment">//设置标签显示图片</span></span><br><span class="line"><span class="comment">//		label.setBounds(271,47,80,42);</span></span><br><span class="line">		label.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">80</span>,<span class="number">42</span>);</span><br><span class="line">		panel.add(label);</span><br><span class="line">		Thread thread=<span class="keyword">new</span> Thread(<span class="keyword">this</span>);<span class="comment">//创建线程</span></span><br><span class="line">		thread.start();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">			<span class="keyword">int</span> lx=label.getX()+<span class="number">1</span>;<span class="comment">//提供标签控件坐标地址</span></span><br><span class="line">			<span class="keyword">if</span>(label.getX()&lt;<span class="number">271</span>)&#123;</span><br><span class="line">				label.setLocation(lx, label.getY());<span class="comment">//设置标签显示位置</span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;<span class="comment">//如果小雨游到窗体边缘</span></span><br><span class="line">				label.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">80</span>, <span class="number">42</span>);<span class="comment">//重新定义标签位置</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">30</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		FishFrame fishFrame=<span class="keyword">new</span> FishFrame();</span><br><span class="line">		fishFrame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>小鱼从左到右移动，到最右边再重新到左边开始<br><img src="/img/javause/21.png" alt="图片"></p>
<p>(2)控件的曲线运动<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> CircleSport extends JFrame implements Runnable &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> angle;<span class="comment">//起始角度</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> moveAngle;<span class="comment">//每次移动的角度</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> len;<span class="comment">//圆周半径</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> cx,cy;<span class="comment">//圆周中心坐标</span></span><br><span class="line">	<span class="keyword">private</span> JLabel label;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CircleSport</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setBackground(Color.WHITE);<span class="comment">//白色背景</span></span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">500</span>, <span class="number">400</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		cx=<span class="number">200</span>;</span><br><span class="line">		cy=<span class="number">146</span>;</span><br><span class="line">		ImageIcon icon=<span class="keyword">new</span> ImageIcon(getClass().getResource(<span class="string">"bee.jpg"</span>));</span><br><span class="line">		label=<span class="keyword">new</span> JLabel(icon);</span><br><span class="line">		label.setBounds(<span class="number">200</span>, <span class="number">146</span>, icon.getIconWidth(), icon.getIconHeight());<span class="comment">//设置标签组件位置和大小</span></span><br><span class="line">		getContentPane().add(label);</span><br><span class="line">		angle=<span class="number">90</span>;<span class="comment">//起始角度</span></span><br><span class="line">		moveAngle=<span class="number">1</span>;<span class="comment">//初始化移动角度</span></span><br><span class="line">		len=<span class="number">120</span>;<span class="comment">//初始化圆周半径</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> x,y;<span class="comment">//下一个移动目标</span></span><br><span class="line">		<span class="keyword">while</span>(<span class="literal">true</span>)&#123;</span><br><span class="line">			<span class="comment">//计算下一个坐标</span></span><br><span class="line">			x=(<span class="keyword">int</span>) (len*Math.<span class="built_in">sin</span>(Math.toRadians(angle)));</span><br><span class="line">			y=(<span class="keyword">int</span>) (len*Math.<span class="built_in">cos</span>(Math.toRadians(angle)));</span><br><span class="line">			label.setLocation(cx-x, cy+y);<span class="comment">//设置标签坐标</span></span><br><span class="line">			angle=angle+moveAngle;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Thread.sleep(<span class="number">10</span>);</span><br><span class="line">			&#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		CircleSport frame=<span class="keyword">new</span> CircleSport();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">		<span class="keyword">new</span> Thread(frame).start();<span class="comment">//启动</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>小蜜蜂转圈运动<br><img src="/img/javause/22.png" alt="图片"></p>
<h1 id="u7B2C_u4E5D_u7AE0_JDBC_u6280_u672F"><a href="#u7B2C_u4E5D_u7AE0_JDBC_u6280_u672F" class="headerlink" title="第九章 JDBC技术"></a>第九章 JDBC技术</h1><p>数据库系统由数据库、数据库管理系统(DBMS)、应用系统、数据库管理员构成<br>JDBC技术是连接数据库与应用程序的纽带，可以实现向数据库插入、修改、查询、删除操作。<br>数据库分为层次型、网状型、面向对象型、关系型。<br>JDBC依赖于关系模型，JDBC不能直接访问数据库，必须依赖于数据库厂商提供的JDBC驱动程序，JDBC完成三步工作:<br>(1)与数据库建立连接<br>(2)向数据库发送SQL语句<br>(3)处理从数据库返回的结果</p>
<h2 id="1-JBDC_u4E0D_u53EF_u7F3A_u5C11_u7684_u63A5_u53E3_u4E0E_u7C7B"><a href="#1-JBDC_u4E0D_u53EF_u7F3A_u5C11_u7684_u63A5_u53E3_u4E0E_u7C7B" class="headerlink" title="1.JBDC不可缺少的接口与类"></a>1.JBDC不可缺少的接口与类</h2><p>位于包java.sql中<br>(1)管理数据库驱动类DriverManager<br>DriverManager类管理JDBC驱动程序的基本服务，作用于用户和驱动程序之间，负责跟踪可用的驱动程序，并在数据库和驱动程序之间建立连接。<br>DriverManager类常用方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">getConnection</span><span class="params">(String url,String user,String passWd)</span></span>-------指定三个入口参数，依次为连接数据库的URL、用户名、密码，来获取与数据库的连接</span><br><span class="line"><span class="function"><span class="title">setLoginTimeout</span><span class="params">()</span></span>-----------------------------------------获取驱动程序试图登录到某一数据库可以等待的最长时间(秒)</span><br><span class="line"><span class="function"><span class="title">println</span><span class="params">(String message)</span></span>-----------------------------------将一条消息打印到当前JDBC日志流中</span><br></pre></td></tr></table></figure></p>
<p>(2)数据库连接接口Connection<br>Connection接口代表与特定数据库的连接，在连接的上下文中可以执行SQL语句并返回结果，可以通过getMetaData()方法获得由数据库提供的相关信息。Connection实例就像在应用程序与数据库之间开通的一条渠道。<br>常用方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">createStatement</span><span class="params">()</span></span>--------------------------------------创建并返回一个Statement实例，通常在执行无参SQL语句时创建该实例</span><br><span class="line"><span class="function"><span class="title">prepareStatement</span><span class="params">()</span></span>-------------------------------------创建并返回一个PrepareStatement实例，通常在执行包含参数的Sql语句时创建该实例，并对SQL语句进行了预编译处理</span><br><span class="line"><span class="function"><span class="title">prepareCall</span><span class="params">()</span></span>------------------------------------------创建并返回一个CallableStatement实例，通常在调用数据库储存过程时创建该实例</span><br><span class="line"><span class="function"><span class="title">setAutoCommit</span><span class="params">()</span></span>----------------------------------------设置当前Connection实例的自动提交模式。默认为true，即自动将更改同步到数据库中，如果设为false,需要通过执行<span class="function"><span class="title">commit</span><span class="params">()</span></span>或<span class="function"><span class="title">rollback</span><span class="params">()</span></span>方法手动将更改同步到数据库中</span><br><span class="line"><span class="function"><span class="title">getAutoCommit</span><span class="params">()</span></span>----------------------------------------查看当前Connection实例是否处于自动提交模式，如果是返回true，否则返回false</span><br><span class="line"><span class="function"><span class="title">setSavepoint</span><span class="params">()</span></span>-----------------------------------------在当前事物中创建并返回一个Savepoint实例，前提条件是当前的Connection实例不能处于自动提交模式，否则将抛出异常</span><br><span class="line"><span class="function"><span class="title">releaseSavepoint</span><span class="params">()</span></span>-------------------------------------从当前事物中移除指定的Savepoint实例</span><br><span class="line"><span class="function"><span class="title">setReadOnly</span><span class="params">()</span></span>------------------------------------------设置当前Connection实例的读取模式，默认为非只读模式，不能在事物当中执行该操作，否则将抛出异常，true-只读，false-关闭只读。</span><br><span class="line"><span class="function"><span class="title">isReadOnly</span><span class="params">()</span></span>-------------------------------------------查看当前Connection实例是否为只读模式</span><br><span class="line"><span class="function"><span class="title">isClosed</span><span class="params">()</span></span>---------------------------------------------查看当前Connection实例是否被关闭</span><br><span class="line"><span class="function"><span class="title">commit</span><span class="params">()</span></span>-----------------------------------------------将从上一次提交或者回滚以来进行的所有更改同步到数据库，并释放Connection实例当前拥有的所有数据库锁定</span><br><span class="line"><span class="function"><span class="title">rollback</span><span class="params">()</span></span>---------------------------------------------取消当前事物中的所有更改，并释放当前Connection实例拥有的所有数据库锁定，只能在非自动提交模式下使用</span><br><span class="line"><span class="function"><span class="title">close</span><span class="params">()</span></span>-----------------------------------------------立即释放Connection实例占用的数据库和JDBC资源，关闭数据库连接</span><br></pre></td></tr></table></figure></p>
<p>(3)发送SQL语句接口Statement<br>Statement接口用来执行静态的SQL语句，并返回执行结果。<br>对于insert、update、delete语句调用executeUpdate(String sql)方法<br>select语句调用executeQuery(String sql)方法，并返回一个永远不能为null的ResultSet实例<br>Statement常用方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">executeQuery</span><span class="params">(String sql)</span></span>------------------------执行指定的静态SELECT语句，并返回一个永远不能为null的ResultSet实例</span><br><span class="line"><span class="function"><span class="title">executeUpdate</span><span class="params">(String sql)</span></span>-----------------------执行指定的静态INSERT、UPDATE、DELETE语句，并返回一个int型数值，为同步更新记录的条数</span><br><span class="line"><span class="function"><span class="title">clearBatch</span><span class="params">()</span></span>------------------------------------清除位于Batch中的所有SQL语句，如果驱动程序不支持批量处理则抛出异常</span><br><span class="line"><span class="function"><span class="title">addBatch</span><span class="params">(String sql)</span></span>----------------------------将指定的sql命令添加到Batch中，String型入口参数通常为静态的INSERT或者UPDATE语句，驱动程序不支持批量处理则抛出异常</span><br><span class="line"><span class="function"><span class="title">executeBatch</span><span class="params">()</span></span>----------------------------------执行Batch中的所有SQL语句，全部执行成功则返回更新计数组成的数组，数组元素的排序与SQL语句的添加顺序对应，数组元素情况：大于等于<span class="number">0</span>的数-&gt;SQL语句执行成功返回更新计数，-<span class="number">2</span>-&gt;执行成功但未得到受影响的行数，-<span class="number">3</span>-&gt;SQL语句执行失败</span><br><span class="line"><span class="function"><span class="title">close</span><span class="params">()</span></span>-----------------------------------------立即释放Statement实例占用的数据库和JDBC资源</span><br></pre></td></tr></table></figure></p>
<p>(4)可执行动态SQL的接口PreparedStatement<br>PreparedStatement接口继承并拓展了Statement接口，用来执行动态的SQL语句(包含参数的SQL语句)，可以使用Connection类的preparedStatement()方法来获取PreparedStatement实例。<br>常用方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">executeQuery</span><span class="params">(String sql)</span></span>------------------------执行指定的静态SELECT语句，并返回一个永远不能为null的ResultSet实例</span><br><span class="line"><span class="function"><span class="title">executeUpdate</span><span class="params">(String sql)</span></span>-----------------------执行指定的静态INSERT、UPDATE、DELETE语句，并返回一个int型数值，为同步更新记录的条数</span><br><span class="line"><span class="function"><span class="title">setInt</span><span class="params">(int i,int x)</span></span>-----------------------------为参数设置int型值，对应参数SQL类型为INTEGER</span><br><span class="line"><span class="function"><span class="title">setLong</span><span class="params">(int i,long x)</span></span>---------------------------为参数设置long型值，对应参数SQL类型为BIGINT</span><br><span class="line"><span class="function"><span class="title">setFloat</span><span class="params">(int i,float x)</span></span>-------------------------为参数设置<span class="attribute">float</span>型值，对应参数SQL类型为FLOAT</span><br><span class="line"><span class="function"><span class="title">setDouble</span><span class="params">(int i,double x)</span></span>-----------------------为参数设置double型值，对应参数SQL类型为DOUBLE</span><br><span class="line"><span class="function"><span class="title">setString</span><span class="params">(int i,String x)</span></span>-----------------------为参数设置String型值，对应参数SQL类型为VARCHAR或LONGVARCHAR</span><br><span class="line"><span class="function"><span class="title">setBoolean</span><span class="params">(int i,boolean x)</span></span>---------------------为参数设置boolean型值，对应参数SQL类型为BIT</span><br><span class="line"><span class="function"><span class="title">setDate</span><span class="params">(int i, Date x)</span></span>--------------------------为参数设置java<span class="class">.aql</span><span class="class">.Date</span>型值，对应参数SQL类型为BATE</span><br><span class="line"><span class="function"><span class="title">setObject</span><span class="params">(int i,Object x)</span></span>-----------------------用来设置各种类型的参数，JDBC规范定义了从Object类型到SQL类型的标准映射关系，向数据库发送时将被转换为对应的SQL类型</span><br><span class="line"><span class="function"><span class="title">setNull</span><span class="params">(int i,int sqlType)</span></span>----------------------将指定参数设置为SQL中的NULL，该方法的第二个入口参数用来设置参数的SQL类型,并且必须设置，具体值从java<span class="class">.sql</span><span class="class">.Types</span>类中定义的静态常量中选择</span><br><span class="line"><span class="function"><span class="title">clearParameters</span><span class="params">()</span></span>-------------------------------清除当前所有参数的值</span><br></pre></td></tr></table></figure></p>
<p>(5)查询结果集接口ResultSet<br>ResultSet接口类似于一张数据表，用来暂时存放从数据库查询操作所获得的结果集。<br>常用方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">getInt</span><span class="params">()</span></span>-------------------------------以int形式获取此ResultSet对象的当前行中的指定列值，列值为null则返回<span class="number">0</span></span><br><span class="line"><span class="function"><span class="title">getFloat</span><span class="params">()</span></span>-----------------------------以<span class="attribute">float</span>形式获取此ResultSet对象的当前行中的指定列值，列值为null则返回<span class="number">0</span></span><br><span class="line"><span class="function"><span class="title">getDate</span><span class="params">()</span></span>------------------------------以Date形式获取此ResultSet对象的当前行中的指定列值，列值为null则返回<span class="number">0</span></span><br><span class="line"><span class="function"><span class="title">getBoolean</span><span class="params">()</span></span>---------------------------以boolean形式获取此ResultSet对象的当前行中的指定列值，列值为null则返回<span class="number">0</span></span><br><span class="line"><span class="function"><span class="title">getString</span><span class="params">()</span></span>----------------------------以String形式获取ResultSet对象的当前行的指定列值，列值为NULL则返回null</span><br><span class="line"><span class="function"><span class="title">getObject</span><span class="params">()</span></span>----------------------------以Object形式获取此ResultSet对象的当前行中的指定列值，列值为null则返回null</span><br><span class="line"><span class="function"><span class="title">first</span><span class="params">()</span></span>--------------------------------将指针移到当前记录的第一行</span><br><span class="line"><span class="function"><span class="title">last</span><span class="params">()</span></span>---------------------------------将指针移到当前记录的最后一行</span><br><span class="line"><span class="function"><span class="title">next</span><span class="params">()</span></span>---------------------------------将指针向下移一行</span><br><span class="line"><span class="function"><span class="title">beforeFirst</span><span class="params">()</span></span>--------------------------将指针移动到集合的开头(第一行位置)</span><br><span class="line"><span class="function"><span class="title">afterLast</span><span class="params">()</span></span>----------------------------将指针移动到集合的尾部(最后一行位置)</span><br><span class="line"><span class="function"><span class="title">absolute</span><span class="params">(int index)</span></span>--------------------将指针移动到ResultSet给定编号的行</span><br><span class="line"><span class="function"><span class="title">isFrist</span><span class="params">()</span></span>------------------------------判断指针是否位于ResultSet集合的第一行</span><br><span class="line"><span class="function"><span class="title">isLast</span><span class="params">()</span></span>-------------------------------判断指针是否位于ResultSet集合的最后一行</span><br><span class="line"><span class="function"><span class="title">updateInt</span><span class="params">()</span></span>----------------------------用int值更新指定列</span><br><span class="line"><span class="function"><span class="title">updateFloat</span><span class="params">()</span></span>--------------------------用<span class="attribute">float</span>值更新指定列</span><br><span class="line"><span class="function"><span class="title">updateLong</span><span class="params">()</span></span>---------------------------用long值更新指定列</span><br><span class="line"><span class="function"><span class="title">updateString</span><span class="params">()</span></span>-------------------------用String值更新指定列</span><br><span class="line"><span class="function"><span class="title">updateObject</span><span class="params">()</span></span>-------------------------用Object值更新指定列</span><br><span class="line"><span class="function"><span class="title">updateNull</span><span class="params">()</span></span>---------------------------将指定的列值修改为NULL</span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u6570_u636E_u5E93_u64CD_u4F5C"><a href="#2-_u6570_u636E_u5E93_u64CD_u4F5C" class="headerlink" title="2.数据库操作"></a>2.数据库操作</h2><p>2.1 执行步骤<br>加载数据库驱动，创建数据库连接，执行SQL语句，获取查询结果集，关闭连接<br>(1)加载数据库驱动<br>数据库驱动程序只需在第一次访问数据库时加载一次，然后每次访问数据库时创建一个Connection实例来获取数据库连接，之后向数据库SQL语句来操作数据，最后完成数据库操作释放连接。<br>语法：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Class</span>.forName(String driverManager)<span class="comment">//加载成功则将驱动类注册给DriverManager,加载失败抛出ClassNotFoundException异常</span></span><br><span class="line">eg:加载SQL Server2000数据库驱动jtds</span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">	<span class="keyword">Class</span>.forName(<span class="string">"net.sourceforge.jtds.jdbc.Driver"</span>);</span><br><span class="line">	&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">		e.printStackTrace();</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure></p>
<p>备注：通常将负责加载驱动的代码放static中————–避免重复加载驱动程序</p>
<p>(2)创建数据库连接<br>数据库管理类DriverManager负责建立与管理数据库连接，通过DriverManager类的静态方法getConnection(String url,String user,String passwd)可以建立数据库连接<br>语法:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="label">Connection</span> conn<span class="label">=DriverManager</span>.getConnection(<span class="keyword">String </span>url,<span class="keyword">String </span>user,<span class="keyword">String </span>passwd)</span><br><span class="line"><span class="label">url</span>：指定连接数据库的url,user:用户，passwd:密码</span><br></pre></td></tr></table></figure></p>
<p>注意事项：<br>a.java应用程序连接数据库需要保证数据库是启动的，即：net start mysql<br>b.不同数据库url,驱动程序不一样，需要加载。mysql如下：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载驱动程序</span></span><br><span class="line"><span class="built_in">String</span> url=<span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;</span><br></pre></td></tr></table></figure></p>
<p>c.驱动程序加载方法：java项目下新建一个文件lib,将驱动包mysql-connector-java-5.0.8.jar放到lib目录下，点击包右键-&gt;Build Path-&gt;Add to Build Path<br>实例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GetConn</span> &#123;</span><br><span class="line">	Connection conn=<span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载驱动程序</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"数据库驱动加载成功"</span>);</span><br><span class="line">		&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Connection <span class="title">getConn</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">		String url=<span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;<span class="comment">//3306：端口号 test：数据库名称</span></span><br><span class="line">		String userName=<span class="string">"root"</span>;</span><br><span class="line">		String passwd=<span class="string">""</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn=DriverManager.getConnection(url,userName,passwd);</span><br><span class="line">			<span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">				System.<span class="keyword">out</span>.println(<span class="string">"数据库连接成功!"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> conn;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">			GetConn getConn=<span class="keyword">new</span> GetConn();</span><br><span class="line">			Connection conn=getConn.getConn();</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">运行结果：</span><br><span class="line">数据库驱动加载成功</span><br><span class="line">数据库连接成功!</span><br></pre></td></tr></table></figure></p>
<p>(3)执行SQL语句<br>由Connection接口的createStatement()方法获取Statement对象<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Statement statement=con.createStatement()<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>Statement接口只能执行静态SQL语句，要执行SQL动态语句需要使用PreparedStatement实例。<br>插入、删除、修改可以通过Statement接口的executeUpdate()方法，查询数据可以通过Statement接口的executeQuery()方法。</p>
<p>(4)获取查询结果集<br>通过Statement接口的executeUpdate()方法实现插入、删除、修改返回int数据（影响数据库记录的条数），查询数据Statement接口的executeQuery()方法返回的是ResultSet型的结果集，其中不仅包括所有满足查询条件的记录，还包含相应数据表的相关信息如每一列的名称、类型和列的数量等。<br>如：从tb表中查询所有数据记录，并通过ResultSet实例的getXXX()方法通过指定列的序列号或者名称获取数据。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ResultSet res=statement.executeQuery(<span class="string">"select * from tb"</span>);<span class="comment">//从tb表中查询所有数据记录</span></span><br><span class="line"><span class="comment">//通过ResultSet实例的get<span class="label">XXX()方法通过指定列的序列号或者名称获取数据</span></span></span><br><span class="line"><span class="keyword">while</span>(res.next())&#123;</span><br><span class="line">	<span class="keyword">int</span> id=res.getInt(<span class="number">1</span>);<span class="comment">//获取第一列数据</span></span><br><span class="line">	String name=res.getString(<span class="string">"name"</span>);<span class="comment">//获取名称为name的列的数据</span></span><br><span class="line">	String salary=res.getString(<span class="number">3</span>);<span class="comment">//获取第三列数据</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>数据表如下：<br>id   name     salary<br>1    liming   3000<br>2    wangmei  4000</p>
<p>(5)关闭连接<br>建立Connection、Statement、ResultSet实例时，占用一定的数据库和JDBC资源，每次访问结束访问数据库后应该销毁这些实例释放资源，建议如下顺序：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">resultSet</span><span class="class">.close</span>();</span><br><span class="line"><span class="tag">statement</span><span class="class">.close</span>();</span><br><span class="line"><span class="tag">connection</span><span class="class">.close</span>();</span><br></pre></td></tr></table></figure></p>
<p>注：通过DriverManager类的getconnection()方法得到的Connection实例在close()时会同时关闭Statement实例和ResultSet实例。但是通常情况常用数据库连接池，调用Connection实例在close()时Connection实例可能并没有被释放，而是被放到了连接池中，又被其他连接调用，这种情况下不手动关闭Statement实例和ResultSet实例将导致他们越来越多，影响计算机和数据库速度甚至导致软件或者系统瘫痪。</p>
<p>2.2 数据库的增删改查<br>(1)添加数据<br>SQL的insert语法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> 表名[(字段名<span class="number">1</span>，字段名<span class="number">2.</span>..)] <span class="keyword">VALUES</span>(属性值<span class="number">1</span>，属性值<span class="number">2.</span>..)</span><br><span class="line">如：</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tb <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">'liming'</span>,<span class="string">'3000'</span>);</span></span><br></pre></td></tr></table></figure></p>
<p>通过Statement接口的executeUpdate()执行插入操作<br>实例：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		GetConn getConn=<span class="keyword">new</span> GetConn();</span><br><span class="line">		Connection conn=getConn.getConn();</span><br><span class="line">		<span class="keyword">String</span> createtb=<span class="string">"CREATE TABLE IF NOT EXISTS tb(id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,name VARCHAR(20) NOT NULL,salary VARCHAR(20) NOT NULL)"</span>;<span class="comment">//建立tb表  id,name,salary</span></span><br><span class="line">		<span class="keyword">String</span> insert1=<span class="string">"INSERT tb(name,salary) VALUES('wangmei','4000')"</span>;<span class="comment">//插入数据---运行一次插入一次</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			Statement statement=conn.createStatement();</span><br><span class="line">			statement.executeUpdate(createtb);</span><br><span class="line">			statement.executeUpdate(insert1);</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(2)删除数据<br>delete语法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 数据表名 <span class="keyword">where</span> 条件表达式</span><br><span class="line">eg:<span class="keyword">delete</span> <span class="keyword">from</span> td <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span>;</span></span><br><span class="line">实例：</span><br><span class="line">String sql="<span class="operator"><span class="keyword">delete</span> <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">id</span> = <span class="number">1</span><span class="string">";</span><br><span class="line">statement.executeUpdate(sql);</span></span></span><br></pre></td></tr></table></figure></p>
<p>注意：如果delete没有通过where语句指定删除记录的添加，则会删除数据表中的全部记录<br>delete删除全部记录但保留表，”DROP TABLE”删除整张表</p>
<p>(3)修改数据<br>update语法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">UPDATE</span> 数据表名 <span class="keyword">SET</span> 字段名 = 新的字段值 <span class="keyword">WHERE</span> 条件表达式</span><br><span class="line">eg:<span class="keyword">update</span> tb <span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">'zhanghua'</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">2</span>;</span></span><br><span class="line">实例：</span><br><span class="line">String sql="<span class="operator"><span class="keyword">update</span> tb <span class="keyword">set</span> <span class="keyword">name</span>=<span class="string">'zhanghua'</span> <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">2</span><span class="string">";</span><br><span class="line">statement.executeUpdate(sql);</span></span></span><br></pre></td></tr></table></figure></p>
<p>(4)查询数据<br>select语法：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span> 所选字段列表 <span class="keyword">FROM</span> 数据表名 <span class="keyword">WHERE</span> 条件表达式 <span class="keyword">GROUP</span> <span class="keyword">BY</span> 字段名 <span class="keyword">HAVING</span> 条件表达式 (指定分组的条件) <span class="keyword">ORDER</span> <span class="keyword">BY</span> 字段名[<span class="keyword">ASC</span>|<span class="keyword">DESC</span>]</span><br><span class="line">eg:<span class="keyword">select</span> <span class="keyword">name</span>,salary <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">id</span>=<span class="number">2</span> <span class="keyword">order</span> <span class="keyword">by</span> salary;</span></span><br></pre></td></tr></table></figure></p>
<p>A.顺序查询<br>顺序查询指应用select语句将数据表中满足条件的记录检索下来<br>实例：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String sql=<span class="string">"select * from tb where id != 1"</span>;</span><br><span class="line">ResultSet <span class="property">rest</span>=statement.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span>(<span class="property">rest</span>.next())&#123;</span><br><span class="line">	int <span class="property">id</span>=<span class="property">rest</span>.getInt(<span class="number">1</span>);</span><br><span class="line">	String <span class="property">name</span>=<span class="property">rest</span>.getString(<span class="string">"name"</span>);</span><br><span class="line">	String salary=<span class="property">rest</span>.getString(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>B.模糊查询<br>SQL通过LINK操作符进行模糊查询，可以使用”%”字符来代替0个或者多个字符，使用下划线”_”来代替一个字符。<br>实例：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'li%'</span>;</span></span><br><span class="line">eg:</span><br><span class="line">String sql="<span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="string">'li%'</span><span class="string">";</span><br><span class="line">ResultSet rest=statement.executeQuery(sql);</span><br><span class="line">while(rest.next)&#123;</span><br><span class="line">	int id=rest.getInt(1);</span><br><span class="line">	String name=rest.getString("</span><span class="keyword">name</span><span class="string">");</span><br><span class="line">	String salary=rest.getString(3);</span><br><span class="line">&#125;</span></span></span><br></pre></td></tr></table></figure></p>
<p>增删改查实例：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class GetConn &#123;</span><br><span class="line">	Connection conn=<span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载驱动程序</span></span><br><span class="line">			System.out.<span class="built_in">println</span>(<span class="string">"数据库驱动加载成功"</span>);</span><br><span class="line">		&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> Connection getConn()&#123;</span><br><span class="line">		<span class="keyword">String</span> url=<span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;<span class="comment">//3306：端口号 test：数据库名称</span></span><br><span class="line">		<span class="keyword">String</span> userName=<span class="string">"root"</span>;</span><br><span class="line">		<span class="keyword">String</span> passwd=<span class="string">""</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn=DriverManager.getConnection(url,userName,passwd);</span><br><span class="line">			<span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">				System.out.<span class="built_in">println</span>(<span class="string">"数据库连接成功!"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> conn;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">			GetConn getConn=<span class="keyword">new</span> GetConn();</span><br><span class="line">			Connection conn=getConn.getConn();</span><br><span class="line">			<span class="keyword">String</span> createtb=<span class="string">"CREATE TABLE IF NOT EXISTS tb(id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,name VARCHAR(20) NOT NULL,salary VARCHAR(20) NOT NULL)"</span>;<span class="comment">//建立tb表  id,name,salary</span></span><br><span class="line">			<span class="keyword">String</span> insert1=<span class="string">"INSERT tb(name,salary) VALUES('wangmei','4000')"</span>;<span class="comment">//插入数据---运行一次插入一次</span></span><br><span class="line">			<span class="keyword">String</span> delete1=<span class="string">"delete from tb where id = 1"</span>;</span><br><span class="line">			<span class="keyword">String</span> update1=<span class="string">"update tb set name='zhanghua' where id=2"</span>;</span><br><span class="line">			<span class="keyword">String</span> find1=<span class="string">"select * from tb where id != 1"</span>;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Statement statement=conn.createStatement();</span><br><span class="line">				statement.executeUpdate(createtb);</span><br><span class="line">				statement.executeUpdate(insert1);<span class="comment">//增</span></span><br><span class="line">				statement.executeUpdate(delete1);<span class="comment">//删</span></span><br><span class="line">				statement.executeUpdate(update1);<span class="comment">//该</span></span><br><span class="line">				ResultSet rest=statement.executeQuery(find1);</span><br><span class="line">				<span class="keyword">while</span>(rest.next())&#123;</span><br><span class="line">					<span class="built_in">int</span> id=rest.getInt(<span class="number">1</span>);</span><br><span class="line">					<span class="keyword">String</span> name=rest.getString(<span class="string">"name"</span>);</span><br><span class="line">					<span class="keyword">String</span> salary=rest.getString(<span class="number">3</span>);</span><br><span class="line">					System.out.<span class="built_in">println</span>(<span class="string">"id="</span>+id+<span class="string">" "</span>+<span class="string">"name="</span>+name+<span class="string">" "</span>+<span class="string">"salary="</span>+salary);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">输出结果：</span><br><span class="line">id=<span class="number">2</span> name=zhanghua salary=<span class="number">3000</span></span><br><span class="line">id=<span class="number">3</span> name=wangmei salary=<span class="number">4000</span></span><br><span class="line">id=<span class="number">4</span> name=wangmei salary=<span class="number">4000</span></span><br></pre></td></tr></table></figure></p>
<p>执行前：</p>
<table>
<thead>
<tr>
<th>id</th>
<th>name</th>
<th>salary</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>liming</td>
<td>3000</td>
</tr>
<tr>
<td>2</td>
<td>liming</td>
<td>3000</td>
</tr>
<tr>
<td>3</td>
<td>wangmei</td>
<td>4000</td>
</tr>
</tbody>
</table>
<p>执行后：</p>
<table>
<thead>
<tr>
<th>id</th>
<th>name</th>
<th>salary</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>zhanghua</td>
<td>3000</td>
</tr>
<tr>
<td>3</td>
<td>wangmei</td>
<td>4000</td>
</tr>
<tr>
<td>4</td>
<td>wangmei</td>
<td>4000</td>
</tr>
</tbody>
</table>
<h2 id="3-_u4F7F_u7528_u9884_u5904_u7406_u8BED_u53E5"><a href="#3-_u4F7F_u7528_u9884_u5904_u7406_u8BED_u53E5" class="headerlink" title="3.使用预处理语句"></a>3.使用预处理语句</h2><p>如果用户名和密码查询信息，name为”‘apple’ or ‘a’=’a’”，passwd为”‘12’ or 1=1”则SQL语句为<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sql="<span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">name</span>=<span class="string">'apple'</span> <span class="keyword">or</span> <span class="string">'a'</span>=<span class="string">'a'</span> <span class="keyword">and</span> passwd=<span class="string">'12'</span> <span class="keyword">or</span> <span class="number">1</span>=<span class="number">1</span><span class="string">";</span></span></span><br></pre></td></tr></table></figure></p>
<p>上面语句虽然正确，可以访问数据库，但是不能保证数据的安全性，可以使用预处理解决这个问题。<br>预处理语句的第二个优点是可以提高数据查询速度。因为向数据库发送sql语句需要数据库中的sql解释器把sql语句生成底层的内部命令，然后再执行完成相关操作，不断向提交sql语句会增加数据库解释器的负担，影响执行速度，而预处理语句是对SQL语句编译预处理生成底层数据库命令，封装在PreparedStatement对象中，通过调用该对象的方法执行底层数据库命令，这样应用程序针对连接的数据库将SQL语句解释为数据库底层内部命令，然后让数据执行这个命令，减轻数据库负担，提高访问数据库的速度。<br>对SQL语句预处理时，可以使用通配符”?”来代替任何的字段值。eg:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String sql="<span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> tb <span class="keyword">where</span> <span class="keyword">id</span>=?<span class="string">";</span></span></span><br></pre></td></tr></table></figure></p>
<p>执行预处理语句前，必须调用相应的方法来设置通配符所代表的值如：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PreparedStatement pstatement=connection.preparedStatement(sql);</span><br><span class="line">pstatement.setInt(<span class="number">1</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure></p>
<p>设置完通配符值后调用PreparedStatement实例的executeQuery()方法执行预处理语句</p>
<p>实例：通过预处理方法实现添加信息<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class GetConn &#123;</span><br><span class="line">	Connection conn=<span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载驱动程序</span></span><br><span class="line">			System.out.<span class="built_in">println</span>(<span class="string">"数据库驱动加载成功"</span>);</span><br><span class="line">		&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> Connection getConn()&#123;</span><br><span class="line">		<span class="keyword">String</span> url=<span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;<span class="comment">//3306：端口号 test：数据库名称</span></span><br><span class="line">		<span class="keyword">String</span> userName=<span class="string">"root"</span>;</span><br><span class="line">		<span class="keyword">String</span> passwd=<span class="string">""</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn=DriverManager.getConnection(url,userName,passwd);</span><br><span class="line">			<span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">				System.out.<span class="built_in">println</span>(<span class="string">"数据库连接成功!"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> conn;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">			GetConn getConn=<span class="keyword">new</span> GetConn();</span><br><span class="line">			Connection conn=getConn.getConn();</span><br><span class="line">			<span class="keyword">String</span> sql=<span class="string">"insert into tb values(?,?,?)"</span>;	</span><br><span class="line">			<span class="keyword">String</span> find1=<span class="string">"select * from tb"</span>;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				PreparedStatement preparedStatement=conn.prepareStatement(sql);<span class="comment">//获取PreparedStatement实例</span></span><br><span class="line">				preparedStatement.setInt(<span class="number">1</span>, <span class="number">1</span>);<span class="comment">//第1个值id设置1</span></span><br><span class="line">				preparedStatement.setString(<span class="number">2</span>, <span class="string">"lihua"</span>);<span class="comment">//第2个值名字设置lihua</span></span><br><span class="line">				preparedStatement.setString(<span class="number">3</span>, <span class="string">"5000"</span>);<span class="comment">//第3个值工资设置为5000</span></span><br><span class="line">				preparedStatement.executeUpdate();</span><br><span class="line">			</span><br><span class="line">				Statement statement=conn.createStatement();</span><br><span class="line">				ResultSet rest=statement.executeQuery(find1);</span><br><span class="line">				<span class="keyword">while</span>(rest.next())&#123;</span><br><span class="line">					<span class="built_in">int</span> id=rest.getInt(<span class="number">1</span>);</span><br><span class="line">					<span class="keyword">String</span> name=rest.getString(<span class="string">"name"</span>);</span><br><span class="line">					<span class="keyword">String</span> salary=rest.getString(<span class="number">3</span>);</span><br><span class="line">					System.out.<span class="built_in">println</span>(<span class="string">"id="</span>+id+<span class="string">" "</span>+<span class="string">"name="</span>+name+<span class="string">" "</span>+<span class="string">"salary="</span>+salary);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br>数据库驱动加载成功<br>数据库连接成功!<br>id=1 name=lihua salary=5000<br>id=2 name=zhanghua salary=3000<br>id=3 name=wangmei salary=4000<br>id=4 name=wangmei salary=4000<br>添加前：</p>
<table>
<thead>
<tr>
<th>id</th>
<th>name</th>
<th>salary</th>
</tr>
</thead>
<tbody>
<tr>
<td>2</td>
<td>zhanghua</td>
<td>3000</td>
</tr>
<tr>
<td>3</td>
<td>wangmei</td>
<td>4000</td>
</tr>
<tr>
<td>4</td>
<td>wangmei</td>
<td>4000</td>
</tr>
</tbody>
</table>
<p>添加后:</p>
<table>
<thead>
<tr>
<th>id</th>
<th>name</th>
<th>salary</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>lihua</td>
<td>5000</td>
</tr>
<tr>
<td>2</td>
<td>zhanghua</td>
<td>3000</td>
</tr>
<tr>
<td>3</td>
<td>wangmei</td>
<td>4000</td>
</tr>
<tr>
<td>4</td>
<td>wangmei</td>
<td>4000</td>
</tr>
</tbody>
</table>
<h2 id="4-_u7EC3_u4E60-2"><a href="#4-_u7EC3_u4E60-2" class="headerlink" title="4.练习"></a>4.练习</h2><p>(1)将查询结果显示在窗体中<br>在原tb数据库下，查询id=2的用户显示在窗体中<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> User &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">	<span class="keyword">private</span> String name;</span><br><span class="line">	<span class="keyword">private</span> String salary;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.id = id;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.name = name;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getSalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> salary;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(String salary)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.salary = salary;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> JdbcUser &#123;</span><br><span class="line">	Connection conn=null;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载驱动程序</span></span><br><span class="line">			System.out.println(<span class="string">"数据库驱动加载成功"</span>);</span><br><span class="line">		&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Connection <span class="title">getConn</span><span class="params">()</span></span>&#123;</span><br><span class="line">		String url=<span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;<span class="comment">//3306：端口号 test：数据库名称</span></span><br><span class="line">		String userName=<span class="string">"root"</span>;</span><br><span class="line">		String passwd=<span class="string">""</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn=DriverManager.getConnection(url,userName,passwd);</span><br><span class="line">			<span class="keyword">if</span>(conn != null)&#123;</span><br><span class="line">				System.out.println(<span class="string">"数据库连接成功!"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> conn;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> User <span class="title">selectUser</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">			User user=null;</span><br><span class="line">			JdbcUser jdbcUser=<span class="keyword">new</span> JdbcUser();</span><br><span class="line">			Connection conn=jdbcUser.getConn();</span><br><span class="line">			String sql=<span class="string">"select * from tb where id="</span>+id;</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Statement statement=conn.createStatement();</span><br><span class="line">				ResultSet rest=statement.executeQuery(sql);</span><br><span class="line">				<span class="keyword">while</span>(rest.next())&#123;</span><br><span class="line">					user=<span class="keyword">new</span> User();</span><br><span class="line">					user.setId(rest.getInt(<span class="number">1</span>));</span><br><span class="line">					user.setName(rest.getString(<span class="string">"name"</span>));</span><br><span class="line">					user.setSalary(rest.getString(<span class="number">3</span>));</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;<span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">return</span> user;</span><br><span class="line">			&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> ViewMessage extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ViewMessage</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);<span class="comment">//设置容器显示绝对布局</span></span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">309</span>, <span class="number">219</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		JdbcUser jdbcUser=<span class="keyword">new</span> JdbcUser();</span><br><span class="line">		User user=jdbcUser.selectUser(<span class="number">2</span>);<span class="comment">//查询id=2的user</span></span><br><span class="line">		</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">301</span>, <span class="number">185</span>);</span><br><span class="line">		getContentPane().add(panel);<span class="comment">//将面板添加到窗体中</span></span><br><span class="line">		final JLabel namelabel=<span class="keyword">new</span> JLabel();</span><br><span class="line">		namelabel.setText(<span class="string">"姓名"</span>);</span><br><span class="line">		namelabel.setBounds(<span class="number">59</span>, <span class="number">37</span>, <span class="number">39</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(namelabel);<span class="comment">//标签添加到面板</span></span><br><span class="line">		JTextField nametextTield=<span class="keyword">new</span> JTextField();<span class="comment">//姓名设置为文本框显示内容</span></span><br><span class="line">		nametextTield.setText(user.getName());</span><br><span class="line">		nametextTield.setBounds(<span class="number">104</span>, <span class="number">38</span>, <span class="number">132</span>, <span class="number">22</span>);</span><br><span class="line">		panel.add(nametextTield);</span><br><span class="line">		final JLabel salarylabel=<span class="keyword">new</span> JLabel();</span><br><span class="line">		salarylabel.setText(<span class="string">"姓名"</span>);</span><br><span class="line">		salarylabel.setBounds(<span class="number">59</span>, <span class="number">67</span>, <span class="number">39</span>, <span class="number">24</span>);</span><br><span class="line">		panel.add(salarylabel);<span class="comment">//标签添加到面板</span></span><br><span class="line">		JTextField salarytextTield=<span class="keyword">new</span> JTextField();<span class="comment">//姓名设置为文本框显示内容</span></span><br><span class="line">		salarytextTield.setText(user.getSalary());</span><br><span class="line">		salarytextTield.setBounds(<span class="number">104</span>, <span class="number">68</span>, <span class="number">132</span>, <span class="number">22</span>);</span><br><span class="line">		panel.add(salarytextTield);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		ViewMessage viewMessage=<span class="keyword">new</span> ViewMessage();</span><br><span class="line">		viewMessage.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>效果如下：<br><img src="/img/javause/23.png" alt="图片"></p>
<p>(2)修改员工工资信息<br>将zhanghua的工资增加3000元<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class GetConn &#123;</span><br><span class="line">	Connection conn=<span class="keyword">null</span>;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载驱动程序</span></span><br><span class="line">			System.out.<span class="built_in">println</span>(<span class="string">"数据库驱动加载成功"</span>);</span><br><span class="line">		&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> Connection getConn()&#123;</span><br><span class="line">		<span class="keyword">String</span> url=<span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;<span class="comment">//3306：端口号 test：数据库名称</span></span><br><span class="line">		<span class="keyword">String</span> userName=<span class="string">"root"</span>;</span><br><span class="line">		<span class="keyword">String</span> passwd=<span class="string">""</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn=DriverManager.getConnection(url,userName,passwd);</span><br><span class="line">			<span class="keyword">if</span>(conn != <span class="keyword">null</span>)&#123;</span><br><span class="line">				System.out.<span class="built_in">println</span>(<span class="string">"数据库连接成功!"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> conn;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">			GetConn getConn=<span class="keyword">new</span> GetConn();</span><br><span class="line">			Connection conn=getConn.getConn();</span><br><span class="line">			<span class="keyword">String</span> sql=<span class="string">"update tb set salary=salary+3000 where name='zhanghua'"</span>;	<span class="comment">///////////</span></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				Statement statement=conn.createStatement();</span><br><span class="line">				statement.executeUpdate(sql);</span><br><span class="line">				&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>执行前:</p>
<table>
<thead>
<tr>
<th>id</th>
<th>name</th>
<th>salary</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>lihua</td>
<td>5000</td>
</tr>
<tr>
<td>2</td>
<td>zhanghua</td>
<td>3000</td>
</tr>
<tr>
<td>3</td>
<td>wangmei</td>
<td>4000</td>
</tr>
<tr>
<td>4</td>
<td>wangmei</td>
<td>4000</td>
</tr>
</tbody>
</table>
<p>执行后:</p>
<table>
<thead>
<tr>
<th>id</th>
<th>name</th>
<th>salary</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>lihua</td>
<td>5000</td>
</tr>
<tr>
<td>2</td>
<td>zhanghua</td>
<td>6000</td>
</tr>
<tr>
<td>3</td>
<td>wangmei</td>
<td>4000</td>
</tr>
<tr>
<td>4</td>
<td>wangmei</td>
<td>4000</td>
</tr>
</tbody>
</table>
<h1 id="u7B2C_u5341_u7AE0_GUI_u4E8B_u4EF6_u5904_u7406_u673A_u5236"><a href="#u7B2C_u5341_u7AE0_GUI_u4E8B_u4EF6_u5904_u7406_u673A_u5236" class="headerlink" title="第十章 GUI事件处理机制"></a>第十章 GUI事件处理机制</h1><p>GUI控件与用户交互需要为控件添加事件，如：移动鼠标、键盘按键、单击按钮等。</p>
<h2 id="1-GUI_u4E8B_u4EF6"><a href="#1-GUI_u4E8B_u4EF6" class="headerlink" title="1.GUI事件"></a>1.GUI事件</h2><p>事件:用户对控件的一个操作，如单击按钮、关闭窗体等<br>事件源：发生事件的控件<br>事件处理器：负责处理事件的方法<br>AWT事件类：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">ActionEvent<span class="comment">------------------------动作事件，用户单击按钮、选择菜单、列表等操作时产生该事件</span></span><br><span class="line">AdjustmentEvent<span class="comment">--------------------调整事件，在滚动条变化时产生该事件</span></span><br><span class="line">ComponentEvent<span class="comment">---------------------控件事件，在控件隐藏、显示、移动等操作中产生</span></span><br><span class="line">ContainerEvent<span class="comment">---------------------容器事件，在容器发生变化时产生该事件，如向容器添加移除事件</span></span><br><span class="line">FocusEvent<span class="comment">-------------------------焦点事件，当控件获得焦点与失去焦点时，触发该事件</span></span><br><span class="line">HierarchyEvent<span class="comment">---------------------层次事件，当控件级别改变时触发事件</span></span><br><span class="line">InputMethodEvent<span class="comment">-------------------输入法事件，输入法改变时触发事件</span></span><br><span class="line">ItemEvent<span class="comment">--------------------------选项事件，复选框、列表、下拉选择框等控件的数据改变时触发事件</span></span><br><span class="line">KeyEvent<span class="comment">---------------------------按键事件，按下键盘按钮或者释放键盘按钮时触发的事件</span></span><br><span class="line">MouseEvent<span class="comment">-------------------------鼠标事件，当改变鼠标状态时触发的事件，例如单击鼠标按键、鼠标按键的按下与抬起状态、鼠标进入离开控件等</span></span><br><span class="line">MouseWheelEvent<span class="comment">--------------------鼠标滚轮事件，当滚动鼠标滚轮时触发事件</span></span><br><span class="line">PaintEvent<span class="comment">-------------------------绘图事件，发生绘图事件时触发该事件</span></span><br><span class="line">TextEvent<span class="comment">--------------------------文本事件，当文本框和文本域控件的内容发生改变时触发事件</span></span><br><span class="line">WindowEvent<span class="comment">------------------------窗口事件，当窗体被打开、关闭、最大化、最小化、还原和激活时触发事件</span></span><br></pre></td></tr></table></figure></p>
<p>事件监听器：<br>用于监听指定的事件类型，如ActionListener(单击事件ActionEvent的监听接口)、KeyListener(键盘监听器接口),必须实现该接口编写自己的监听器实现类来处理事件，监听器类收到事件后，将委托指定的方法来执行事件处理。<br>事件监听器接口会定义很多方法实现接口时需要实现。如键盘监听器KeyListener代码如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.EventListener;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">KeyListener</span> <span class="keyword">extends</span> <span class="title">EventListener</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span></span>;<span class="comment">//键入某键时调用此方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span></span>;<span class="comment">//按下某键时执行方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span></span>;<span class="comment">//释放某键时调用方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>实现事件监听器如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyListener</span> <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">awt</span>.<span class="title">event</span>.<span class="title">KeyListener</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyTyped</span><span class="params">(KeyEvent e)</span></span>&#123;&#125;<span class="comment">//键入某键时调用此方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span></span>&#123;&#125;<span class="comment">//按下某键时执行方法</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyReleased</span><span class="params">(KeyEvent e)</span></span>&#123;&#125;<span class="comment">//释放某键时调用方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u52A8_u4F5C_u4E8B_u4EF6"><a href="#2-_u52A8_u4F5C_u4E8B_u4EF6" class="headerlink" title="2.动作事件"></a>2.动作事件</h2><p>动作事件包括单击按钮、选择菜单项目等，Java中动作事件由ActionEvent类表示，与动作事件相对应的事件处理器接口为ActionLisenter接口，该接口只有一个方法actionPerformed()。<br>为按钮添加动作事件要如下两步：<br>(1)定义实现事件监听器的类<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ActionDemo</span> <span class="keyword">implements</span> <span class="title">ActionLisenter</span></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span></span>&#123;</span><br><span class="line">		<span class="comment">//添加处理事件代码</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>(2)向事件源注册监听者对象<br><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">button</span>.addActionListener(ad);<span class="comment">//ad为动作事件监听器接口对象，动作事件注册给按钮点击按钮就会出现相应的动作</span></span><br></pre></td></tr></table></figure></p>
<p>实例：点击按钮实现窗体关闭<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> ActionEventDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ActionEventDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">238</span>, <span class="number">124</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();<span class="comment">//面板</span></span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">232</span>, <span class="number">90</span>);</span><br><span class="line">		getContentPane().add(panel);<span class="comment">//面板添加到窗体</span></span><br><span class="line">		final JButton button=<span class="keyword">new</span> JButton();</span><br><span class="line">		button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;<span class="comment">//绑定按钮单击事件</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				System.<span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">////////关闭窗体</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		button.setText(<span class="string">"关闭按钮"</span>);</span><br><span class="line">		button.setBounds(<span class="number">73</span>, <span class="number">27</span>, <span class="number">86</span>, <span class="number">28</span>);</span><br><span class="line">		panel.add(button);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		ActionEventDemo actionEventDemo=<span class="keyword">new</span> ActionEventDemo();</span><br><span class="line">		actionEventDemo.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：点击按钮“关闭”窗体关闭<br><img src="/img/javause/24.png" alt="图片"></p>
<h2 id="3-_u7A97_u4F53_u63A7_u5236"><a href="#3-_u7A97_u4F53_u63A7_u5236" class="headerlink" title="3.窗体控制"></a>3.窗体控制</h2><p>窗体控制指发生窗口定义的WindowEvent窗口事件，窗口事件由WindowListener对象负责监听，可以使用addWindowListener()方法为窗口注册WindowListener对象，注册之后才可以接收窗口事件，当窗口状态(如最大化、最小化、图标化)改变时，由控件(比如窗体)生成此窗口事件，并由WindowListener对象进行处理。<br>WindowListener对象7个方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>void windowActivated(WindowEvent e)</td>
<td>当窗口由非活动窗口变为活动窗口时调用此方法</td>
</tr>
<tr>
<td>void windowClosed(WindowEvent e)</td>
<td>当窗口的默认关闭模式设置为JFrame.DISPOSE_ON_CLOSE时调用</td>
</tr>
<tr>
<td>void windowClosing(WindowEvent e)</td>
<td>当窗口即将关闭（点击窗体关闭按钮时）时调用</td>
</tr>
<tr>
<td>void windowDeactivated(WindowEvent e)</td>
<td>当窗口由活动状态变非活动状态时调用</td>
</tr>
<tr>
<td>void windowDeiconified(WindowEvent e)</td>
<td>当窗口从图标化状态变为正常状态时调用</td>
</tr>
<tr>
<td>void windowIconified(WindowEvent e)</td>
<td>当窗口从正常状态变为图标化状态时调用</td>
</tr>
<tr>
<td>void windowOpened(WindowEvent e)</td>
<td>当窗口打开时调用</td>
</tr>
</tbody>
</table>
<p>窗体事件执行过程：<br>(1)创建WindowListener对象<br>(2)调用addWindowListener()方法为窗口注册WindowListener对象作为监听器<br>(3)由外部操作触发，使窗口状态改变<br>(4)窗口状态改变后生成窗口事件<br>(5)执行WindowListener对象的方法完成窗口事件的处理</p>
<p>备注：WindowAdapter类实现了WindowListener接口，可以使用根据需要的方法使用该类方法</p>
<p>实例：窗口打开关闭时在控制台输出信息<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> UseWindowEventFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UseWindowEventFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		addWindowListener(<span class="keyword">new</span> WindowAdapter() &#123;<span class="comment">//为窗体添加窗口监听器，这里使用的匿名内部类实现窗口适配器创建</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowOpened</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">				System.out.println(<span class="string">"打开类窗体"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">windowClosing</span><span class="params">(WindowEvent e)</span> </span>&#123;</span><br><span class="line">				System.out.println(<span class="string">"窗体即将关闭"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		setTitle(<span class="string">"窗口事件"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">298</span>, <span class="number">190</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		UseWindowEventFrame frame=<span class="keyword">new</span> UseWindowEventFrame();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行控制台输出：<br>打开窗体时：<br>打开类窗体</p>
<p>关闭窗体时：<br>窗体即将关闭</p>
<p><img src="/img/javause/25.png" alt="图片"></p>
<h2 id="4-_u9F20_u6807_u63A7_u5236"><a href="#4-_u9F20_u6807_u63A7_u5236" class="headerlink" title="4.鼠标控制"></a>4.鼠标控制</h2><p>鼠标的移动、单击、拖动等操作可以实现交互效果如拖动窗体、单击按钮、选择文本框等。<br>鼠标事件由MouseListener对象监听，使用addMouseListener()方法为控件注册MouseListener对象之后才可以接收鼠标事件。<br>MouseListener接口提供了5个方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>mouseClicked(MouseEvent e)</td>
<td>处理鼠标单击事件的方法</td>
</tr>
<tr>
<td>mouseEntered(MouseEvent e)</td>
<td>鼠标进入控件区域时执行的方法</td>
</tr>
<tr>
<td>mouseExited(MouseEvent e)</td>
<td>鼠标离开控件区域时执行的方法</td>
</tr>
<tr>
<td>mousePressed(MouseEvent e)</td>
<td>按下鼠标按键时执行的方法</td>
</tr>
<tr>
<td>mouseReleased(MouseEvent e)</td>
<td>释放鼠标按键时执行的方法</td>
</tr>
</tbody>
</table>
<p>MouseMotionListener接口的两个方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>mouseMoved(MouseEvent e)</td>
<td>处理鼠标移动事件的方法</td>
</tr>
<tr>
<td>mouseDragged(MouseEvent e)</td>
<td>处理鼠标拖动事件的方法</td>
</tr>
</tbody>
</table>
<p>以上两个鼠标监听器的方法都定义了MouseEvent类型的形参，MouseEvent类是鼠标事件类，可以通过此类的下面方法获取相应属性:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>getButton()</td>
<td>返回更改了状态的鼠标按键(如果有)</td>
</tr>
<tr>
<td>getClickCount()</td>
<td>返回与此事件关联的鼠标单击参数</td>
</tr>
<tr>
<td>getLocationOnScreen()</td>
<td>返回鼠标相对于屏幕的绝对x,y坐标</td>
</tr>
<tr>
<td>getPoint()</td>
<td>返回事件相对于源控件的x,y坐标</td>
</tr>
<tr>
<td>translatePoint(int x,int y)</td>
<td>通过将事件坐标加上指定的x(水平)和y(垂直)偏移量，将事件的坐标平移到新位置</td>
</tr>
</tbody>
</table>
<p>为控件添加鼠标事件步骤:<br>(1)创建MouseListenser对象<br>(2)调用addMouseListener()方法为控件注册MouseListenser对象作为监听器<br>(3)在控件上操作鼠标生成的鼠标事件<br>(4)执行MouseListenser对象的方法完成鼠标事件的处理</p>
<p>实例:添加鼠标事件跟踪鼠标的变化<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> UseMouseEventFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">UseMouseEventFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		setTitle(<span class="string">"鼠标事件"</span>);</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">325</span>, <span class="number">204</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JLabel label=<span class="keyword">new</span> JLabel();</span><br><span class="line">		label.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;<span class="comment">//MouseAdapter()</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				label.setText(<span class="string">"在标签上单击鼠标"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				label.setText(<span class="string">"鼠标进入标签"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				label.setText(<span class="string">"鼠标移出标签"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				label.setText(<span class="string">"在标签上按下鼠标按键"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				label.setText(<span class="string">"在标签上释放鼠标按键"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		label.setOpaque(<span class="literal">true</span>);<span class="comment">//将标签设置为不透明</span></span><br><span class="line">		label.setBackground(Color.PINK);</span><br><span class="line">		label.setText(<span class="string">"显示鼠标事件的标签"</span>);<span class="comment">//设置标签上的显示文本</span></span><br><span class="line">		label.setBounds(<span class="number">70</span>, <span class="number">38</span>, <span class="number">171</span>, <span class="number">83</span>);</span><br><span class="line">		getContentPane().add(label);<span class="comment">//标签加入窗体</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		UseMouseEventFrame frame=<span class="keyword">new</span> UseMouseEventFrame();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>部分效果如下:<br><img src="/img/javause/26.png" alt="图片"><br><img src="/img/javause/27.png" alt="图片"></p>
<h2 id="5-_u952E_u76D8_u63A7_u5236"><a href="#5-_u952E_u76D8_u63A7_u5236" class="headerlink" title="5.键盘控制"></a>5.键盘控制</h2><p>键盘事件监听器由KeyListener接口定义，3个方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>keyPressed(KeyEvent e)</td>
<td>按下某个按键时调用</td>
</tr>
<tr>
<td>keyReleased(KeyEvent e)</td>
<td>释放某个按键时调用</td>
</tr>
<tr>
<td>keyTyped(KeyEvent e)</td>
<td>键入某个按键时调用</td>
</tr>
</tbody>
</table>
<p>KeyEvent类中的方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>char getKeyChar()</td>
<td>返回与此事件中的键关联的字符</td>
</tr>
<tr>
<td>int getKeyCode()</td>
<td>返回与此事件中的键关联的整数keyCode</td>
</tr>
<tr>
<td>String getKeyModifiersText(int modifiers)</td>
<td>返回描述修改键的String,如”Shift”或者”Ctrl+Shift”</td>
</tr>
<tr>
<td>String getKeyText(int keyCode)</td>
<td>返回描述KeyCode的String,如”HOME”、”F1”或者”A”</td>
</tr>
<tr>
<td>boolean isActionKey()</td>
<td>返回此事件中的键是否为”动作”键</td>
</tr>
<tr>
<td>setKeyChar(char keyChar)</td>
<td>设置keyCode值。以表示某个逻辑字符</td>
</tr>
<tr>
<td>setKeyCode(int keyCode)</td>
<td>设置keyCode值。以表示某个物理键</td>
</tr>
</tbody>
</table>
<p>KeyEvent类对应按键常量(这里是部分，其他参考JDK文档):</p>
<table>
<thead>
<tr>
<th>按键</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>VK_A到VK_Z</td>
<td>对应键盘的”A”到”Z”按键</td>
</tr>
<tr>
<td>VK_0到VK_9</td>
<td>对应键盘的”0”到”9”按键</td>
</tr>
<tr>
<td>VK_F1到VK_F24</td>
<td>对应键盘的”F1”到”F24”按键,普通键盘支持到F12</td>
</tr>
<tr>
<td>VK_NUMPAD0到VK_NUMPAD9</td>
<td>对应小键盘的”0”到”9”按键</td>
</tr>
<tr>
<td>VK_ALT</td>
<td>对应键盘的”Alt”按键</td>
</tr>
<tr>
<td>VK_BACK_SLASH</td>
<td>对应键盘的”\”按键</td>
</tr>
<tr>
<td>VK_CONTROL</td>
<td>对应键盘的”Ctrl”按键</td>
</tr>
<tr>
<td>VK_DELETE</td>
<td>对应键盘的”Delete”按键</td>
</tr>
<tr>
<td>VK_END</td>
<td>对应键盘的”End”按键</td>
</tr>
<tr>
<td>VK_ENTER</td>
<td>对应键盘的”Enter”按键</td>
</tr>
<tr>
<td>VK_EQUALS</td>
<td>对应键盘的”=”按键</td>
</tr>
<tr>
<td>VK_ESCAPE</td>
<td>对应键盘的”Esc”按键</td>
</tr>
<tr>
<td>VK_INSERT</td>
<td>对应键盘的”Insert”按键</td>
</tr>
<tr>
<td>VK_LEFT</td>
<td>对应键盘的左方向按键</td>
</tr>
<tr>
<td>VK_PERIOD</td>
<td>对应键盘的”.”按键</td>
</tr>
<tr>
<td>VK_RIGTH</td>
<td>对应键盘的右方向按键</td>
</tr>
<tr>
<td>VK_SHIFT</td>
<td>对应键盘的”Shift”按键</td>
</tr>
<tr>
<td>VK_SLASH</td>
<td>对应键盘的”/“按键</td>
</tr>
</tbody>
</table>
<p>为控件添加键盘事件步骤:<br>(1)创建KeyListener对象<br>(2)调用addKeyLisenter()方法为控件注册KeyListener对象作为监听器<br>(3)操作键盘生成键盘事件<br>(4)执行KeyListener对象的方法，完成键盘事件的处理</p>
<p>实例:按下上下左右键时，不规则按钮位置随着变化<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> KeyDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">KeyDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">500</span>,<span class="number">500</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();<span class="comment">//创建面板</span></span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">490</span>, <span class="number">490</span>);</span><br><span class="line">		getContentPane().add(panel);<span class="comment">//面板添加到窗体</span></span><br><span class="line">		final JButton button=<span class="keyword">new</span> JButton();</span><br><span class="line">		button.addKeyListener(<span class="keyword">new</span> KeyAdapter() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">keyPressed</span><span class="params">(KeyEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">int</span> key=e.getKeyCode();<span class="comment">//获取用户的按键信息</span></span><br><span class="line">				<span class="keyword">int</span> x=button.getX();</span><br><span class="line">				<span class="keyword">int</span> y=button.getY();</span><br><span class="line">				<span class="keyword">if</span>(key==<span class="number">39</span>)&#123;<span class="comment">//用户按下右键情况</span></span><br><span class="line">					x+=<span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(key==<span class="number">37</span>)&#123;<span class="comment">//左</span></span><br><span class="line">					x-=<span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(key==<span class="number">38</span>)&#123;<span class="comment">//上</span></span><br><span class="line">					y-=<span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(key==<span class="number">40</span>)&#123;<span class="comment">//下</span></span><br><span class="line">					y+=<span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				button.setLocation(x, y);<span class="comment">//重新定义按钮位置</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		button.setContentAreaFilled(<span class="literal">false</span>);<span class="comment">//不填充按钮区域</span></span><br><span class="line">		button.setBorder(null);<span class="comment">//不显示按钮边框</span></span><br><span class="line">		URL url=getClass().getResource(<span class="string">"bee.jpg"</span>);</span><br><span class="line">		ImageIcon icon=<span class="keyword">new</span> ImageIcon(url);<span class="comment">//根据URL创建图片对象</span></span><br><span class="line">		button.setIcon(icon);<span class="comment">//设置按钮显示图片</span></span><br><span class="line">		button.setBounds(<span class="number">45</span>, <span class="number">48</span>, <span class="number">80</span>, <span class="number">80</span>);</span><br><span class="line">		panel.add(button);<span class="comment">//按钮添加到面板</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		KeyDemo demo=<span class="keyword">new</span> KeyDemo();</span><br><span class="line">		demo.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>按上下左右键图片对应移动<br><img src="/img/javause/28.png" alt="图片"></p>
<h2 id="6-_u7EC3_u4E60"><a href="#6-_u7EC3_u4E60" class="headerlink" title="6.练习"></a>6.练习</h2><p>(1)登录窗体<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> SelectUser &#123;</span><br><span class="line">	Connection conn=null;</span><br><span class="line">	<span class="keyword">static</span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);<span class="comment">//加载驱动程序</span></span><br><span class="line">			System.out.println(<span class="string">"数据库驱动加载成功"</span>);</span><br><span class="line">		&#125;<span class="keyword">catch</span>(ClassNotFoundException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> Connection <span class="title">getConn</span><span class="params">()</span></span>&#123;</span><br><span class="line">		String url=<span class="string">"jdbc:mysql://127.0.0.1:3306/test"</span>;<span class="comment">//3306：端口号 test：数据库名称</span></span><br><span class="line">		String userName=<span class="string">"root"</span>;</span><br><span class="line">		String passwd=<span class="string">""</span>;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			conn=DriverManager.getConnection(url,userName,passwd);</span><br><span class="line">			<span class="keyword">if</span>(conn != null)&#123;</span><br><span class="line">				System.out.println(<span class="string">"数据库连接成功!"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">catch</span>(SQLException e)&#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> conn;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//查询用户密码，有则返回true,没有则返回false</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> boolean <span class="title">selectUser</span><span class="params">(String user,String passwd)</span></span>&#123;</span><br><span class="line">		SelectUser selectUser=<span class="keyword">new</span> SelectUser();</span><br><span class="line">		Connection connection=selectUser.getConn();<span class="comment">//获取数据库连接</span></span><br><span class="line">		String sql=<span class="string">"select * from user where name=? and passwd=?"</span>;<span class="comment">//查询的sql语句</span></span><br><span class="line">		<span class="comment">//使用预处理语句进行查询</span></span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			PreparedStatement pStatement=connection.prepareStatement(sql);</span><br><span class="line">			pStatement.setString(<span class="number">1</span>, user);</span><br><span class="line">			pStatement.setString(<span class="number">2</span>, passwd);</span><br><span class="line">			ResultSet rest=pStatement.executeQuery();<span class="comment">//查询结果</span></span><br><span class="line">			<span class="keyword">if</span>(rest.next())&#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> EntryFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">EntryFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		getContentPane().setLayout(null);<span class="comment">//窗体设置为绝对布局</span></span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>,<span class="number">320</span>,<span class="number">180</span>);<span class="comment">//窗体显示位置和大小</span></span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();<span class="comment">//定义面板组件</span></span><br><span class="line">		panel.setLayout(null);<span class="comment">//面板布局方式</span></span><br><span class="line">		panel.setBounds(<span class="number">0</span>,<span class="number">0</span>,<span class="number">316</span>,<span class="number">150</span>);<span class="comment">//面板位置和大小</span></span><br><span class="line">		getContentPane().add(panel);<span class="comment">//窗体中添加面板</span></span><br><span class="line">		</span><br><span class="line">		final JLabel name =<span class="keyword">new</span> JLabel();<span class="comment">//标签</span></span><br><span class="line">		name.setFont(<span class="keyword">new</span> Font(<span class="string">"微软雅黑"</span>, Font.PLAIN,<span class="number">12</span>));<span class="comment">//设置标签显示字体样式</span></span><br><span class="line">		name.setText(<span class="string">"用户名："</span>);<span class="comment">//设置标签显示内容</span></span><br><span class="line">		name.setBounds(<span class="number">62</span>,<span class="number">27</span>,<span class="number">52</span>,<span class="number">26</span>);</span><br><span class="line">		panel.add(name);</span><br><span class="line">		final JTextField nameTextField=<span class="keyword">new</span> JTextField();<span class="comment">//文本控件框</span></span><br><span class="line">		nameTextField.setBounds(<span class="number">120</span>,<span class="number">30</span>,<span class="number">129</span>,<span class="number">22</span>);</span><br><span class="line">		panel.add(nameTextField);</span><br><span class="line">		</span><br><span class="line">		final JLabel passWd =<span class="keyword">new</span> JLabel();<span class="comment">//标签</span></span><br><span class="line">		passWd.setFont(<span class="keyword">new</span> Font(<span class="string">"微软雅黑"</span>, Font.PLAIN,<span class="number">12</span>));<span class="comment">//设置标签显示字体样式</span></span><br><span class="line">		passWd.setText(<span class="string">"密码："</span>);<span class="comment">//设置标签显示内容</span></span><br><span class="line">		passWd.setBounds(<span class="number">65</span>,<span class="number">55</span>,<span class="number">44</span>,<span class="number">18</span>);</span><br><span class="line">		panel.add(passWd);</span><br><span class="line">		final JTextField passWdTextField=<span class="keyword">new</span> JTextField();<span class="comment">//文本控件框</span></span><br><span class="line">		passWdTextField.setBounds(<span class="number">120</span>,<span class="number">58</span>,<span class="number">129</span>,<span class="number">22</span>);</span><br><span class="line">		panel.add(passWdTextField);</span><br><span class="line">		</span><br><span class="line">		final JButton entry=<span class="keyword">new</span> JButton();</span><br><span class="line">		entry.setText(<span class="string">"登录"</span>);</span><br><span class="line">		entry.setBounds(<span class="number">84</span>,<span class="number">104</span>,<span class="number">64</span>,<span class="number">28</span>);</span><br><span class="line">		panel.add(entry);</span><br><span class="line">		final JButton cancel=<span class="keyword">new</span> JButton();</span><br><span class="line">		cancel.setText(<span class="string">"关闭"</span>);</span><br><span class="line">		cancel.setBounds(<span class="number">170</span>,<span class="number">104</span>,<span class="number">64</span>,<span class="number">28</span>);</span><br><span class="line">		panel.add(cancel);	</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//登录按钮单击事件</span></span><br><span class="line">		entry.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				String name=nameTextField.getText();<span class="comment">//获取用户输入名字</span></span><br><span class="line">				String passwd=passWdTextField.getText();<span class="comment">//获取用户输入密码</span></span><br><span class="line">				<span class="keyword">if</span>(!name.equals(<span class="string">""</span>)&amp;&amp;!passwd.equals(<span class="string">""</span>))&#123;<span class="comment">//输入 不为空时</span></span><br><span class="line">					SelectUser selectUser=<span class="keyword">new</span> SelectUser();</span><br><span class="line">					boolean <span class="keyword">bool</span>=selectUser.selectUser(name, passwd);</span><br><span class="line">					<span class="keyword">if</span>(<span class="literal">true</span>==<span class="keyword">bool</span>)&#123;</span><br><span class="line">						JOptionPane.showConfirmDialog(null, <span class="string">"用户名密码正确"</span>,<span class="string">"信息提示框"</span>,JOptionPane.WARNING_MESSAGE);</span><br><span class="line">					&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">						JOptionPane.showConfirmDialog(null, <span class="string">"用户名密码不正确"</span>,<span class="string">"信息提示框"</span>,JOptionPane.WARNING_MESSAGE);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					JOptionPane.showConfirmDialog(null, <span class="string">"请输入用户名密码"</span>,<span class="string">"信息提示框"</span>,JOptionPane.WARNING_MESSAGE);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		</span><br><span class="line">		cancel.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				System.<span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">//关闭窗体</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		EntryFrame frame=<span class="keyword">new</span> EntryFrame();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行结果：<br>user数据表:</p>
<table>
<thead>
<tr>
<th>name</th>
<th>passwd</th>
</tr>
</thead>
<tbody>
<tr>
<td>zhang</td>
<td>1</td>
</tr>
<tr>
<td>li</td>
<td>1</td>
</tr>
</tbody>
</table>
<p><img src="/img/javause/29.png" alt="图片"><br><img src="/img/javause/30.png" alt="图片"></p>
<p>(2)匹配游戏<br>通过图片的拖拽应用鼠标事件实现匹配<br>用1个面板放窗体底部，上面加3个JLabel标签代表图片匹配的位置，再创建1个面板上面加3个JLabel标签用于显示3个图片<br>实现了MouseListener和MouseMotionListener接口<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Matching extends JFrame implements MouseListener,</span><br><span class="line">		MouseMotionListener &#123;</span><br><span class="line">	<span class="keyword">private</span> JLabel img[]=<span class="keyword">new</span> JLabel[<span class="number">3</span>];</span><br><span class="line">	<span class="keyword">private</span> JLabel targets[]=<span class="keyword">new</span> JLabel[<span class="number">3</span>];</span><br><span class="line">	<span class="keyword">private</span> Point pressPoint;<span class="comment">//按住鼠标时的坐标</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Matching</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">364</span>, <span class="number">312</span>);</span><br><span class="line">		setTitle(<span class="string">"匹配游戏"</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel imagePanel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		imagePanel.setLayout(null);</span><br><span class="line">		imagePanel.setOpaque(<span class="literal">false</span>);<span class="comment">//设置控件透明</span></span><br><span class="line">		setGlassPane(imagePanel);<span class="comment">//public Component getGlassPane()设置 glassPane 属性  GlassPane是透明的，用来捕获鼠标事件</span></span><br><span class="line">		getGlassPane().setVisible(<span class="literal">true</span>);<span class="comment">///////</span></span><br><span class="line">		ImageIcon[] icon=<span class="keyword">new</span> ImageIcon[<span class="number">3</span>];</span><br><span class="line">		icon[<span class="number">0</span>]=<span class="keyword">new</span> ImageIcon(getClass().getResource(<span class="string">"bee.jpg"</span>));</span><br><span class="line">		icon[<span class="number">1</span>]=<span class="keyword">new</span> ImageIcon(getClass().getResource(<span class="string">"fish.jpg"</span>));</span><br><span class="line">		icon[<span class="number">2</span>]=<span class="keyword">new</span> ImageIcon(getClass().getResource(<span class="string">"dog.jpg"</span>));</span><br><span class="line">		final JPanel bottomPanel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		bottomPanel.setLayout(<span class="keyword">new</span> FlowLayout(FlowLayout.CENTER,<span class="number">20</span>,<span class="number">3</span>));<span class="comment">//距离上面为3，左右间距20</span></span><br><span class="line">		bottomPanel.setBounds(<span class="number">20</span>, <span class="number">180</span>, <span class="number">300</span>, <span class="number">80</span>);<span class="comment">//没有这行则不显示出目标面板</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">			img[i]=<span class="keyword">new</span> JLabel(icon[i]);</span><br><span class="line">			img[i].setSize(<span class="number">50</span>, <span class="number">50</span>);</span><br><span class="line">			img[i].setBorder(<span class="keyword">new</span> LineBorder(Color.GRAY));<span class="comment">//设置线性边框</span></span><br><span class="line">			<span class="keyword">int</span> x=(<span class="keyword">int</span>) (Math.random()*(getWidth()-<span class="number">50</span>));</span><br><span class="line">			<span class="keyword">int</span> y=(<span class="keyword">int</span>) (Math.random()*(getHeight()-<span class="number">150</span>));</span><br><span class="line">			img[i].setLocation(x, y);</span><br><span class="line">			img[i].addMouseListener(<span class="keyword">this</span>);<span class="comment">//鼠标监听器</span></span><br><span class="line">			img[i].addMouseMotionListener(<span class="keyword">this</span>);</span><br><span class="line">			imagePanel.add(img[i]);</span><br><span class="line">			targets[i]=<span class="keyword">new</span> JLabel();</span><br><span class="line">			targets[i].setOpaque(<span class="literal">true</span>);<span class="comment">//标签不透明，显示背景颜色</span></span><br><span class="line">			targets[i].setBackground(Color.ORANGE);</span><br><span class="line">			targets[i].setHorizontalTextPosition(SwingConstants.CENTER);<span class="comment">//设置文本域图像水平居中</span></span><br><span class="line">			targets[i].setVerticalTextPosition(SwingConstants.BOTTOM);<span class="comment">//设置文本显示在图像下方</span></span><br><span class="line">			targets[i].setPreferredSize(<span class="keyword">new</span> Dimension(<span class="number">80</span>,<span class="number">80</span>));<span class="comment">//设置标签首选大小</span></span><br><span class="line">			targets[i].setHorizontalAlignment(SwingConstants.CENTER);<span class="comment">//文字居中对齐</span></span><br><span class="line">			bottomPanel.add(targets[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		targets[<span class="number">0</span>].setText(<span class="string">"蜜蜂"</span>);</span><br><span class="line">		targets[<span class="number">1</span>].setText(<span class="string">"小鱼"</span>);</span><br><span class="line">		targets[<span class="number">2</span>].setText(<span class="string">"小狗"</span>);</span><br><span class="line">		getContentPane().add(bottomPanel,BorderLayout.SOUTH);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> boolean <span class="title">check</span><span class="params">()</span></span>&#123;</span><br><span class="line">		boolean result=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">			Point location=img[i].getLocationOnScreen();<span class="comment">//获取每个图像标签的位置</span></span><br><span class="line">			Point seat=targets[i].getLocationOnScreen();<span class="comment">//获取每个对应位置的坐标</span></span><br><span class="line">			targets[i].setBackground(Color.GREEN);<span class="comment">//设置匹配后的颜色</span></span><br><span class="line">			<span class="keyword">if</span>(location.x&lt;seat.x||location.y&lt;seat.y||location.x&gt;seat.x+<span class="number">80</span>||location.y&gt;seat.y+<span class="number">80</span>)&#123;<span class="comment">//匹配失败情况</span></span><br><span class="line">				targets[i].setBackground(Color.ORANGE);<span class="comment">//恢复原来的颜色</span></span><br><span class="line">				result=<span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> result;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mousePressed</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">		pressPoint=e.getPoint();<span class="comment">//保存拖放图片标签时的起始坐标</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">		JLabel sourse=(JLabel) e.getSource();<span class="comment">//获取事件源控件</span></span><br><span class="line">		Point imgPoint=sourse.getLocation();<span class="comment">//获取控件坐标</span></span><br><span class="line">		Point point=e.getPoint();<span class="comment">//获取鼠标坐标</span></span><br><span class="line">		sourse.setLocation(imgPoint.x+point.x-pressPoint.x, imgPoint.y+point.y-pressPoint.y);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(check())&#123;<span class="comment">//如果配对成功</span></span><br><span class="line">			getGlassPane().setVisible(<span class="literal">false</span>);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;<span class="comment">//遍历所有匹配位置的标签</span></span><br><span class="line">				targets[i].setText(<span class="string">"匹配成功"</span>);</span><br><span class="line">				targets[i].setIcon(img[i].getIcon());<span class="comment">//设置匹配的图标</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseMoved</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseClicked</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseEntered</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseExited</span><span class="params">(MouseEvent e)</span> </span>&#123;&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Matching matching=<span class="keyword">new</span> Matching();</span><br><span class="line">		matching.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果:</p>
<p><img src="/img/javause/31.png" alt="图片"><br><img src="/img/javause/32.png" alt="图片"><br><img src="/img/javause/33.png" alt="图片"></p>
<p>补充:<br>都实现对事件监听的适配器与事件监听接口区别:<br>监听器有些方法用不到，用接口必须重写方法，适配器是对监听器的一个简化，适配器是抽象类，但类中方法并不是抽象的，可以对需要的方法重写，从而简化代码。</p>
<h1 id="u7B2C_u5341_u4E00_u7AE0_Swing_u7684_u9AD8_u7EA7_u63A7_u4EF6"><a href="#u7B2C_u5341_u4E00_u7AE0_Swing_u7684_u9AD8_u7EA7_u63A7_u4EF6" class="headerlink" title="第十一章 Swing的高级控件"></a>第十一章 Swing的高级控件</h1><p>Swing提供了一些高级控件如文本编辑器、工具栏、菜单、系统托盘等。</p>
<h2 id="1-_u83DC_u5355"><a href="#1-_u83DC_u5355" class="headerlink" title="1.菜单"></a>1.菜单</h2><p>向框架中添加菜单需要3个类:菜单栏类(JMenuBar)、菜单类(JMenu)、菜单项类(JMenuItem)</p>
<p>(1)添加菜单步骤<br>创建菜单栏-&gt;创建菜单-&gt;创建菜单项</p>
<p>A.创建菜单栏<br>使用JMenuBar创建菜单栏，使用JFrame类的setJMenuBar()方法将菜单栏添加到窗体。<br>具体如下：<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">JMenuBar mb=<span class="keyword">new</span> JMenuBar();</span><br><span class="line">setJMenuBar(mb);<span class="comment">//易错-------------------------------区别于其add()方法</span></span><br><span class="line">备注:JMenuBar实例的add()方法实现在菜单栏中添加菜单对象</span><br></pre></td></tr></table></figure></p>
<p>B.创建菜单<br>使用JMenu创建菜单，使用JMenuBar类的add()方法将菜单添加到菜单栏中。<br>JMenu构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JMenu</span><span class="params">()</span></span>           <span class="comment">//创建没有文本的新菜单</span></span><br><span class="line"><span class="function"><span class="title">JMenu</span><span class="params">(String s)</span></span>   <span class="comment">//创建一个初始文本为指定字符串的新菜单</span></span><br></pre></td></tr></table></figure></p>
<p>JMenu类常用方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>add(JMenuItem menuItem)</td>
<td>将某个菜单项追加到此菜单的末尾</td>
</tr>
<tr>
<td>insert(JMenuItem menuItem,int pos)</td>
<td>在给定位置插入指定的菜单项</td>
</tr>
<tr>
<td>addSeparator()</td>
<td>将新分隔符追加到菜单的末尾</td>
</tr>
<tr>
<td>insertSeparator(int pos)</td>
<td>在指定的位置插入分隔符</td>
</tr>
</tbody>
</table>
<p>C.创建菜单项<br>菜单项用于执行某个特定的命令，完成特定的操作(打开窗口，退出程序等)，可以从相应的菜单中选择菜单项。<br>使用JMenuItem创建菜单项，使用JMenu的add()方法添加到菜单上.<br>通过JMenuItem类可以创建普通的文字菜单项，也可以创建带有图片的菜单项。<br>JMenuItem类常见构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JMenuItem</span><span class="params">()</span></span>			                   <span class="comment">//创建不带有文本或者图标的菜单项</span></span><br><span class="line"><span class="function"><span class="title">JMenuItem</span><span class="params">(String text)</span></span>                 <span class="comment">//创建带有指定文本的菜单项</span></span><br><span class="line"><span class="function"><span class="title">JMenuItem</span><span class="params">(Icon icon)</span></span>                   <span class="comment">//创建带有指定图标的菜单项</span></span><br><span class="line"><span class="function"><span class="title">JMenuItem</span><span class="params">(String text,Icon icon)</span></span>       <span class="comment">//创建带有文本或者图标的菜单项</span></span><br></pre></td></tr></table></figure></p>
<p>菜单项的添加动作事件可以使用addActionListener(ActionListener actionListener)实现。</p>
<p>实例:创建菜单”文件”，在其中添加菜单项”打开”和”退出”,在”打开”项添加图片文件，退出项添加单击事件<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> MenuDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">MenuDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setTitle(<span class="string">"创建菜单"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">240</span>, <span class="number">160</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		JMenuBar menuBar=<span class="keyword">new</span> JMenuBar();<span class="comment">//创建菜单栏</span></span><br><span class="line">		JMenu menu_file=<span class="keyword">new</span> JMenu(<span class="string">"文件"</span>);<span class="comment">//创建菜单“文件”</span></span><br><span class="line">		URL url=getClass().getResource(<span class="string">"file.png"</span>);</span><br><span class="line">		ImageIcon icon=<span class="keyword">new</span> ImageIcon(url);<span class="comment">//图片实例</span></span><br><span class="line">		JMenuItem menuItem_open=<span class="keyword">new</span> JMenuItem(<span class="string">"打开"</span>, icon);<span class="comment">//菜单项"打开"</span></span><br><span class="line">		JMenuItem menuItem_exit=<span class="keyword">new</span> JMenuItem(<span class="string">"退出"</span>);</span><br><span class="line">		menuItem_exit.addActionListener(<span class="keyword">new</span> ActionListener() &#123;<span class="comment">//菜单项"退出"监听事件</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				System.<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		menu_file.add(menuItem_open);<span class="comment">//添加菜单项</span></span><br><span class="line">		menu_file.addSeparator();<span class="comment">//打开和退出之间添加分隔符</span></span><br><span class="line">		menu_file.add(menuItem_exit);</span><br><span class="line">		menuBar.add(menu_file);</span><br><span class="line">		setJMenuBar(menuBar);<span class="comment">//菜单栏添加到窗体</span></span><br><span class="line">		</span><br><span class="line">	<span class="comment">//二级菜单如下</span></span><br><span class="line">		JMenu menu_new=<span class="keyword">new</span> JMenu(<span class="string">"新建"</span>);<span class="comment">//创建菜单“新建”</span></span><br><span class="line">		menu_file.add(menu_new);<span class="comment">//将菜单"新建"添加到菜单"文件"</span></span><br><span class="line">		JMenuItem menuItem_txt=<span class="keyword">new</span> JMenuItem(<span class="string">"文本"</span>);</span><br><span class="line">		menu_new.add(menuItem_txt);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		MenuDemo frame=<span class="keyword">new</span> MenuDemo();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/34.png" alt="图片"><br><img src="/img/javause/35.png" alt="图片"></p>
<p>(2)创建弹出式菜单<br>弹出式菜单就是单击鼠标右键时弹出的菜单，弹出式菜单由鼠标位置决定弹出菜单位置。<br>使用JPopupMenu类表示弹出式菜单。<br>JPopupMenu类构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JPopupMenu</span><span class="params">()</span></span>             <span class="comment">//构造一个新的弹出式菜单</span></span><br><span class="line"><span class="function"><span class="title">JPopupMenu</span><span class="params">(String label)</span></span> <span class="comment">//构造一个有标题的弹出式菜单</span></span><br></pre></td></tr></table></figure></p>
<p>可以通过add()方法向JPopupMenu类中添加JMenuItem对象</p>
<p>JPopupMenu类常用方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>add(JMenuItem menuItem)</td>
<td>将指定菜单项添加到此弹出菜单的末尾</td>
</tr>
<tr>
<td>addSeparator()</td>
<td>将新分隔符添加到菜单的末尾</td>
</tr>
<tr>
<td>isPopupTrigger(MouseEvevt e)</td>
<td>如果弹出菜单的当前组件将鼠标事件视为弹出菜单的触发器，则返回true</td>
</tr>
<tr>
<td>show(Component parent,int x,int y)</td>
<td>在组件调用者的坐标空间中的位置(x,y)处显示弹出菜单</td>
</tr>
</tbody>
</table>
<p>实例如下:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JPopupMenuDemo</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">JPopupMenuDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">250</span>, <span class="number">203</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		getContentPane().setLayout(<span class="keyword">null</span>);</span><br><span class="line">		<span class="keyword">final</span> JPopupMenu menu=<span class="keyword">new</span> JPopupMenu(<span class="string">"编辑"</span>);</span><br><span class="line">		JMenuItem copy=<span class="keyword">new</span> JMenuItem(<span class="string">"编辑"</span>);</span><br><span class="line">		JMenuItem stick=<span class="keyword">new</span> JMenuItem(<span class="string">"粘贴"</span>);</span><br><span class="line">		JMenuItem cut=<span class="keyword">new</span> JMenuItem(<span class="string">"剪切"</span>);</span><br><span class="line">		menu.add(copy);</span><br><span class="line">		menu.add(stick);</span><br><span class="line">		menu.add(cut);</span><br><span class="line">		<span class="keyword">this</span>.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;<span class="comment">//为标签添加鼠标监听器</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(e.isPopupTrigger())&#123;<span class="comment">//如果弹出菜单的当前组件将鼠标事件视为弹出菜单的触发器</span></span><br><span class="line">					menu.show(e.getComponent(), e.getX(), e.getY());<span class="comment">//鼠标右键单击处显示</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		JPopupMenuDemo demo=<span class="keyword">new</span> JPopupMenuDemo();</span><br><span class="line">		demo.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>鼠标右键:<br><img src="/img/javause/36.png" alt="图片"></p>
<h2 id="2-_u5DE5_u5177_u680F"><a href="#2-_u5DE5_u5177_u680F" class="headerlink" title="2.工具栏"></a>2.工具栏</h2><p>javax.swing.JToolBar类创建工具栏，而对话框包括信息对话框、文件对话框等。<br>(1)创建工具栏并添加工具按钮<br>与菜单相比，工具栏更适合使用图像来表示命令，窗体中工具栏紧挨着菜单栏。工具栏与菜单栏一样是控件容器，可以添加菜单、组合框等。<br>JToolBar类常用构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JToolBar</span><span class="params">()</span></span>                   <span class="comment">//构造一个默认位置为水平方向的工具栏</span></span><br><span class="line"><span class="function"><span class="title">JToolBar</span><span class="params">(String name)</span></span>        <span class="comment">//构造一个默认位置为水平方向，当工具栏成为浮动状态时具有指定的图标</span></span><br></pre></td></tr></table></figure></p>
<p>JToolBar类常用方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>Component add(Component c)</td>
<td>在工具栏末尾添加指定组件如按钮、复选框、单选按钮等</td>
</tr>
<tr>
<td>void addSeparator()</td>
<td>将默认大小的分隔符添加到工具栏末尾</td>
</tr>
<tr>
<td>void addSeparator(Dimension size)</td>
<td>将指定大小的分隔符添加到工具栏末尾</td>
</tr>
<tr>
<td>void setFloatable(boolean b)</td>
<td>设置工具栏是否可以移动，可以移动设置为true</td>
</tr>
</tbody>
</table>
<p>备注:如果希望工具栏可以随意移动，窗体一定要采用默认的边界布局方式，并且不能在边界布局的四周添加任何控件。</p>
<p>实例：在窗体中添加可移动的工具栏对象，并在工具栏中添加”新建”、”保存”、”退出”按钮。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/37.png" alt="图片"><br><img src="/img/javause/38.png" alt="图片"><br><img src="/img/javause/39.png" alt="图片"></p>
<p>(2)文件对话框<br>实际应用中经常需要选择文件，如读取文件或者选择指定类型文件等。通过javax.swing.JFileChooser类实现。<br>JFileChooser类常用构造方法:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JFileChooser</span><span class="params">()</span></span>                <span class="comment">//构造一个指定默认目录的文件选择对话框</span></span><br><span class="line"><span class="function"><span class="title">JFileChooser</span><span class="params">(File f)</span></span>          <span class="comment">//使用给定的File作为路径来构造一个文件选择对话框</span></span><br><span class="line"><span class="function"><span class="title">JFileChooser</span><span class="params">(String dif)</span></span>      <span class="comment">//构造一个使用给定路径的选择对话框</span></span><br><span class="line"></span><br><span class="line">重要字段:</span><br><span class="line">APPROVE_OPTION-------------单击了打开按钮，用户选择了文件，可以对文件进行操作</span><br><span class="line">CANCEL_OPTION--------------单击了取消按钮，用户没有选择文件</span><br><span class="line"></span><br><span class="line">方法:</span><br><span class="line">int <span class="function"><span class="title">showOPenDialog</span><span class="params">()</span></span>---------显示对话框</span><br></pre></td></tr></table></figure></p>
<p>实例:文件菜单中添加打开项，弹出打开文件对话框<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> FileChooseDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FileChooseDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">294</span>, <span class="number">167</span>);</span><br><span class="line">		setTitle(<span class="string">"文件选择对话框"</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		JMenuBar menuBar=<span class="keyword">new</span> JMenuBar();<span class="comment">//菜单栏</span></span><br><span class="line">		setJMenuBar(menuBar);<span class="comment">//添加到窗体</span></span><br><span class="line">		JMenu menu=<span class="keyword">new</span> JMenu(<span class="string">"文件"</span>);<span class="comment">//菜单</span></span><br><span class="line">		menuBar.add(menu);<span class="comment">//添加菜单</span></span><br><span class="line">		JMenuItem open=<span class="keyword">new</span> JMenuItem(<span class="string">"打开"</span>);<span class="comment">//菜单项</span></span><br><span class="line">		menu.add(open);</span><br><span class="line">		open.addActionListener(<span class="keyword">new</span> ActionListener() &#123;<span class="comment">//添加单击事件</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;<span class="comment">/////////////////////////////////////</span></span><br><span class="line">				JFileChooser fileChooser=<span class="keyword">new</span> JFileChooser();<span class="comment">//文件选择对话框</span></span><br><span class="line">				fileChooser.showOpenDialog(getContentPane());<span class="comment">//显示对话框</span></span><br><span class="line">				<span class="comment">//public int showOpenDialog(Component parent)-------parent - 该对话框的父组件，可以为 null</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		FileChooseDemo demo=<span class="keyword">new</span> FileChooseDemo();</span><br><span class="line">		demo.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/40.png" alt="图片"></p>
<p>文件过滤器:<br>JFileChooser类的方法setFileFilter(FileFilter filter)对文件选择框实现过滤，只显示指定类型文件。<br>该方法的参数类型javax.swing.filechooser.FileFilter为一个抽象类，实现该类可以对文件进行过滤。<br>FileFilter类方法：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>public abstract boolean accept(File file)</td>
<td>过滤文件</td>
</tr>
<tr>
<td>public abstract String getDescription()</td>
<td>返回选择对话框中文件类型的描述信息</td>
</tr>
</tbody>
</table>
<p>javax.swing.filechooser.FileNameExtensionFilter实现了FileFilter类。<br>FileNameExtensionFilter只有一个构造方法：<br><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FileNameExtensionFilter(<span class="built_in">String</span> description,<span class="built_in">String</span><span class="attribute">...</span>extensions) <span class="comment">//description文件选择对话框中文件类型的描述信息，extensions文件对话框中允许显示的文件类型，多个文件类型用逗号分隔。</span></span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> FileChooseDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">FileChooseDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">294</span>, <span class="number">167</span>);</span><br><span class="line">		setTitle(<span class="string">"文件选择对话框"</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		JMenuBar menuBar=<span class="keyword">new</span> JMenuBar();<span class="comment">//菜单栏</span></span><br><span class="line">		setJMenuBar(menuBar);<span class="comment">//添加到窗体</span></span><br><span class="line">		JMenu menu=<span class="keyword">new</span> JMenu(<span class="string">"文件"</span>);<span class="comment">//菜单</span></span><br><span class="line">		menuBar.add(menu);<span class="comment">//添加菜单</span></span><br><span class="line">		JMenuItem open=<span class="keyword">new</span> JMenuItem(<span class="string">"打开"</span>);<span class="comment">//菜单项</span></span><br><span class="line">		menu.add(open);</span><br><span class="line">		open.addActionListener(<span class="keyword">new</span> ActionListener() &#123;<span class="comment">//添加单击事件</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;<span class="comment">/////////////////////////////////////</span></span><br><span class="line">				JFileChooser fileChooser=<span class="keyword">new</span> JFileChooser();<span class="comment">//文件选择对话框</span></span><br><span class="line">				FileFilter filter=<span class="keyword">new</span> FileNameExtensionFilter(<span class="string">"图像文件(*。bmp,*.gif,*.jpg,*.ipeg,*.png)"</span>,<span class="string">"bmp"</span>,<span class="string">"gif"</span>,<span class="string">"jpg"</span>,<span class="string">"jpeg"</span>,<span class="string">"png"</span>);</span><br><span class="line">				fileChooser.setFileFilter(filter);<span class="comment">//设置文件过滤器</span></span><br><span class="line">				fileChooser.showOpenDialog(getContentPane());<span class="comment">//显示对话框</span></span><br><span class="line">				<span class="comment">//public int showOpenDialog(Component parent)-------parent - 该对话框的父组件，可以为 null			</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		FileChooseDemo demo=<span class="keyword">new</span> FileChooseDemo();</span><br><span class="line">		demo.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/41.png" alt="图片"></p>
<p>(3)信息对话框<br>进行一个重要的操作动作时，可以使用信息对话框给用户提供一些重要信息。<br>javax.swing.JOptionPane类提供信息对话框功能，showMessageDialog()方法创建一个信息对话框。<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> void showMessageDialog(Component parentComponent,<span class="keyword">Object</span> <span class="keyword">message</span>,<span class="keyword">String</span> title,int messageType)</span><br><span class="line">parentComponent<span class="comment">//信息对话框所依赖的控件，信息对话框会在该控件正前方显示，如JFrame窗体等</span></span><br><span class="line"><span class="keyword">message</span><span class="comment">//指定对话框上显示的文字信息</span></span><br><span class="line">title<span class="comment">//对话框的标题字符串</span></span><br><span class="line">messageType<span class="comment">//要显示的信息类型，包括ERROR_MESSAGE,INFORMATION_MESSAGE,WARNING_MESSAGE,QUESTION_MESSAGE,PLAIN_MESSAGE。当为WARNING_MESSAGE时对话框会有"!"</span></span><br></pre></td></tr></table></figure></p>
<p>实例:根据长和宽计算面积，输入非法数据时给出提示信息<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Square extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">Square</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setTitle(<span class="string">"计算面积"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">		JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">280</span>, <span class="number">180</span>);</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		JLabel wLabel=<span class="keyword">new</span> JLabel();</span><br><span class="line">		wLabel.setText(<span class="string">"长"</span>);</span><br><span class="line">		wLabel.setBounds(<span class="number">40</span>, <span class="number">20</span>, <span class="number">20</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(wLabel);</span><br><span class="line">		JLabel hLabel=<span class="keyword">new</span> JLabel();</span><br><span class="line">		hLabel.setText(<span class="string">"宽"</span>);</span><br><span class="line">		hLabel.setBounds(<span class="number">40</span>, <span class="number">60</span>, <span class="number">20</span>, <span class="number">18</span>);</span><br><span class="line">		panel.add(hLabel);</span><br><span class="line">		</span><br><span class="line">		final JTextField wTextField=<span class="keyword">new</span> JTextField();</span><br><span class="line">		wTextField.setBounds(<span class="number">70</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">20</span>);</span><br><span class="line">		panel.add(wTextField);</span><br><span class="line">		final JTextField hTextField=<span class="keyword">new</span> JTextField();</span><br><span class="line">		hTextField.setBounds(<span class="number">70</span>, <span class="number">60</span>, <span class="number">100</span>, <span class="number">20</span>);</span><br><span class="line">		panel.add(hTextField);</span><br><span class="line">		</span><br><span class="line">		JButton button=<span class="keyword">new</span> JButton();</span><br><span class="line">		button.setText(<span class="string">"确定"</span>);</span><br><span class="line">		button.setBounds(<span class="number">80</span>, <span class="number">100</span>, <span class="number">60</span>, <span class="number">40</span>);</span><br><span class="line">		panel.add(button);</span><br><span class="line">		button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				String w=wTextField.getText();</span><br><span class="line">				String h=hTextField.getText();</span><br><span class="line">				boolean <span class="keyword">bool</span>=<span class="literal">true</span>;</span><br><span class="line">				<span class="keyword">char</span>[] length=w.toCharArray();<span class="comment">//获取字符串的字符数组</span></span><br><span class="line">				<span class="keyword">char</span>[] hight=h.toCharArray();</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;length.length;i++)&#123;<span class="comment">//判断是否有非数字字符</span></span><br><span class="line">					<span class="keyword">if</span>(!(Character.isDigit(length[i])))&#123;</span><br><span class="line">						<span class="keyword">bool</span>=<span class="literal">false</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;hight.length;i++)&#123;<span class="comment">//判断是否有非数字字符</span></span><br><span class="line">					<span class="keyword">if</span>(!(Character.isDigit(hight[i])))&#123;</span><br><span class="line">						<span class="keyword">bool</span>=<span class="literal">false</span>;</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(<span class="literal">false</span>==<span class="keyword">bool</span>)&#123;</span><br><span class="line">					JOptionPane.showMessageDialog(getContentPane(), <span class="string">"输入了非法字符"</span>, <span class="string">"警告提示框"</span>, JOptionPane.WARNING_MESSAGE);</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="keyword">int</span> leng=Integer.parseInt(w);<span class="comment">//字符串转换为整数</span></span><br><span class="line">					<span class="keyword">int</span> widt=Integer.parseInt(h);</span><br><span class="line">					JOptionPane.showMessageDialog(getContentPane(), <span class="string">"面积:"</span>+leng*widt, <span class="string">"面积计算结果"</span>, JOptionPane.INFORMATION_MESSAGE);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		Square square=<span class="keyword">new</span> Square();</span><br><span class="line">		square.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/42.png" alt="图片"><br><img src="/img/javause/43.png" alt="图片"></p>
<p>(4)颜色对话框<br>用户可以通过颜色对话框选择自己喜欢的颜色，来改变字体颜色.<br>javax.swing.JColorChooser类的静态方法可以创建一个颜色对话框。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">showDialog</span><span class="params">(Component component,String title,Color initialColor)</span></span></span><br><span class="line">component            <span class="comment">//指定对话框所依赖的控件，如窗体等</span></span><br><span class="line">title                <span class="comment">//指定对话框的标题</span></span><br><span class="line">initialColor         <span class="comment">//指定颜色对话框中选择颜色返回一个颜色对象</span></span><br></pre></td></tr></table></figure></p>
<p>实例：单击按钮选择窗体背景颜色<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> ColorChooseDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ColorChooseDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">251</span>, <span class="number">182</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		final JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">243</span>, <span class="number">148</span>);</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		final JButton button=<span class="keyword">new</span> JButton(<span class="string">"选择颜色"</span>);</span><br><span class="line">		button.setBounds(<span class="number">65</span>, <span class="number">43</span>, <span class="number">86</span>, <span class="number">28</span>);</span><br><span class="line">		panel.add(button);</span><br><span class="line">		button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				Color color=JColorChooser.showDialog(getContentPane(), <span class="string">"调色板"</span>, panel.getBackground());<span class="comment">//显示颜色对话框</span></span><br><span class="line">				panel.setBackground(color);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		ColorChooseDemo demo=<span class="keyword">new</span> ColorChooseDemo();</span><br><span class="line">		demo.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/44.png" alt="图片"><br><img src="/img/javause/45.png" alt="图片"><br><img src="/img/javause/46.png" alt="图片"></p>
<p>(5)确认对话框<br>确认对话框一般会出现在用户要删除数据、修改数据时，用于保护系统的安全。<br>通过javax.swing.JOptionPane类静态方法showConfirmDialog()可以创建一个确认对话框。<br><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">showConfirmDialog(Component parentComponent,<span class="keyword">Object</span> <span class="keyword">message</span>,<span class="keyword">String</span> title,int optionType)</span><br><span class="line">parentComponent  <span class="comment">//指定确认对话框所依赖的控件，确认对话框会在该控件的正前方显示</span></span><br><span class="line"><span class="keyword">message</span>          <span class="comment">//对话框中显示的信息</span></span><br><span class="line">title            <span class="comment">//指定对话框的标题</span></span><br><span class="line">optionType       <span class="comment">//确认对话框的外观，可选值为YES_NO_OPTION,YES_NO_CANCEL_OPTION,OK_CANCEL_OPTION，如值为YES_NO_OPTION时只有yes、no两个按钮。</span></span><br></pre></td></tr></table></figure></p>
<p>实例：用户输入姓名后单击回车弹出“确认”对话框，确定时将用户姓名显示在文本域中。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> JOptionPaneDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">JOptionPaneDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		getContentPane().setLayout(null);</span><br><span class="line">		setBounds(<span class="number">100</span>,<span class="number">100</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">		JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		getContentPane().add(panel);</span><br><span class="line">		panel.setLayout(null);</span><br><span class="line">		panel.setBounds(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">		JLabel label=<span class="keyword">new</span> JLabel(<span class="string">"请输入姓名:"</span>);</span><br><span class="line">		panel.add(label);</span><br><span class="line">		label.setBounds(<span class="number">40</span>, <span class="number">40</span>, <span class="number">70</span>, <span class="number">20</span>);</span><br><span class="line">		final JTextField field=<span class="keyword">new</span> JTextField();<span class="comment">//需要final后面才能调用----文本框-----输入信息</span></span><br><span class="line">		field.setBounds(<span class="number">140</span>, <span class="number">40</span>, <span class="number">120</span>, <span class="number">20</span>);</span><br><span class="line">		panel.add(field);</span><br><span class="line">		final JTextArea field2=<span class="keyword">new</span> JTextArea();<span class="comment">//文本域------显示信息----------区别于文本框</span></span><br><span class="line">		field2.setBounds(<span class="number">40</span>, <span class="number">80</span>, <span class="number">180</span>, <span class="number">60</span>);</span><br><span class="line">		panel.add(field2);</span><br><span class="line">		field.addActionListener(<span class="keyword">new</span> ActionListener() &#123;<span class="comment">//输入框添加监听事件，输入完毕回车时执行</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				String name=field.getText();</span><br><span class="line">				<span class="keyword">if</span>(name.equals(<span class="string">""</span>))&#123;<span class="comment">//没有输入就回车情况</span></span><br><span class="line">					JOptionPane.showConfirmDialog(getContentPane(), <span class="string">"没有输入姓名"</span>, <span class="string">"信息提示框"</span>, JOptionPane.CANCEL_OPTION);</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;<span class="comment">//输入姓名后弹出确认框</span></span><br><span class="line">					<span class="keyword">int</span> n=JOptionPane.showConfirmDialog(getContentPane(), <span class="string">"确认正确吗?"</span>, <span class="string">"确认对话框"</span>, JOptionPane.YES_NO_CANCEL_OPTION);</span><br><span class="line">					<span class="keyword">if</span>(JOptionPane.YES_OPTION==n)&#123;<span class="comment">//如果用户确认信息 //选择NO时返回NO_OPTION</span></span><br><span class="line">						field2.append(name+<span class="string">"\n"</span>);</span><br><span class="line">						field.setText(<span class="string">""</span>);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		JOptionPaneDemo demo=<span class="keyword">new</span> JOptionPaneDemo();</span><br><span class="line">		demo.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/47.png" alt="图片"></p>
<h2 id="3-_u8868_u683C"><a href="#3-_u8868_u683C" class="headerlink" title="3.表格"></a>3.表格</h2><p>表格是由多行多列组成的二维表形式，由Swing中的JTable类实现。<br>表格通常需要显示在滚动面板上，否则面板不会显示列标题。<br>(1)表格创建及其常用方法<br>构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">JTable</span><span class="params">()</span></span>                                      <span class="comment">//创建一个没有初始数据的表格</span></span><br><span class="line"><span class="function"><span class="title">JTable</span><span class="params">(Object[][] rowData,Object[] columnName)</span></span><span class="comment">//以二维数组rowData中的元素值作为单元格中显示的数据，以一维数组columnName中的元素值作为列名创建一个表格</span></span><br><span class="line"><span class="function"><span class="title">JTable</span><span class="params">(TableModel model)</span></span>                      <span class="comment">//使用表格模型model创建一个表格</span></span><br><span class="line"><span class="function"><span class="title">JTable</span><span class="params">(Vector dataVector,Vector columnVector)</span></span> <span class="comment">//以向量dataVector中的元素值作为单元格中显示的数据，以向量columnVector中的元素值作为列名创建一个表格</span></span><br></pre></td></tr></table></figure></p>
<p>后三个构造方法详情见下：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">String</span>[] columnNames=&#123;<span class="string">"学号"</span>,<span class="string">"姓名"</span>,<span class="string">"分数"</span>&#125;;</span><br><span class="line"><span class="keyword">String</span>[][] rowData=&#123;&#123;<span class="string">"1"</span>,<span class="string">"zhang"</span>,<span class="string">"80"</span>&#125;,&#123;<span class="string">"2"</span>,<span class="string">"li"</span>,<span class="string">"79"</span>&#125;&#125;;</span><br><span class="line">JTable table=<span class="keyword">new</span> JTable(rowData,columnNames);</span><br><span class="line">JScrollpane pane=<span class="keyword">new</span> JScrollpane();<span class="comment">//创建滚动窗格</span></span><br><span class="line">pane.setViewportView(table);<span class="comment">//添加表格到窗格</span></span><br><span class="line">getContentPane().<span class="built_in">add</span>(pane);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">DefaultTableModel model=<span class="keyword">new</span> DefaultTableModel(rowData,columnNames);</span><br><span class="line">JTable table=<span class="keyword">new</span> JTable(model);</span><br><span class="line">JScrollpane pane=<span class="keyword">new</span> JScrollpane();<span class="comment">//创建滚动窗格</span></span><br><span class="line">pane.setViewportView(table);<span class="comment">//添加表格到窗格</span></span><br><span class="line">getContentPane().<span class="built_in">add</span>(pane);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vector columnVector=<span class="keyword">new</span> Vector();</span><br><span class="line">columnVector.<span class="built_in">add</span>(<span class="string">"学号"</span>);<span class="comment">//添加列名</span></span><br><span class="line">columnVector.<span class="built_in">add</span>(<span class="string">"姓名"</span>);</span><br><span class="line">columnVector.<span class="built_in">add</span>(<span class="string">"分数"</span>);</span><br><span class="line">Vector dataVector=<span class="keyword">new</span> Vector();<span class="comment">//定义表格数据向量</span></span><br><span class="line">Vector rowVector=<span class="keyword">new</span> Vector();<span class="comment">//定义行向量</span></span><br><span class="line">rowVector.<span class="built_in">add</span>(<span class="string">"1"</span>);</span><br><span class="line">rowVector.<span class="built_in">add</span>(<span class="string">"zhang"</span>);</span><br><span class="line">rowVector.<span class="built_in">add</span>(<span class="string">"80"</span>);</span><br><span class="line">dataVector.<span class="built_in">add</span>(rowVector);</span><br><span class="line">JTable table=<span class="keyword">new</span> JTable(dataVector,columnVctor);</span><br><span class="line">JScrollpane pane=<span class="keyword">new</span> JScrollpane();<span class="comment">//创建滚动窗格</span></span><br><span class="line">pane.setViewportView(table);<span class="comment">//添加表格到窗格</span></span><br><span class="line">getContentPane().<span class="built_in">add</span>(pane);</span><br></pre></td></tr></table></figure></p>
<p>表格常见方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>getModel()</td>
<td>获取表格所显示数据的表格模型</td>
</tr>
<tr>
<td>getRowCount()</td>
<td>获取表格中所显示数据的行数</td>
</tr>
<tr>
<td>getSelectedColumn()</td>
<td>获取表格中第一个选择列的索引，如果没有被选择的列，返回-1</td>
</tr>
<tr>
<td>getSelectedRow()</td>
<td>获取表格中第一个选择行的索引，如果没有被选择的行，返回-1</td>
</tr>
<tr>
<td>getValueAt()</td>
<td>获取由指定行索引row和列索引column指定单元格的值</td>
</tr>
<tr>
<td>setAutoResizeMode()</td>
<td>设置表格的自动调整模式</td>
</tr>
<tr>
<td>setSelectionMode()</td>
<td>设置表格的选择模式</td>
</tr>
</tbody>
</table>
<p>实例：窗体中添加表格控件，实现向表格中添加数据行、修改数据库以及删除数据行。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class EditTableModelFrame extends JFrame &#123;</span><br><span class="line">	DefaultTableModel tableModel;</span><br><span class="line">	JTable table;</span><br><span class="line">	JTextField aTextField,bTextField;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> EditTableModelFrame() &#123;</span><br><span class="line">		setTitle(<span class="string">"维护表格模型"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">400</span>, <span class="number">200</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		<span class="keyword">final</span> JScrollPane scrollPane=<span class="keyword">new</span> JScrollPane();<span class="comment">//滚动面板</span></span><br><span class="line">		getContentPane().<span class="built_in">add</span>(scrollPane,BorderLayout.CENTER);</span><br><span class="line">		<span class="keyword">String</span>[] columnNames=&#123;<span class="string">"学号"</span>,<span class="string">"姓名"</span>&#125;;<span class="comment">//定义表格列名数组</span></span><br><span class="line">		<span class="keyword">String</span>[][] tableValue=&#123;&#123;<span class="string">"1"</span>,<span class="string">"zhang"</span>&#125;,&#123;<span class="string">"2"</span>,<span class="string">"li"</span>&#125;&#125;;<span class="comment">//定义表格数据数组</span></span><br><span class="line">		tableModel=<span class="keyword">new</span> DefaultTableModel(tableValue, columnNames);</span><br><span class="line">		table=<span class="keyword">new</span> JTable(tableModel);<span class="comment">//创建指定表格模型的表格</span></span><br><span class="line">		table.setRowSorter(<span class="keyword">new</span> TableRowSorter(tableModel));<span class="comment">//设置表格的排序器</span></span><br><span class="line">		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);<span class="comment">//设置表格的选择模式单选</span></span><br><span class="line">		table.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;<span class="comment">//为表格添加鼠标事件监听器</span></span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">mouseClicked</span>(MouseEvent e) &#123;</span><br><span class="line">				<span class="built_in">int</span> selectedRow=table.getSelectedRow();<span class="comment">//获取被选中的行的索引</span></span><br><span class="line">				<span class="keyword">Object</span> oa=tableModel.getValueAt(selectedRow, <span class="number">0</span>);<span class="comment">//从表格模型中获得指定值---学号</span></span><br><span class="line">				<span class="keyword">Object</span> ob=tableModel.getValueAt(selectedRow, <span class="number">1</span>);  <span class="comment">//姓名</span></span><br><span class="line">				aTextField.setText(oa.toString());<span class="comment">//将获得的值赋值给文本框</span></span><br><span class="line">				bTextField.setText(ob.toString());</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		scrollPane.setViewportView(table);<span class="comment">//把表格放到滚动面板的视图中</span></span><br><span class="line">		<span class="keyword">final</span> JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		getContentPane().<span class="built_in">add</span>(panel,BorderLayout.SOUTH);<span class="comment">//面板添加到窗体下面</span></span><br><span class="line">		panel.<span class="built_in">add</span>(<span class="keyword">new</span> JLabel(<span class="string">"A: "</span>));</span><br><span class="line">		aTextField=<span class="keyword">new</span> JTextField(<span class="string">"A3"</span>, <span class="number">4</span>);<span class="comment">//创建文本框</span></span><br><span class="line">		panel.<span class="built_in">add</span>(aTextField);</span><br><span class="line">		panel.<span class="built_in">add</span>(<span class="keyword">new</span> JLabel(<span class="string">"B: "</span>));</span><br><span class="line">		bTextField=<span class="keyword">new</span> JTextField(<span class="string">"B3"</span>, <span class="number">4</span>);</span><br><span class="line">		panel.<span class="built_in">add</span>(bTextField);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">final</span> JButton addButton=<span class="keyword">new</span> JButton(<span class="string">"添加"</span>);</span><br><span class="line">		addButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				<span class="keyword">String</span>[] rowValues=&#123;aTextField.getText(),bTextField.getText()&#125;;<span class="comment">//创建表格行数组</span></span><br><span class="line">				tableModel.addRow(rowValues);<span class="comment">//向表格模型中添加一行</span></span><br><span class="line">				<span class="built_in">int</span> rowCount=table.getRowCount()+<span class="number">1</span>;<span class="comment">//表格行总数加1</span></span><br><span class="line">				aTextField.setText(<span class="string">"A"</span>+rowCount);<span class="comment">//文本框设置值为A连接总行数加1的值</span></span><br><span class="line">				bTextField.setText(<span class="string">"B"</span>+rowCount);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.<span class="built_in">add</span>(addButton);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">final</span> JButton updButton=<span class="keyword">new</span> JButton(<span class="string">"修改"</span>);</span><br><span class="line">		updButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				<span class="built_in">int</span> selectedRow=table.getSelectedRow();</span><br><span class="line">				<span class="keyword">if</span>(selectedRow!=-<span class="number">1</span>)&#123;<span class="comment">//判断 是否存在被选中行</span></span><br><span class="line">					tableModel.setValueAt(aTextField.getText(), selectedRow, <span class="number">0</span>);</span><br><span class="line">					tableModel.setValueAt(bTextField.getText(), selectedRow, <span class="number">1</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.<span class="built_in">add</span>(updButton);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">final</span> JButton delButton=<span class="keyword">new</span> JButton(<span class="string">"删除"</span>);</span><br><span class="line">		delButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				<span class="built_in">int</span> selectedRow=table.getSelectedRow();</span><br><span class="line">				<span class="keyword">if</span>(selectedRow!=-<span class="number">1</span>)&#123;<span class="comment">//是否存在选中行</span></span><br><span class="line">					tableModel.removeRow(selectedRow);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.<span class="built_in">add</span>(delButton);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		EditTableModelFrame frame=<span class="keyword">new</span> EditTableModelFrame();</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如下可以实现增加、修改、删除<br><img src="/img/javause/48.png" alt="图片"></p>
<p>(2)对模型事件的监听和处理<br>TableModelListener接口可监听模型事件，实现该接口，可监控表格的变化，该接口中只有一个方法tableChanged(),当模型产生表格事件时被调用。<br>tableChanged()方法只有一个入口参数为TableModelEvent,该类通过的方法可以对表格模型事件进行处理。<br>TableModelEvent类方法如下：</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>getColumn()</td>
<td>返回表格模型中事件的列</td>
</tr>
<tr>
<td>getFirstRow()</td>
<td>返回表格模型中第一个被更改的行</td>
</tr>
<tr>
<td>getLastRow()</td>
<td>返回表格模型中最后一个被更改的行</td>
</tr>
<tr>
<td>getType()</td>
<td>返回事件类型，该类型为INSERT、UPDATE、DELETE之一</td>
</tr>
</tbody>
</table>
<p>TableModelEvent类的 getType()方法可以判断事件的类型，通过TableModelEvent类的字段可以实现对事件类型的判断。<br>TableModelEvent类常用字段：</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>TableModelEvent.DELETE</td>
<td>表示对表格模型中的行或者列进行了删除操作</td>
</tr>
<tr>
<td>TableModelEvent.INSERT</td>
<td>表示在表格模型中添加了新的行或者列</td>
</tr>
<tr>
<td>TableModelEvent.UPDATE</td>
<td>表示对表格模型中的现有数据进行了修改操作</td>
</tr>
</tbody>
</table>
<p>除了数据模型发生变化会触发表格模型监听事件外，还可以通过AbstractTableModel类提供的方法来触发表格模型事件监听器对事件进行处理。<br>AbstractTableModel常用方法：</p>
<table>
<thead>
<tr>
<th>字段</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>firstTablecellUpdated(int row,int column)</td>
<td>通知所有监听器，已更新[row,column]处的单元格值</td>
</tr>
<tr>
<td>firstTableRowsDeleted(int firstRow,int lastRow)</td>
<td>通知所有监听器，已删除范围在[firstRow,lastRow]的行</td>
</tr>
<tr>
<td>firstTableRowsInserted(int firstRow,int lastRow)</td>
<td>通知所有监听器，已插入范围在[firstRow,lastRow]的行</td>
</tr>
<tr>
<td>firstTableRowsUpdated(int firstRow,int lastRow)</td>
<td>通知所有监听器，已更新范围在[firstRow,lastRow]的行</td>
</tr>
</tbody>
</table>
<p>备注：AbstractTableModel类方法触发事件监听器时，并不是真正的对表格进行了添加删除等操作，只是通过这些方法通知表格的所有监听器，并对事件进行响应处理。事件响应代码可以对事件类型分类，不同事件分别实现不同功能。</p>
<p>实例：实现表格数据的修改删除，更改后提示<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TableModelEventFrame</span> <span class="keyword">extends</span> <span class="title">JFrame</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> DefaultTableModel tableModel;<span class="comment">//表格模型</span></span><br><span class="line">	<span class="keyword">private</span> JTable table;<span class="comment">//表格</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">TableModelEventFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setTitle(<span class="string">"表格模型事件"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">300</span>, <span class="number">160</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		<span class="keyword">final</span> JScrollPane scrollPane=<span class="keyword">new</span> JScrollPane();<span class="comment">//滚动面板</span></span><br><span class="line">		getContentPane().add(scrollPane,BorderLayout.CENTER);<span class="comment">//添加在中间</span></span><br><span class="line">		String[] columnNames=&#123;<span class="string">"学号"</span>,<span class="string">"姓名"</span>&#125;;<span class="comment">//表格列名数组</span></span><br><span class="line">		String[][] tableValues=&#123;&#123;<span class="string">"1"</span>,<span class="string">"zhang"</span>&#125;,&#123;<span class="string">"2"</span>,<span class="string">"cheng"</span>&#125;&#125;;<span class="comment">//表格数据数组</span></span><br><span class="line">		tableModel=<span class="keyword">new</span> DefaultTableModel(tableValues,columnNames);</span><br><span class="line">		tableModel.addTableModelListener(<span class="keyword">new</span> TableModelListener() &#123;<span class="comment">//为表格添加事件监听器</span></span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">tableChanged</span><span class="params">(TableModelEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(e.getType()==TableModelEvent.UPDATE)&#123;<span class="comment">//是否修改</span></span><br><span class="line">					JOptionPane.showConfirmDialog(getContentPane(), <span class="string">"单击修改按钮"</span>, <span class="string">"信息对话框"</span>, JOptionPane.CANCEL_OPTION);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(e.getType()==TableModelEvent.DELETE)&#123;<span class="comment">//是否修改</span></span><br><span class="line">					JOptionPane.showConfirmDialog(getContentPane(), <span class="string">"单击删除按钮"</span>, <span class="string">"信息对话框"</span>, JOptionPane.CANCEL_OPTION);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		table=<span class="keyword">new</span> JTable(tableModel);<span class="comment">//创建表格</span></span><br><span class="line">		table.setRowSorter(<span class="keyword">new</span> TableRowSorter(tableModel));<span class="comment">//表格排序器</span></span><br><span class="line">		table.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);<span class="comment">//表格选择模式单选</span></span><br><span class="line">		scrollPane.setViewportView(table);<span class="comment">//表格添加到面板视图</span></span><br><span class="line">		<span class="keyword">final</span> JPanel panel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		getContentPane().add(panel,BorderLayout.SOUTH);</span><br><span class="line">		<span class="keyword">final</span> JButton updButton=<span class="keyword">new</span> JButton(<span class="string">"修改"</span>);</span><br><span class="line">		updButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">int</span> selectedRow=table.getSelectedRow();</span><br><span class="line">				<span class="keyword">if</span>(selectedRow!=-<span class="number">1</span>)&#123;</span><br><span class="line">					tableModel.fireTableRowsUpdated(selectedRow, selectedRow);<span class="comment">//通知所有监听器修改了索引位置的数据行</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.add(updButton);</span><br><span class="line">		<span class="keyword">final</span> JButton delButton=<span class="keyword">new</span> JButton(<span class="string">"删除"</span>);</span><br><span class="line">		delButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">int</span> selectedRow=table.getSelectedRow();				</span><br><span class="line">				<span class="keyword">if</span>(selectedRow!=-<span class="number">1</span>)&#123;</span><br><span class="line">					tableModel.fireTableRowsDeleted(selectedRow, selectedRow);<span class="comment">//通知所有监听器修改了索引位置的数据行</span></span><br><span class="line">				&#125;				</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		panel.add(delButton);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		TableModelEventFrame frame=<span class="keyword">new</span> TableModelEventFrame();</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>单击按钮或者直接在表格中改变数据后回车弹出窗口<br><img src="/img/javause/49.png" alt="图片"><br><img src="/img/javause/50.png" alt="图片"></p>
<h2 id="4-_u7CFB_u7EDF_u6258_u76D8"><a href="#4-_u7CFB_u7EDF_u6258_u76D8" class="headerlink" title="4.系统托盘"></a>4.系统托盘</h2><p>系统托盘<br>系统托盘是一个特殊区域，可以驻留程序，被运行在桌面的所有程序共享，系统托盘显示在桌面底部。<br>(1)获取系统托盘<br>java.awt.SystemTray类表示桌面的系统托盘，每个java应用程序在运行时都会分配一个该类实例。<br>SystemTray类常用方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>void add(TrayIcon trayIcon)</td>
<td>将托盘图标添加到系统托盘</td>
</tr>
<tr>
<td>static SystemTray getSystemTray()</td>
<td>获取表示桌面托盘区的系统托盘实例</td>
</tr>
<tr>
<td>TrayIcon[] getTrayIcons()</td>
<td>返回由此应用程序添加到托盘中的所有图标的数组</td>
</tr>
<tr>
<td>Dimension getTrayIconSize()</td>
<td>返回托盘图标在系统托盘中占用的空间大小（像素）</td>
</tr>
<tr>
<td>static boolean isSupported()</td>
<td>返回当前平台是否支持系统托盘</td>
</tr>
<tr>
<td>void remove(TrayIcon trayIcon)</td>
<td>从系统托盘中移除指定的托盘图标</td>
</tr>
</tbody>
</table>
<p>备注:有些平台不支持系统托盘，因此在使用时可以先使用isSupported()判断一下。可以再获取系统托盘getSystemTray()</p>
<p>(2)为系统托盘添加图标<br>系统托盘可以包含一个或者多个托盘图标，需要时add(TrayIcon trayIcon)添加，不需要时remove(TrayIcon trayIcon)移除。<br>托盘图标由TrayIcon类表示，其构造方法：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">TrayIcon</span><span class="params">(Image image)</span></span>                                 <span class="comment">//创建带有指定图像的托盘图标</span></span><br><span class="line"><span class="function"><span class="title">TrayIcon</span><span class="params">(Image image,String tooltip)</span></span>                  <span class="comment">//创建带有指定图像和工具提示文本的托盘图标</span></span><br><span class="line"><span class="function"><span class="title">TrayIcon</span><span class="params">(Image image,String tooltip,PopupMenu popup)</span></span>  <span class="comment">//创建带有指定图像、工具提示文本和弹出菜单的托盘图标</span></span><br></pre></td></tr></table></figure></p>
<p>指定图像：托盘显示的图像<br>工具提示文本：鼠标放置在系统托盘中出现的文字<br>弹出菜单：鼠标右键弹出菜单</p>
<p>(3)添加弹出菜单<br>在托盘中单击鼠标右键时会显示菜单。<br>TrayIcon类的setPopupMenu(PopupMenu popupMenu)方法实现为系统托盘设置弹出式菜单</p>
<p>实例:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> SystemTrayFrame extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">SystemTrayFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setTitle(<span class="string">"使用系统托盘"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">260</span>, <span class="number">180</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);</span><br><span class="line">		<span class="keyword">if</span>(SystemTray.isSupported())&#123;<span class="comment">//是否支持系统托盘</span></span><br><span class="line">			URL url=getClass().getResource(<span class="string">"system.png"</span>);</span><br><span class="line">			ImageIcon icon=<span class="keyword">new</span> ImageIcon(url);</span><br><span class="line">			Image image=icon.getImage();<span class="comment">//获取Image对象</span></span><br><span class="line">			TrayIcon trayIcon=<span class="keyword">new</span> TrayIcon(image);</span><br><span class="line">			trayIcon.setToolTip(<span class="string">"系统托盘"</span>);<span class="comment">//添加工具提示文本</span></span><br><span class="line">			PopupMenu popupMenu=<span class="keyword">new</span> PopupMenu();<span class="comment">//弹出式菜单</span></span><br><span class="line">			MenuItem <span class="built_in">exit</span>=<span class="keyword">new</span> MenuItem(<span class="string">"退出"</span>);<span class="comment">//菜单项</span></span><br><span class="line">			MenuItem show=<span class="keyword">new</span> MenuItem(<span class="string">"显示主窗体"</span>);</span><br><span class="line">			<span class="comment">//添加事件监听器</span></span><br><span class="line">			<span class="built_in">exit</span>.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">					System.<span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">//退出系统</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			show.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line"><span class="comment">//					getContentPane().setVisible(true);//显示窗体  这条语句和下面一条一样的效果</span></span><br><span class="line">					showFrame();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			popupMenu.add(show);<span class="comment">//为弹出菜单添加菜单项</span></span><br><span class="line">			popupMenu.add(<span class="built_in">exit</span>);</span><br><span class="line">			trayIcon.setPopupMenu(popupMenu);<span class="comment">//为托盘图标添加弹出菜单</span></span><br><span class="line">			SystemTray systemTray=SystemTray.getSystemTray();</span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				systemTray.add(trayIcon);<span class="comment">//为系统添加托盘图标</span></span><br><span class="line">			&#125; <span class="keyword">catch</span> (AWTException e1) &#123;</span><br><span class="line">				e1.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showFrame</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		SystemTrayFrame frame=<span class="keyword">new</span> SystemTrayFrame();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/51.png" alt="图片"><br><img src="/img/javause/52.png" alt="图片"></p>
<h2 id="5-_u7EC3_u4E60-1"><a href="#5-_u7EC3_u4E60-1" class="headerlink" title="5.练习"></a>5.练习</h2><p>(1)随意获取文件属性<br>打开文件选择对话框选择任意文件将用户选择文件的属性显示在窗体中。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class OpenTextFileFrame extends JFrame &#123;</span><br><span class="line">	JTextArea ta_showProperty = <span class="keyword">new</span> JTextArea();<span class="comment">//文本域</span></span><br><span class="line">	JTextArea ta_showText =<span class="keyword">new</span> JTextArea();</span><br><span class="line">	<span class="keyword">public</span> OpenTextFileFrame() &#123;</span><br><span class="line">		<span class="comment">//getContentPane().setLayout(null); //取消这行才能显示---不然只有窗体</span></span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">260</span>, <span class="number">200</span>);</span><br><span class="line">		setTitle(<span class="string">"打开文件"</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">final</span> JToolBar toolBar=<span class="keyword">new</span> JToolBar();<span class="comment">//工具栏</span></span><br><span class="line">		getContentPane().<span class="built_in">add</span>(toolBar,BorderLayout.NORTH);</span><br><span class="line">		JButton open_Button=<span class="keyword">new</span> JButton(<span class="string">"打开"</span>);</span><br><span class="line">		open_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				openTextFile();<span class="comment">//调用方法操作文件</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		toolBar.<span class="built_in">add</span>(open_Button);</span><br><span class="line">		</span><br><span class="line">		JButton exit_Button=<span class="keyword">new</span> JButton(<span class="string">"退出"</span>);</span><br><span class="line">		exit_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				<span class="built_in">int</span> n=JOptionPane.showConfirmDialog(getContentPane(), <span class="string">"确认退出吗"</span>,<span class="string">"确认对话框"</span>,JOptionPane.YES_NO_OPTION);</span><br><span class="line">				<span class="keyword">if</span>(JOptionPane.YES_OPTION==n)&#123;</span><br><span class="line">					System.<span class="built_in">exit</span>(<span class="number">0</span>);<span class="comment">//退出系统</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		toolBar.<span class="built_in">add</span>(exit_Button);</span><br><span class="line">		<span class="keyword">final</span> JTabbedPane tabbedPane=<span class="keyword">new</span> JTabbedPane();<span class="comment">//选项卡面板</span></span><br><span class="line">		getContentPane().<span class="built_in">add</span>(tabbedPane,BorderLayout.CENTER);</span><br><span class="line">		<span class="keyword">final</span> JScrollPane scrollPane=<span class="keyword">new</span> JScrollPane();</span><br><span class="line">		tabbedPane.addTab(<span class="string">"文件的属性"</span>,<span class="keyword">null</span>,scrollPane,<span class="keyword">null</span>);<span class="comment">//滚动面板放到选项卡的第一个选项页</span></span><br><span class="line">		scrollPane.setViewportView(ta_showProperty);<span class="comment">//文本域添加到滚动面板视图-----------------注意：不能用add</span></span><br><span class="line">		<span class="keyword">final</span> JScrollPane scrollPane2=<span class="keyword">new</span> JScrollPane();</span><br><span class="line">		tabbedPane.addTab(<span class="string">"文件内容"</span>,<span class="keyword">null</span>,scrollPane2,<span class="keyword">null</span>);<span class="comment">//第二个选项卡</span></span><br><span class="line">		scrollPane2.setViewportView(ta_showText);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> openTextFile()&#123;</span><br><span class="line">		JFileChooser fileChooser=<span class="keyword">new</span> JFileChooser();<span class="comment">//文件选择对话框</span></span><br><span class="line">		<span class="built_in">int</span> returnValue=fileChooser.showOpenDialog(getContentPane());<span class="comment">//打开文件选择对话框</span></span><br><span class="line">		<span class="keyword">if</span>(returnValue==JFileChooser.APPROVE_OPTION)&#123;<span class="comment">//是否选择了文件</span></span><br><span class="line">			File file=fileChooser.getSelectedFile();<span class="comment">//获取文件对象</span></span><br><span class="line">			ta_showProperty.<span class="built_in">append</span>(<span class="string">"文件路径："</span>+file.getAbsolutePath()+<span class="string">"\n"</span>);</span><br><span class="line">			ta_showProperty.<span class="built_in">append</span>(<span class="string">"隐藏文件:"</span>+file.isHidden()+<span class="string">"\n"</span>);</span><br><span class="line">			FileReader reader;<span class="comment">//字符流</span></span><br><span class="line">			<span class="keyword">BufferedReader</span> in;<span class="comment">//字符缓冲流</span></span><br><span class="line">			<span class="keyword">try</span> &#123;</span><br><span class="line">				reader=<span class="keyword">new</span> FileReader(file);<span class="comment">//字符流</span></span><br><span class="line">				in=<span class="keyword">new</span> <span class="keyword">BufferedReader</span>(reader);<span class="comment">//字符缓冲流</span></span><br><span class="line">				<span class="keyword">String</span> info=in.readLine();<span class="comment">//从文件中读取一行信息</span></span><br><span class="line">				<span class="keyword">while</span>(info!=<span class="keyword">null</span>)&#123;</span><br><span class="line">					ta_showText.<span class="built_in">append</span>(info+<span class="string">"\n"</span>);</span><br><span class="line">					info=in.readLine();<span class="comment">//继续读下一行</span></span><br><span class="line">				&#125;</span><br><span class="line">				in.close();</span><br><span class="line">				reader.close();</span><br><span class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">				e.printStackTrace();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		OpenTextFileFrame frame=<span class="keyword">new</span> OpenTextFileFrame();</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>打开txt文件如下:<br><img src="/img/javause/53.png" alt="图片"><br><img src="/img/javause/54.png" alt="图片"></p>
<p>打开图片文件如下:<br><img src="/img/javause/55.png" alt="图片"><br><img src="/img/javause/56.png" alt="图片"></p>
<p>(2)实现浏览图片<br>创建窗体，在窗体上添加”上一张”与”下一张”按钮，实现浏览指定文件夹下的图片。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class BrowsePictureFrame extends JFrame &#123;</span><br><span class="line">	<span class="keyword">public</span> BrowsePictureFrame() &#123;</span><br><span class="line">		setTitle(<span class="string">"浏览图片"</span>);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">300</span>, <span class="number">180</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);</span><br><span class="line">		<span class="keyword">final</span> JSplitPane splitPane=<span class="keyword">new</span> JSplitPane();<span class="comment">//分割面板</span></span><br><span class="line">		getContentPane().<span class="built_in">add</span>(splitPane,BorderLayout.CENTER);</span><br><span class="line">		<span class="keyword">final</span> JPanel buttonPanel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		splitPane.setLeftComponent(buttonPanel);<span class="comment">//放按钮的面板放到分割面板左边</span></span><br><span class="line">		splitPane.setDividerLocation(<span class="number">90</span>);<span class="comment">//设置分割线的位置</span></span><br><span class="line">		<span class="keyword">final</span> JPanel showpictureJPanel=<span class="keyword">new</span> JPanel();</span><br><span class="line">		<span class="keyword">final</span> CardLayout cardLayout=<span class="keyword">new</span> CardLayout();<span class="comment">//创建卡片式布局</span></span><br><span class="line">		showpictureJPanel.setLayout(cardLayout);<span class="comment">//把显示图片的面板设置为卡片式布局</span></span><br><span class="line">		splitPane.setRightComponent(showpictureJPanel);</span><br><span class="line">		<span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">			<span class="keyword">String</span> pictureIndex=<span class="keyword">String</span>.valueOf(i);<span class="comment">//把图片的索引值转换为字符串</span></span><br><span class="line">			<span class="keyword">String</span> pictureName=<span class="keyword">String</span>.valueOf(pictureIndex)+<span class="string">".jpg"</span>;</span><br><span class="line">			URL url=getClass().getResource(pictureName);</span><br><span class="line">			ImageIcon icon=<span class="keyword">new</span> ImageIcon(url);</span><br><span class="line">			showpictureJPanel.<span class="built_in">add</span>(<span class="keyword">new</span> JLabel(icon),pictureIndex);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">final</span> JButton previousButton=<span class="keyword">new</span> JButton();</span><br><span class="line">		previousButton.setText(<span class="string">"上一张"</span>);</span><br><span class="line">		previousButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				cardLayout.previous(showpictureJPanel);<span class="comment">//显示上一张图片</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		buttonPanel.<span class="built_in">add</span>(previousButton);<span class="comment">//按钮添加到左侧面板</span></span><br><span class="line">		<span class="keyword">final</span> JButton nextButton=<span class="keyword">new</span> JButton();<span class="comment">//创建显示下一张图片的按钮</span></span><br><span class="line">		nextButton.setText(<span class="string">"下一张"</span>);</span><br><span class="line">		nextButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent e) &#123;</span><br><span class="line">				cardLayout.next(showpictureJPanel);<span class="comment">//显示下一张图片</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		buttonPanel.<span class="built_in">add</span>(nextButton);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</span><br><span class="line">		BrowsePictureFrame frame=<span class="keyword">new</span> BrowsePictureFrame();</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>按上一张下一张可以实现图片1，2，3，4，5循环.<br><img src="/img/javause/57.png" alt="图片"><br><img src="/img/javause/58.png" alt="图片"></p>
<p>备注：菜单的启动和禁用可以通过JMenuItem类的setEnabled()方法，参数设置false菜单禁用，true菜单启用。</p>
<h1 id="u7B2C_u5341_u4E8C_u7AE0__u7ED8_u56FE_u4E0E_u6253_u5370_u6280_u672F"><a href="#u7B2C_u5341_u4E8C_u7AE0__u7ED8_u56FE_u4E0E_u6253_u5370_u6280_u672F" class="headerlink" title="第十二章 绘图与打印技术"></a>第十二章 绘图与打印技术</h1><p>前面的内容无法在程序界面显示背景图片、无法处理图片、无法实现打印功能等。为了美化java应用程序的界面，可以通过java提供的绘图技术实现。PrintJob可以获得打印对象再调用相应的方法打印。</p>
<h2 id="1-java_u7ED8_u56FE"><a href="#1-java_u7ED8_u56FE" class="headerlink" title="1.java绘图"></a>1.java绘图</h2><p>Java使用Graphics类和Graphics2D类(继承自Graphics 推荐使用，Graphics类的实例可以进行强转)绘制图形。<br>Graphics类常用方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>drawArc(int x,int y,int width,int height,int startAngle,int arcAngle)</td>
<td>弧形</td>
</tr>
<tr>
<td>drawLine(int x1,int y1,int x2,int y2)</td>
<td>直线</td>
</tr>
<tr>
<td>drawOval(int x,int y,int width,int height)</td>
<td>椭圆</td>
</tr>
<tr>
<td>drawPolygon(int[] xPoints,int[] yPoints,int n) //(xn,yn)坐标全部依次连成n点,首尾闭合</td>
<td>多边形</td>
</tr>
<tr>
<td>drawPolyline(int[] xPoints,int[] yPoints,int n) //(xn,yn)坐标全部依次连成 首尾不闭合</td>
<td>多边线</td>
</tr>
<tr>
<td>drawRect(int x,int y,int width,int height)</td>
<td>矩形</td>
</tr>
<tr>
<td>drawRoundRect(int x,int y,int width,int height,int arcWidth,int arcHeight)</td>
<td>圆角矩形</td>
</tr>
<tr>
<td>fillArc(int x,int y,int width,int height,int startAngle,int arcAngle)</td>
<td>实心弧形</td>
</tr>
<tr>
<td>fillOval(int x,int y,int width,int height)</td>
<td>实心椭圆</td>
</tr>
<tr>
<td>fillPolygon(int[] xPoints,int[] yPoints,int n) //(xn,yn)坐标全部依次连成n点,首尾闭合</td>
<td>实心多边形</td>
</tr>
<tr>
<td>fillRect(int x,int y,int width,int height)</td>
<td>实心矩形</td>
</tr>
<tr>
<td>fillRoundRect(int x,int y,int width,int height,int arcWidth,int arcHeight)</td>
<td>实心圆角矩形</td>
</tr>
</tbody>
</table>
<p>Graphics2D类是继承Graphics的，Graphics2D类可以分别使用不同的类来表示不同的形状，如Line2D,Recttangle2D等。<br>绘制指定图形需要先创建并初始化该图形类的对象，这些图形必须是Shape接口的实现类，然后使用Graphics2D类的draw()方法绘制或者使用fill()方法填充。<br>java.awt.geom包提供如下常用的图形类，这些图形类都实现了Shape接口。<br>Arc2D、CubicCurve2D、Ellipse2D、Line2D、Point2D、QuadCurve2D、Rectangle2D、RoundRectangle2D<br>在不同的图形类中有Double和Float两个实现类,以不同的精度构建图形对象，图形太多时建议使用Float类实例绘制，节省空间</p>
<p>实例:绘图<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> DrawGraphics extends JFrame&#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DrawGraphics</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">		<span class="keyword">this</span>.setSize(<span class="number">400</span>, <span class="number">400</span>);<span class="comment">//设置窗体大小</span></span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		setContentPane(<span class="keyword">new</span> DrawPanel());<span class="comment">/////////设置窗体面板为绘图面板对象</span></span><br><span class="line">		<span class="keyword">this</span>.setTitle(<span class="string">"绘制图像"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">class</span> DrawPanel extends JPanel&#123;<span class="comment">//创建用于绘图的内部面板类</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">			super.paint(g);</span><br><span class="line">			g.drawOval(<span class="number">10</span>, <span class="number">20</span>, <span class="number">80</span>, <span class="number">80</span>);</span><br><span class="line">			g.drawRect(<span class="number">100</span>, <span class="number">20</span>, <span class="number">80</span>, <span class="number">80</span>);</span><br><span class="line">			g.drawLine(<span class="number">10</span>, <span class="number">120</span>, <span class="number">380</span>, <span class="number">120</span>);</span><br><span class="line">			</span><br><span class="line">			Graphics2D g2=(Graphics2D) g;</span><br><span class="line"><span class="comment">//			g2.drawRoundRect(190, 20, 80, 60, 20, 10);</span></span><br><span class="line">			Rectangle2D rect1=<span class="keyword">new</span> Rectangle2D.Double(<span class="number">190</span>, <span class="number">20</span>, <span class="number">80</span>, <span class="number">60</span>);<span class="comment">//创建矩形对象</span></span><br><span class="line">			g2.draw(rect1);<span class="comment">//绘制无填充的矩形对象</span></span><br><span class="line">			Rectangle2D rect2=<span class="keyword">new</span> Rectangle2D.Double(<span class="number">280</span>, <span class="number">20</span>, <span class="number">80</span>, <span class="number">60</span>);<span class="comment">//创建矩形对象</span></span><br><span class="line">			g2.fill(rect2);<span class="comment">//绘制填充的矩形对象	</span></span><br><span class="line">			</span><br><span class="line"><span class="comment">//java.awt.Shape接口提供了表示一些几何形状对象的定义，其主要实现类有Ellipse2D.Double（椭圆）、Line2D.Double（直线）、Rectangle2D.Double（矩形）、</span></span><br><span class="line"><span class="comment">//			RoundRectangle2D.Double（带圆角的矩形）和Arc2D.Double（孤形）等。</span></span><br><span class="line">			Shape[] shapes=<span class="keyword">new</span> Shape[<span class="number">4</span>];<span class="comment">//声明图形数组</span></span><br><span class="line">			shapes[<span class="number">0</span>]=<span class="keyword">new</span> Rectangle2D.Double(<span class="number">25</span>,<span class="number">165</span>,<span class="number">70</span>,<span class="number">70</span>);<span class="comment">//矩形</span></span><br><span class="line">			shapes[<span class="number">1</span>]=<span class="keyword">new</span> Rectangle2D.Double(<span class="number">130</span>,<span class="number">150</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">			shapes[<span class="number">2</span>]=<span class="keyword">new</span> Ellipse2D.Double(<span class="number">130</span>,<span class="number">150</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">			shapes[<span class="number">3</span>]=<span class="keyword">new</span> Ellipse2D.Double(<span class="number">10</span>,<span class="number">150</span>,<span class="number">100</span>,<span class="number">100</span>);</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shapes.length; i++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">					g2.fill(shapes[i]);</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">					g2.draw(shapes[i]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">new</span> DrawGraphics().setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/59.png" alt="图片"></p>
<h2 id="2-_u7ED8_u56FE_u989C_u8272_u4E0E_u7B14_u753B_u5C5E_u6027"><a href="#2-_u7ED8_u56FE_u989C_u8272_u4E0E_u7B14_u753B_u5C5E_u6027" class="headerlink" title="2.绘图颜色与笔画属性"></a>2.绘图颜色与笔画属性</h2><p>Color类对颜色属性进行管理,java2D的Graphics2D类的setStroke()方法可以指定笔画属性(线的粗细、虚实、线段端点的形状、风格等)<br>Color对象构造方法:<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Color<span class="comment">(int r,int g,int b)</span>       <span class="comment">//使用RGB值创建颜色对象的构造方法</span></span><br><span class="line">Color<span class="comment">(int rgb)</span>                 <span class="comment">//使用RGB 3原色的总和创建颜色对象</span></span><br><span class="line">用法:</span><br><span class="line">Graphics<span class="number">2</span>D <span class="keyword">g2</span>=<span class="comment">(Graphics2D)</span>g;</span><br><span class="line"><span class="keyword">g2.</span>setColor<span class="comment">(Color.BLUE)</span>;</span><br></pre></td></tr></table></figure></p>
<p>常用Color常量:</p>
<table>
<thead>
<tr>
<th>常量名</th>
<th>颜色值</th>
<th>使用方法</th>
</tr>
</thead>
<tbody>
<tr>
<td>BLACK</td>
<td>黑色</td>
<td>Color.BLAC</td>
</tr>
<tr>
<td>WHITE</td>
<td>白色</td>
<td>Color.WHITE</td>
</tr>
<tr>
<td>GRAY</td>
<td>灰色</td>
<td>Color.GRAY</td>
</tr>
<tr>
<td>GREEN</td>
<td>绿色</td>
<td>Color.GREEN</td>
</tr>
<tr>
<td>LIGHT_GRAY</td>
<td>浅灰色</td>
<td>Color.LIGHT_GRAY</td>
</tr>
<tr>
<td>CYAN</td>
<td>青色</td>
<td>Color.CYAN</td>
</tr>
<tr>
<td>MAGENTA</td>
<td>洋红色</td>
<td>Color.MAGENTA</td>
</tr>
<tr>
<td>ORANGE</td>
<td>橘黄色</td>
<td>Color.ORANGE</td>
</tr>
<tr>
<td>BLUE</td>
<td>蓝色</td>
<td>Color.BLUE</td>
</tr>
<tr>
<td>PINK</td>
<td>粉红色</td>
<td>Color.PINK</td>
</tr>
<tr>
<td>DARK_GRAY</td>
<td>深灰色</td>
<td>Color.DARK_GRAY</td>
</tr>
<tr>
<td>RED</td>
<td>红色</td>
<td>Color.RED</td>
</tr>
<tr>
<td>YELLOW</td>
<td>黄色</td>
<td>Color.YELLOW</td>
</tr>
</tbody>
</table>
<p>Graphics绘图默认使用笔画属性为粗细为1个像素的正方形，Graphics2D可调用setStroke(Stroke stroke)方法设置笔画属性。<br>java.awt.BasicStroke类实现了Stroke接口，其构造方法如下：<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BasicStroke()</span><br><span class="line">BasicStroke(<span class="built_in">float</span> <span class="variable">width</span>,<span class="built_in">int</span> cap)</span><br><span class="line">BasicStroke(<span class="built_in">float</span> <span class="variable">width</span>,<span class="built_in">int</span> cap,<span class="built_in">int</span> <span class="built_in">join</span>)</span><br><span class="line">BasicStroke(<span class="built_in">float</span> <span class="variable">width</span>,<span class="built_in">int</span> cap,<span class="built_in">int</span> <span class="built_in">join</span>,<span class="built_in">float</span> miterlimit)</span><br><span class="line">BasicStroke(<span class="built_in">float</span> <span class="variable">width</span>,<span class="built_in">int</span> cap,<span class="built_in">int</span> <span class="built_in">join</span>,<span class="built_in">float</span> miterlimit,<span class="built_in">float</span>[] dash,<span class="built_in">float</span> dash_phase)</span><br></pre></td></tr></table></figure></p>
<p>参数说明:</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>width</td>
<td>笔画宽度，此宽度必须大于或者等于0.0f(0.0f时将设置为当前设备默认宽度)</td>
</tr>
<tr>
<td>cap</td>
<td>线端点的装饰  可选值:CAP_BUIT,CAP_ROUND,CAP_SQUARE</td>
</tr>
<tr>
<td>join</td>
<td>应用在路径线段交汇处的装饰  可选值:JOIN_BEVEL,JOIN_MITER,JOIN_ROUND</td>
</tr>
<tr>
<td>miterlimit</td>
<td>斜接处的剪切限制，该参数必须大于等于1.0f</td>
</tr>
<tr>
<td>dash</td>
<td>表示虚线模式的数组</td>
</tr>
<tr>
<td>dash_phase</td>
<td>开始虚线模式的偏移量</td>
</tr>
</tbody>
</table>
<h2 id="3-_u7ED8_u5236_u6587_u672C"><a href="#3-_u7ED8_u5236_u6587_u672C" class="headerlink" title="3.绘制文本"></a>3.绘制文本</h2><p>Graphics2D类的drawString()在图像上绘制文本内容。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drawString(<span class="keyword">String</span> <span class="built_in">str</span>,<span class="built_in">int</span> x,<span class="built_in">int</span> y)    <span class="comment">//str:绘制的文本字符串，x:水平起始位置  y：垂直起始位置</span></span><br><span class="line">drawString(<span class="keyword">String</span> <span class="built_in">str</span>,<span class="built_in">float</span> x,<span class="built_in">float</span> y)</span><br></pre></td></tr></table></figure></p>
<p>java.awt.Font类封装了字体名称、字号、样式等属性，构造方法如下:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">Font</span><span class="params">( String name,int style,int size)</span></span><span class="comment">//name:字体名称  style:字体样式（PLAIN-普通 BOLD-粗体 ITALIC-斜体） size:字体大小</span></span><br><span class="line">用法:</span><br><span class="line"><span class="function"><span class="title">setFont</span><span class="params">(Font font)</span></span></span><br></pre></td></tr></table></figure></p>
<p>实例:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> DrawString extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DrawString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.setSize(<span class="number">260</span>,<span class="number">180</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		add(<span class="keyword">new</span> CanvasPanel());</span><br><span class="line">		<span class="keyword">this</span>.setTitle(<span class="string">"绘制文本信息"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">class</span> CanvasPanel extends Canvas&#123;<span class="comment">//继承Canvas类成为画布类</span></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">			super.paint(g);</span><br><span class="line">			Graphics2D g2=(Graphics2D) g;</span><br><span class="line">			g2.setColor(Color.BLUE);</span><br><span class="line">			Font font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.BOLD, <span class="number">24</span>);</span><br><span class="line">			g2.setFont(font);</span><br><span class="line">			g2.drawString(<span class="string">"静夜思"</span>, <span class="number">80</span>, <span class="number">40</span>);</span><br><span class="line">			font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.BOLD|Font.ITALIC,<span class="number">18</span>);</span><br><span class="line">			g2.setFont(font);</span><br><span class="line">			g2.drawString(<span class="string">"李白"</span>, <span class="number">130</span>, <span class="number">70</span>);</span><br><span class="line">			font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.PLAIN, <span class="number">14</span>);</span><br><span class="line">			g2.setFont(font);</span><br><span class="line">			g2.drawString(<span class="string">"床前明月光，"</span>, <span class="number">40</span>, <span class="number">100</span>);</span><br><span class="line">			g2.drawString(<span class="string">"疑是地上霜。"</span>, <span class="number">120</span>, <span class="number">100</span>);</span><br><span class="line">			g2.drawString(<span class="string">"举头望明月，"</span>, <span class="number">40</span>, <span class="number">120</span>);</span><br><span class="line">			g2.drawString(<span class="string">"低头思故乡。"</span>, <span class="number">120</span>, <span class="number">120</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		DrawString frame=<span class="keyword">new</span> DrawString();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/60.png" alt="图片"></p>
<h2 id="4-_u7ED8_u5236_u56FE_u50CF"><a href="#4-_u7ED8_u5236_u56FE_u50CF" class="headerlink" title="4.绘制图像"></a>4.绘制图像</h2><p>(1)绘制图像<br>绘图类不仅可以绘制图形和文本，还可以使用Graphics2D类的drawImage()方法将图片资源绘制到绘图上下文中，而且可以实现图片的缩放、翻转、倾斜、旋转等效果。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">drawImage</span><span class="params">(Image img,int x,int y,ImageObserver observer)</span></span><span class="comment">//在x,y指定位置上将图像对象img指定的图片绘制到上下文 observer：要通知的图像观察者</span></span><br></pre></td></tr></table></figure></p>
<p>实例：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">DrawImageFrame</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">JFrame</span> &#123;</span></span><br><span class="line">	<span class="keyword">private</span> <span class="type">Image</span> img=<span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">JPanel</span> panel=<span class="literal">null</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="type">Canvas</span> canvas=<span class="literal">null</span>;<span class="comment">//画布</span></span><br><span class="line">	public <span class="type">DrawImageFrame</span>() &#123;</span><br><span class="line">		<span class="type">URL</span> imgurl=getClass().getResource(<span class="string">"/img/img.jpg"</span>);<span class="comment">//图片放src下的img文件夹中</span></span><br><span class="line">		img=<span class="type">Toolkit</span>.getDefaultToolkit().getImage(imgurl);<span class="comment">//获取图片资源</span></span><br><span class="line">		canvas=<span class="keyword">new</span> <span class="type">CanvasPanel</span>();</span><br><span class="line">		setBounds(<span class="number">200</span>, <span class="number">160</span>,<span class="number">460</span>, <span class="number">300</span>);</span><br><span class="line">		setContentPane(getContPanel());</span><br><span class="line">		setDefaultCloseOperation(<span class="type">JFrame</span>.<span class="type">EXIT_ON_CLOSE</span>);</span><br><span class="line">		setTitle(<span class="string">"绘制图片"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">private</span> <span class="type">JPanel</span> getContPanel()&#123;</span><br><span class="line">		<span class="keyword">if</span>(panel==<span class="literal">null</span>)&#123;</span><br><span class="line">			panel=<span class="keyword">new</span> <span class="type">JPanel</span>();</span><br><span class="line">			panel.setLayout(<span class="keyword">new</span> <span class="type">BorderLayout</span>());</span><br><span class="line">			panel.add(canvas,<span class="type">BorderLayout</span>.<span class="type">CENTER</span>);</span><br><span class="line">			panel.repaint();<span class="comment">/////////////////////////重绘component的方法  component中己有的图形发生变化后不会立刻显示，须使用repaint方法。</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> panel;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">CanvasPanel</span> <span class="keyword"><span class="keyword">extends</span></span> <span class="title">Canvas</span>&#123;</span></span><br><span class="line">		public void paint(<span class="type">Graphics</span> g) &#123;</span><br><span class="line">			<span class="keyword">super</span>.paint(g);</span><br><span class="line">			g.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	public static void main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="keyword">new</span> <span class="type">DrawImageFrame</span>().setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/61.png" alt="图片"></p>
<p>(2)翻转特效<br>翻转使用Graphics2D类的另一个drawImage()方法<br>采用源矩形到目标矩形坐标的映射实现翻转<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">drawImage(Image img,<span class="keyword">int</span> dx1,<span class="keyword">int</span> dy1,<span class="keyword">int</span> dx2,<span class="keyword">int</span> dy2,<span class="keyword">int</span> sx1,<span class="keyword">int</span> sy1,<span class="keyword">int</span> sx2,<span class="keyword">int</span> sy2,ImageObserver observer)</span><br><span class="line"></span><br><span class="line">dx1,dy1,dx2,dy2分别为目标矩形的第<span class="number">1</span>,<span class="number">2</span>个x,y位置；sx1,sy1,sx2,sy2分别为源矩形矩形的第<span class="number">1</span>,<span class="number">2</span>个x,y位置</span><br></pre></td></tr></table></figure></p>
<p>实例:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> DrawImageFrame extends JFrame &#123;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> dx1,dy1,dx2,dy2;<span class="comment">//目标矩形位置</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> sx1,sy1,sx2,sy2;<span class="comment">//源矩形位置</span></span><br><span class="line">	<span class="keyword">private</span> JPanel jPanel1=null;</span><br><span class="line">	<span class="keyword">private</span> JPanel jPanel2=null;</span><br><span class="line">	<span class="keyword">private</span> JButton button1=null;</span><br><span class="line">	<span class="keyword">private</span> JButton button2=null;</span><br><span class="line">	<span class="keyword">private</span> Image img=null;</span><br><span class="line">	<span class="keyword">private</span> MyCanvas canvasPanel=<span class="keyword">new</span> MyCanvas();</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DrawImageFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		dx2=sx2=<span class="number">650</span>;</span><br><span class="line">		dy2=sy2=<span class="number">650</span>;</span><br><span class="line">		URL imgURL=getClass().getResource(<span class="string">"/img/img.jpg"</span>);</span><br><span class="line">		img=Toolkit.getDefaultToolkit().getImage(imgURL);</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">700</span>, <span class="number">700</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		setTitle(<span class="string">"图片翻转"</span>);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(button1==null)&#123;<span class="comment">//水平按钮</span></span><br><span class="line">			button1=<span class="keyword">new</span> JButton();</span><br><span class="line">			button1.setText(<span class="string">"水平翻转"</span>);</span><br><span class="line">			button1.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">					sx1=Math.<span class="built_in">abs</span>(sx1-<span class="number">650</span>);<span class="comment">//水平翻转==水平方向坐标减去初始大小</span></span><br><span class="line">					sx2=Math.<span class="built_in">abs</span>(sx1-<span class="number">650</span>);</span><br><span class="line">					canvasPanel.repaint();<span class="comment">///////////////</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(button2==null)&#123;<span class="comment">//垂直按钮</span></span><br><span class="line">			button2=<span class="keyword">new</span> JButton();</span><br><span class="line">			button2.setText(<span class="string">"垂直翻转"</span>);</span><br><span class="line">			button2.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">					sy1=Math.<span class="built_in">abs</span>(sy1-<span class="number">650</span>);<span class="comment">//垂直翻转==垂直方向坐标减去初始大小</span></span><br><span class="line">					sy2=Math.<span class="built_in">abs</span>(sy1-<span class="number">650</span>);</span><br><span class="line">					canvasPanel.repaint();<span class="comment">///////////////</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(jPanel2==null)&#123;<span class="comment">//按钮控制面板</span></span><br><span class="line">			GridBagConstraints gridBagConstraints=<span class="keyword">new</span> GridBagConstraints();</span><br><span class="line">			gridBagConstraints.gridx=<span class="number">1</span>;</span><br><span class="line">			gridBagConstraints.gridy=<span class="number">0</span>;</span><br><span class="line">			jPanel2=<span class="keyword">new</span> JPanel();</span><br><span class="line">			jPanel2.setLayout(<span class="keyword">new</span> GridBagLayout());</span><br><span class="line">			jPanel2.add(button1,<span class="keyword">new</span> GridBagConstraints());</span><br><span class="line">			jPanel2.add(button2,gridBagConstraints);</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(jPanel1==null)&#123;<span class="comment">//内容面板</span></span><br><span class="line">			jPanel1=<span class="keyword">new</span> JPanel();</span><br><span class="line">			jPanel1.setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">			jPanel1.add(jPanel2,BorderLayout.SOUTH);</span><br><span class="line">			jPanel1.add(canvasPanel,BorderLayout.CENTER);</span><br><span class="line">		&#125;</span><br><span class="line">		setContentPane(jPanel1);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">class</span> MyCanvas extends JPanel&#123;</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">			super.paint(g);</span><br><span class="line">			g.drawImage(img, dx1, dy1, dx2, dy2, sx1, sy1, sx2, sy2, <span class="keyword">this</span>);<span class="comment">//绘制图片</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> DrawImageFrame().setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>原图:<br><img src="/img/javause/62.png" alt="图片"><br>水平翻转:<br><img src="/img/javause/63.png" alt="图片"><br>垂直翻转:<br><img src="/img/javause/64.png" alt="图片"></p>
<p>(3)放大缩小<br>Graphics2D的drawImage()方法如下:<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drawImage(Image img,<span class="built_in">int</span> x,<span class="built_in">int</span> y,<span class="built_in">int</span> <span class="variable">width</span>,<span class="built_in">int</span> <span class="variable">height</span>,ImageObserver observer)<span class="comment">//显示在x,y位置，并指定宽高</span></span><br></pre></td></tr></table></figure></p>
<p>实例:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> ImageScaleFrame extends JFrame &#123;</span><br><span class="line">	<span class="keyword">private</span> Image img=null;</span><br><span class="line">	<span class="keyword">private</span> JPanel contentJPanel=<span class="keyword">new</span> JPanel();</span><br><span class="line">	<span class="keyword">private</span> JSlider jSlider=<span class="keyword">new</span> JSlider();<span class="comment">//滑块</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> imgWidth,imgHeight;</span><br><span class="line">	<span class="keyword">private</span> Canvas canvas=<span class="keyword">new</span> MyCanvas();<span class="comment">//画板</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ImageScaleFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		setTitle(<span class="string">"放大缩小图片"</span>);</span><br><span class="line">		URL imgUrl=getClass().getResource(<span class="string">"/img/img2.jpg"</span>);</span><br><span class="line">		img=Toolkit.getDefaultToolkit().getImage(imgUrl);<span class="comment">//获得图片资源</span></span><br><span class="line">		setContentPane(contentJPanel);<span class="comment">//设置面板内容</span></span><br><span class="line">		</span><br><span class="line">		contentJPanel.setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">		contentJPanel.add(jSlider, BorderLayout.SOUTH);</span><br><span class="line">		contentJPanel.add(canvas, BorderLayout.CENTER);</span><br><span class="line">		</span><br><span class="line">		jSlider.setMaximum(<span class="number">1000</span>);</span><br><span class="line">		jSlider.setValue(<span class="number">100</span>);</span><br><span class="line">		jSlider.setMinimum(<span class="number">1</span>);</span><br><span class="line">		jSlider.addChangeListener(<span class="keyword">new</span> ChangeListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">stateChanged</span><span class="params">(ChangeEvent e)</span> </span>&#123;</span><br><span class="line">				canvas.repaint();<span class="comment">//改变后重新画</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">class</span> MyCanvas extends Canvas&#123;</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">			super.paint(g);</span><br><span class="line">			<span class="keyword">int</span> newW=<span class="number">0</span>,newH=<span class="number">0</span>;</span><br><span class="line">			imgWidth=img.getWidth(<span class="keyword">this</span>);</span><br><span class="line">			imgHeight=img.getHeight(<span class="keyword">this</span>);</span><br><span class="line">			<span class="keyword">float</span> value=jSlider.getValue();<span class="comment">//滑块组件的取值</span></span><br><span class="line">			newW=(<span class="keyword">int</span>) (imgWidth*value/<span class="number">100</span>);<span class="comment">//图片缩放后大小</span></span><br><span class="line">			newH=(<span class="keyword">int</span>) (imgHeight*value/<span class="number">100</span>);</span><br><span class="line">			g.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, newW, newH, <span class="keyword">this</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">new</span> ImageScaleFrame().setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/65.png" alt="图片"><br><img src="/img/javause/66.png" alt="图片"></p>
<p>(4)倾斜<br>Graphics2D提供的shear()方法绘制图像的倾斜特效。<br><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">shear</span>(<span class="value">double</span> shx,<span class="value">double</span> shy)  <span class="comment">//shx、shy分别为水平垂直方向倾斜量</span></span><br></pre></td></tr></table></figure></p>
<p>将放大缩小实例部分代码修改如下:<br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="constant">Graphics2D</span> g2=(<span class="constant">Graphics2D</span>) g;</span><br><span class="line">g2.shear(<span class="number">0.5</span>, <span class="number">0</span>);<span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">//</span><span class="regexp">/倾斜</span><br><span class="line">g2.drawImage(img, 0, 0, newW, newH, this);</span></span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/67.png" alt="图片"></p>
<p>(5)旋转<br>Graphics2D类的rotate(double rotate)方法指定图像旋转的弧度进行旋转。<br>将放大缩小实例部分代码修改如下:<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Graphics<span class="number">2</span>D <span class="keyword">g2</span>=<span class="comment">(Graphics2D)</span> g;</span><br><span class="line"><span class="keyword">g2.</span>rotate<span class="comment">(Math.toRadians(10)</span>);<span class="comment">//图片旋转10度         Math.toRadians将角度转化为弧度</span></span><br><span class="line"><span class="keyword">g2.</span>drawImage<span class="comment">(img, 0, 0, newW, newH, this)</span>;</span><br><span class="line"><span class="keyword">g2.</span>rotate<span class="comment">(Math.toRadians(10)</span>);<span class="comment">//图片旋转10度</span></span><br><span class="line"><span class="keyword">g2.</span>drawImage<span class="comment">(img, 0, 0, newW, newH, this)</span>;</span><br><span class="line"><span class="keyword">g2.</span>rotate<span class="comment">(Math.toRadians(10)</span>);<span class="comment">//图片旋转10度</span></span><br><span class="line"><span class="keyword">g2.</span>drawImage<span class="comment">(img, 0, 0, newW, newH, this)</span>;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/68.png" alt="图片"></p>
<h2 id="5-_u6253_u5370"><a href="#5-_u6253_u5370" class="headerlink" title="5.打印"></a>5.打印</h2><p>(1)打印控制类<br>PrinterJob类是进行打印控制的主要类。PrinterJob类使用单例模式，用getPrinterJob获得唯一实例，之后再次调用该方法将直接返回该对象的引用。<br>获取PrinterJob对象:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PrinterJob job=PrinterJob.getPrinterJob()<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<p>设置打印页面:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">job.<span class="function"><span class="title">setPrinterable</span><span class="params">(Printerable painter)</span></span><span class="comment">//painter:接口Printerable实现类的实例对象</span></span><br></pre></td></tr></table></figure></p>
<p>设置获取打印任务名称:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">job.<span class="function"><span class="title">setJobName</span><span class="params">(String jobName)</span></span></span><br><span class="line">String printName=job.<span class="function"><span class="title">getJobName</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure></p>
<p>获取打印状态：<br>用户可以控制取消下一次打印作业<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">boolean cancel=job.<span class="function"><span class="title">isCancelled</span><span class="params">()</span></span>  <span class="comment">//打印被取消时返回true,否则返回false</span></span><br></pre></td></tr></table></figure></p>
<p>(2)打印对话框<br>用户可以使用打印对话框对打印任务进行设置，如打印纸张的大小、是否彩色、打印方向、打印份数等。<br>PrinterJob类的printDialog()方法将打开”打印”对话框。<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">boolean</span> ok=job.printDialog()        //用户点击打印框<span class="string">"确定"</span>返回<span class="built_in">true</span>,单击取消返回<span class="string">"false"</span></span><br></pre></td></tr></table></figure></p>
<p>(3)打印页面<br>打印页面是打印任务要执行打印的内容如文本、图片、网页和图形等。<br>打印需要实现java.awt.print.Printable接口。该接口有一个方法如下：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">print(Graphics graphics,PageFormat pageFormat,<span class="typename">int</span> pageInddex)     <span class="comment">//返回值可选：PAGE_EXISTS:页面可以打印  NO_SUCH_PAGE:页面不能打印</span></span><br><span class="line"><span class="string">graphics:</span>绘制打印页面的图形上下文</span><br><span class="line"><span class="string">pageFormat:</span>绘制打印页面的格式属性，如方向大小等</span><br><span class="line"><span class="string">pageInddex:</span>当前打印页的索引</span><br></pre></td></tr></table></figure></p>
<p>可打印区域：纸张除被打印机夹住区域剩余的部分<br>打印设置对话框可以设置打印区域大小，可以使用pageFormat参数设置打印区域的宽度、高度、打印区域的起始位置坐标。<br>PageFormat类常用方法:</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>getWidth()</td>
<td>获取打印页面的宽度</td>
</tr>
<tr>
<td>getHeight()</td>
<td>获取打印页面的高度</td>
</tr>
<tr>
<td>getImageableWidth()</td>
<td>获取可打印区域的宽度</td>
</tr>
<tr>
<td>getImageableHeight()</td>
<td>获取可打印区域的高度</td>
</tr>
<tr>
<td>getImageableX()</td>
<td>获取可打印区域左上方起始坐标x轴的位置</td>
</tr>
<tr>
<td>getImageableY()</td>
<td>获取可打印区域左上方起始坐标x轴的位置</td>
</tr>
</tbody>
</table>
<p>实例：打印《静夜思》<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> PrintDemo extends JFrame &#123;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		PrinterJob job=PrinterJob.getPrinterJob();<span class="comment">//获取打印对象</span></span><br><span class="line">		<span class="keyword">if</span>(!job.printDialog())<span class="comment">//打开打印对话框</span></span><br><span class="line">			<span class="keyword">return</span>;</span><br><span class="line">		job.setPrintable(<span class="keyword">new</span> Printable() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">print</span><span class="params">(Graphics graphics, PageFormat pageFormat, <span class="keyword">int</span> pageIndex)</span></span><br><span class="line">					throws PrinterException </span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(pageIndex&gt;<span class="number">0</span>)<span class="comment">//////////////////当前打印页索引大于0时不能打印</span></span><br><span class="line">					<span class="keyword">return</span> Printable.NO_SUCH_PAGE;</span><br><span class="line">				<span class="keyword">int</span> x=(<span class="keyword">int</span>) pageFormat.getImageableX();</span><br><span class="line">				<span class="keyword">int</span> y=(<span class="keyword">int</span>) pageFormat.getImageableY();</span><br><span class="line">				Graphics2D  g2=(Graphics2D) graphics;</span><br><span class="line">				g2.setColor(Color.BLUE);</span><br><span class="line">				Font font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.BOLD, <span class="number">24</span>);</span><br><span class="line">				g2.setFont(font);</span><br><span class="line">				g2.drawString(<span class="string">"静夜思"</span>, <span class="number">80</span>, <span class="number">40</span>);</span><br><span class="line">				font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,Font.BOLD|Font.ITALIC,<span class="number">18</span>);</span><br><span class="line">				g2.setFont(font);</span><br><span class="line">				g2.drawString(<span class="string">"李白"</span>, <span class="number">130</span>, <span class="number">70</span>);</span><br><span class="line">				font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>, Font.PLAIN, <span class="number">14</span>);</span><br><span class="line">				g2.setFont(font);</span><br><span class="line">				g2.drawString(<span class="string">"床前明月光，"</span>, <span class="number">40</span>, <span class="number">100</span>);</span><br><span class="line">				g2.drawString(<span class="string">"疑是地上霜。"</span>, <span class="number">120</span>, <span class="number">100</span>);</span><br><span class="line">				g2.drawString(<span class="string">"举头望明月，"</span>, <span class="number">40</span>, <span class="number">120</span>);</span><br><span class="line">				g2.drawString(<span class="string">"低头思故乡。"</span>, <span class="number">120</span>, <span class="number">120</span>);</span><br><span class="line">				<span class="keyword">return</span> Printable.PAGE_EXISTS;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		job.setJobName(<span class="string">"打印唐诗"</span>);</span><br><span class="line">		<span class="keyword">try</span> &#123;</span><br><span class="line">			job.print();<span class="comment">////////////////////打印</span></span><br><span class="line">		&#125; <span class="keyword">catch</span> (PrinterException e) &#123;</span><br><span class="line">			e.printStackTrace();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行效果:<br><img src="/img/javause/69.png" alt="图片"><br>打印效果:<br><img src="/img/javause/70.png" alt="图片"></p>
<h2 id="6-_u7EC3_u4E60-1"><a href="#6-_u7EC3_u4E60-1" class="headerlink" title="6.练习"></a>6.练习</h2><p>(1)简单画图程序<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//画布类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> DrawPictureCanvas extends Canvas&#123;</span><br><span class="line">	<span class="keyword">private</span> Image image=null;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DrawPictureCanvas</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		super();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setImage</span><span class="params">(Image image)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.image = image;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">paint</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">		g.drawImage(image, <span class="number">0</span>, <span class="number">0</span>, null);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">		paint(g);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> DrawPictureFrame extends JFrame &#123;</span><br><span class="line">	BufferedImage image=<span class="keyword">new</span> BufferedImage(<span class="number">570</span>, <span class="number">390</span>, BufferedImage.TYPE_INT_BGR);<span class="comment">//创建图像对象</span></span><br><span class="line">	Graphics gs=image.getGraphics();<span class="comment">//获得图像的上下文对象</span></span><br><span class="line">	Graphics2D g=(Graphics2D) gs;</span><br><span class="line">	DrawPictureCanvas canvas=<span class="keyword">new</span> DrawPictureCanvas();<span class="comment">//创建画布</span></span><br><span class="line">	Color foreColor=Color.BLUE;<span class="comment">//定义前颜色</span></span><br><span class="line">	Color backgroundColor=Color.WHITE;<span class="comment">//定义背景颜色</span></span><br><span class="line">	boolean rubber=<span class="literal">false</span>;<span class="comment">//橡皮擦标识变量</span></span><br><span class="line">	<span class="keyword">int</span> x=-<span class="number">1</span>,y=-<span class="number">1</span>;<span class="comment">//上一次鼠标绘制点的横纵坐标</span></span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">DrawPictureFrame</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setBounds(<span class="number">100</span>, <span class="number">100</span>, <span class="number">570</span>, <span class="number">390</span>);</span><br><span class="line">		g.setColor(backgroundColor);<span class="comment">//用背景颜色设置绘图上下文对象的颜色</span></span><br><span class="line">		g.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">570</span>, <span class="number">390</span>);<span class="comment">//用背景颜色填充整个画布</span></span><br><span class="line">		g.setColor(foreColor);<span class="comment">//用前景颜色设置绘图上下文对象的颜色</span></span><br><span class="line">		canvas.setImage(image);</span><br><span class="line">		canvas.setBounds(<span class="number">20</span>, <span class="number">20</span>, <span class="number">550</span>, <span class="number">370</span>);</span><br><span class="line">		getContentPane().add(canvas);<span class="comment">//添加画布到窗体</span></span><br><span class="line">		</span><br><span class="line"><span class="comment">//		工具栏</span></span><br><span class="line">		JToolBar toolBar=<span class="keyword">new</span> JToolBar();</span><br><span class="line">		toolBar.setFloatable(<span class="literal">true</span>);<span class="comment">//可以移动</span></span><br><span class="line">		getContentPane().add(toolBar,BorderLayout.NORTH);<span class="comment">//添加到窗体</span></span><br><span class="line">		JButton line0_Button=<span class="keyword">new</span> JButton(<span class="string">"细线"</span>);</span><br><span class="line">		toolBar.add(line0_Button);</span><br><span class="line">		JButton line1_Button=<span class="keyword">new</span> JButton(<span class="string">"粗线"</span>);</span><br><span class="line">		toolBar.add(line1_Button);</span><br><span class="line">		JButton line2_Button=<span class="keyword">new</span> JButton(<span class="string">"较粗"</span>);</span><br><span class="line">		toolBar.add(line2_Button);</span><br><span class="line">		JButton background_Button=<span class="keyword">new</span> JButton(<span class="string">"背景颜色"</span>);</span><br><span class="line">		toolBar.add(background_Button);</span><br><span class="line">		JButton fore_Button=<span class="keyword">new</span> JButton(<span class="string">"前景颜色"</span>);</span><br><span class="line">		toolBar.add(fore_Button);</span><br><span class="line">		JButton clear_Button=<span class="keyword">new</span> JButton(<span class="string">"清除"</span>);</span><br><span class="line">		toolBar.add(clear_Button);</span><br><span class="line">		final JButton rubber_Button=<span class="keyword">new</span> JButton(<span class="string">"橡皮"</span>);</span><br><span class="line">		toolBar.add(rubber_Button);</span><br><span class="line">		JButton exit_Button=<span class="keyword">new</span> JButton(<span class="string">"退出"</span>);</span><br><span class="line">		toolBar.add(exit_Button);</span><br><span class="line">		</span><br><span class="line"><span class="comment">//为画布添加鼠标拖动事件,在画布上画画</span></span><br><span class="line">		canvas.addMouseListener(<span class="keyword">new</span> MouseAdapter() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseReleased</span><span class="params">(MouseEvent e)</span> </span>&#123;<span class="comment">//鼠标释放事件		</span></span><br><span class="line">				x=-<span class="number">1</span>;<span class="comment">//上一次鼠标绘制点的横坐标</span></span><br><span class="line">				y=-<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		canvas.addMouseMotionListener(<span class="keyword">new</span> MouseMotionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseMoved</span><span class="params">(MouseEvent e)</span> </span>&#123;<span class="comment">//设置鼠标形状</span></span><br><span class="line">				<span class="keyword">if</span>(rubber)&#123;</span><br><span class="line">					setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					setCursor(Cursor.getPredefinedCursor(Cursor.CROSSHAIR_CURSOR));</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">mouseDragged</span><span class="params">(MouseEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(rubber)&#123;</span><br><span class="line">					<span class="keyword">if</span>(x&gt;<span class="number">0</span>&amp;&amp;y&gt;<span class="number">0</span>)&#123;</span><br><span class="line">						g.setColor(backgroundColor);<span class="comment">//背景色绘制内容----擦除</span></span><br><span class="line">						g.fillRect(x, y, <span class="number">10</span>, <span class="number">10</span>);<span class="comment">//擦除鼠标经过的位置</span></span><br><span class="line"><span class="comment">//						g.fillRect(e.getX(), e.getY(), 10, 10);//擦除鼠标经过的位置</span></span><br><span class="line">					&#125;</span><br><span class="line">					x=e.getX();</span><br><span class="line">					y=e.getY();</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					<span class="keyword">if</span>(x&gt;<span class="number">0</span>&amp;&amp;y&gt;<span class="number">0</span>)&#123;</span><br><span class="line">						g.drawLine(x, y, e.getX(), e.getY());</span><br><span class="line">					&#125;</span><br><span class="line">					x=e.getX();<span class="comment">//上一次鼠标绘制点的横坐标</span></span><br><span class="line">					y=e.getY();<span class="comment">//上一次鼠标绘制点的纵坐标</span></span><br><span class="line">				&#125;</span><br><span class="line">				canvas.repaint();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		</span><br><span class="line"><span class="comment">//	为工具栏添加事件</span></span><br><span class="line">		line0_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				BasicStroke bs=<span class="keyword">new</span> BasicStroke(<span class="number">1</span>, BasicStroke.CAP_BUTT,BasicStroke.JOIN_MITER);</span><br><span class="line">				g.setStroke(bs);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		line1_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				BasicStroke bs=<span class="keyword">new</span> BasicStroke(<span class="number">2</span>, BasicStroke.CAP_BUTT,BasicStroke.JOIN_MITER);</span><br><span class="line">				g.setStroke(bs);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		line2_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				BasicStroke bs=<span class="keyword">new</span> BasicStroke(<span class="number">4</span>, BasicStroke.CAP_BUTT,BasicStroke.JOIN_MITER);</span><br><span class="line">				g.setStroke(bs);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		background_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				Color bgColor=JColorChooser.showDialog(null, <span class="string">"选择颜色对话框"</span>,Color.CYAN);</span><br><span class="line">				<span class="keyword">if</span>(bgColor!=null)&#123;</span><br><span class="line">					backgroundColor=bgColor;</span><br><span class="line">				&#125;</span><br><span class="line">				g.setColor(backgroundColor);</span><br><span class="line">				g.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">570</span>, <span class="number">390</span>);</span><br><span class="line">				g.setColor(foreColor);</span><br><span class="line">				canvas.repaint();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		fore_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				Color fColor=JColorChooser.showDialog(null, <span class="string">"选择颜色对话框"</span>,Color.CYAN);</span><br><span class="line">				<span class="keyword">if</span>(fColor!=null)&#123;</span><br><span class="line">					foreColor=fColor;</span><br><span class="line">				&#125;</span><br><span class="line">				g.setColor(foreColor);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		clear_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				g.setColor(backgroundColor);</span><br><span class="line">				g.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">570</span>, <span class="number">390</span>);</span><br><span class="line">				g.setColor(foreColor);</span><br><span class="line">				canvas.repaint();</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		rubber_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				<span class="keyword">if</span>(rubber_Button.getText().equals(<span class="string">"橡皮"</span>))&#123;</span><br><span class="line">					rubber=<span class="literal">true</span>;</span><br><span class="line">					rubber_Button.setText(<span class="string">"画图"</span>);</span><br><span class="line">				&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">					rubber=<span class="literal">false</span>;</span><br><span class="line">					rubber_Button.setText(<span class="string">"橡皮"</span>);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">		exit_Button.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">			<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">				System.<span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		DrawPictureFrame frame=<span class="keyword">new</span> DrawPictureFrame();</span><br><span class="line">		frame.setVisible(<span class="literal">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/71.png" alt="图片"></p>
<p>(2)打印预览<br>java.swing没有提供打印预览，打印预览可以使用户在打印前查看要打印的内容和样式。<br>在组件的paint()方法中调用Printable接口的print()方法就可以实现打印预览。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintPanel</span> <span class="keyword">extends</span> <span class="title">JPanel</span> <span class="keyword">implements</span> <span class="title">Printable</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> JButton printButton;</span><br><span class="line">	<span class="keyword">private</span> JButton previewButton;</span><br><span class="line">	<span class="keyword">private</span> JPanel controlJPanel;</span><br><span class="line">	<span class="keyword">private</span> Image img;</span><br><span class="line">	<span class="keyword">private</span> Dimension size;</span><br><span class="line">	<span class="keyword">private</span> PrinterJob job;</span><br><span class="line">	<span class="keyword">private</span> JFrame previewDialog;</span><br><span class="line">	<span class="keyword">private</span> PageFormat pf;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> URL imgUrl=<span class="keyword">null</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">PrintPanel</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">		setBackground(Color.WHITE);</span><br><span class="line">		add(getControlPanel(),BorderLayout.SOUTH);</span><br><span class="line">		pf=<span class="keyword">new</span> PageFormat();</span><br><span class="line">		pf.setOrientation(PageFormat.LANDSCAPE);</span><br><span class="line">		job=PrinterJob.getPrinterJob();</span><br><span class="line">		previewDialog=<span class="keyword">new</span> JFrame(<span class="string">"显示预览效果"</span>);</span><br><span class="line">		previewDialog.setSize(<span class="number">800</span>, <span class="number">600</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drawPage</span><span class="params">(Graphics2D g2)</span></span>&#123;</span><br><span class="line">		g2.drawImage(img, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">protected</span> JButton <span class="title">getPreviewButton</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(previewButton==<span class="keyword">null</span>)&#123;</span><br><span class="line">			previewButton=<span class="keyword">new</span> JButton();</span><br><span class="line">			previewButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">					pf=job.pageDialog(pf);</span><br><span class="line">					MyCanvas canvas=<span class="keyword">new</span> MyCanvas(pf, img);</span><br><span class="line">					JScrollPane spanel=<span class="keyword">new</span> JScrollPane(canvas);</span><br><span class="line">					previewDialog.getContentPane().setLayout(<span class="keyword">new</span> BorderLayout());</span><br><span class="line">					previewDialog.getContentPane().add(spanel);</span><br><span class="line">					previewDialog.setVisible(<span class="keyword">true</span>);</span><br><span class="line">					canvas.repaint();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			previewButton.setText(<span class="string">"打印预览"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> previewButton;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">protected</span> JButton <span class="title">getPrintButton</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(printButton==<span class="keyword">null</span>)&#123;</span><br><span class="line">			printButton=<span class="keyword">new</span> JButton();</span><br><span class="line">			printButton.addActionListener(<span class="keyword">new</span> ActionListener() &#123;</span><br><span class="line">				<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(ActionEvent e)</span> </span>&#123;</span><br><span class="line">					job.setPrintable(PrintPanel.<span class="keyword">this</span>);</span><br><span class="line">					job.setJobName(<span class="string">"打印图形"</span>);</span><br><span class="line">					<span class="keyword">try</span> &#123;</span><br><span class="line">						job.print();</span><br><span class="line">					&#125; <span class="keyword">catch</span> (PrinterException e1) &#123;</span><br><span class="line">						e1.printStackTrace();</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;);</span><br><span class="line">			printButton.setText(<span class="string">"打印"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> printButton;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">protected</span> JPanel <span class="title">getControlPanel</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(controlJPanel==<span class="keyword">null</span>)&#123;</span><br><span class="line">			controlJPanel=<span class="keyword">new</span> JPanel();</span><br><span class="line">			controlJPanel.setBorder(<span class="keyword">new</span> LineBorder(Color.BLUE, <span class="number">1</span>, <span class="keyword">false</span>));</span><br><span class="line">			<span class="keyword">final</span> FlowLayout flowLayout=<span class="keyword">new</span> FlowLayout();</span><br><span class="line">			flowLayout.setHgap(<span class="number">20</span>);</span><br><span class="line">			controlJPanel.setLayout(flowLayout);</span><br><span class="line">			controlJPanel.add(getPreviewButton());</span><br><span class="line">			controlJPanel.add(getPrintButton());</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> controlJPanel;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="annotation">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">paintComponent</span><span class="params">(Graphics g)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>.paintComponent(g);</span><br><span class="line">		<span class="keyword">if</span>(size==<span class="keyword">null</span>)&#123;</span><br><span class="line">			size=getSize();</span><br><span class="line">			img=Toolkit.getDefaultToolkit().getImage(imgUrl);</span><br><span class="line">		&#125;</span><br><span class="line">		Graphics2D g2=(Graphics2D) g;</span><br><span class="line">		drawPage(g2);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">print</span><span class="params">(Graphics graphics, PageFormat pageFormat, <span class="keyword">int</span> pageIndex)</span></span><br><span class="line">			<span class="keyword">throws</span> PrinterException </span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(pageIndex&gt;<span class="number">0</span>)</span><br><span class="line">			<span class="keyword">return</span> Printable.NO_SUCH_PAGE;</span><br><span class="line">		<span class="keyword">int</span> x=(<span class="keyword">int</span>) pageFormat.getImageableX();</span><br><span class="line">		<span class="keyword">int</span> y=(<span class="keyword">int</span>) pageFormat.getImageableY();</span><br><span class="line">		Graphics2D g2=(Graphics2D) graphics;</span><br><span class="line">		g2.translate(x, y);</span><br><span class="line">		drawPage(g2);</span><br><span class="line">		<span class="keyword">return</span> Printable.PAGE_EXISTS;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		JFrame frame=<span class="keyword">new</span> JFrame(<span class="string">"打印预览"</span>);</span><br><span class="line">		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line">		frame.setSize(<span class="number">600</span>, <span class="number">480</span>);</span><br><span class="line">		imgUrl=PrintPanel.class.getResource(<span class="string">"/img/img2.jpg"</span>);</span><br><span class="line">		PrintPanel canvas=<span class="keyword">new</span> PrintPanel();</span><br><span class="line">		frame.add(canvas);</span><br><span class="line">		frame.setVisible(<span class="keyword">true</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="/img/javause/72.png" alt="图片"><br><img src="/img/javause/73.png" alt="图片"><br><img src="/img/javause/74.png" alt="图片"></p>
<h1 id="u9644_u5F55_uFF1AJAVA_u67E5_u8BE2"><a href="#u9644_u5F55_uFF1AJAVA_u67E5_u8BE2" class="headerlink" title="附录：JAVA查询"></a>附录：JAVA查询</h1><h2 id="1-_u8FD0_u7B97_u7B26_u4F18_u5148_u7EA7"><a href="#1-_u8FD0_u7B97_u7B26_u4F18_u5148_u7EA7" class="headerlink" title="1.运算符优先级"></a>1.运算符优先级</h2><p>由高到低如下：<br>括号：（）<br>正负号：+，-<br>一元运算符：++，–，！<br>乘除：*，/,%<br>加减:+,-<br>移位运算：&lt;&lt;,&gt;&gt;,&gt;&gt;&gt;<br>比较大小:&lt;,&gt;,&lt;=,&gt;=<br>比较是否相等:==,!=<br>按位与：&amp;<br>按位异或：^<br>按位或：|<br>逻辑与:&amp;&amp;<br>逻辑或：||<br>三元运算符：？：<br>赋值运算符：=</p>
<h2 id="2-java_u5173_u952E_u5B57"><a href="#2-java_u5173_u952E_u5B57" class="headerlink" title="2.java关键字"></a>2.java关键字</h2><p>int,public,this,finally,boolean,abstract,continue,float,long,short,throw,throws,return,break,<br>for,static,new,interface,if,goto,default,byte,do,case,strictfp,package,super,void,try,switch,<br>else,catch,implements,private,final,class,extends,volatile,while,synchronized,instanceof,char,<br>protected,import,transient,double</p>
<h2 id="3-_u952E_u76D8keycode_u5217_u8868"><a href="#3-_u952E_u76D8keycode_u5217_u8868" class="headerlink" title="3.键盘keycode列表"></a>3.键盘keycode列表</h2><p><img src="/img/javause/keycode.jpg" alt="图片"></p>
<h2 id="4-_u5F02_u5E38_u5904_u7406"><a href="#4-_u5F02_u5E38_u5904_u7406" class="headerlink" title="4.异常处理"></a>4.异常处理</h2><p>异常产生后不做处理程序将会结束，使用try-catch方法或者将异常向上抛出由方法的调用者来处理，进行异常处理后异常语句后面的代码继续执行<br>原则：<br>（1）当前方法声明中使用try-catch语句捕获异常<br>（2）一个方法被覆盖时，覆盖他的方法必须抛出相同的异常或者异常的子类<br>（3）如果父类抛出多个异常，那么覆盖方法必须抛出那些异常的一个子集，不能抛出新异常<br>try-catch方法：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">try</span>&#123;</span><br><span class="line"><span class="comment">//程序代码块</span></span><br><span class="line">&#125;<span class="tag">catch</span>(Exceptiontype1 e)&#123;</span><br><span class="line"><span class="comment">//Exceptiontype1异常处理</span></span><br><span class="line">&#125;<span class="tag">catch</span>(Exceptiontype2 e)&#123;</span><br><span class="line"><span class="comment">//Exceptiontype2异常处理</span></span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line"><span class="tag">finally</span>&#123;</span><br><span class="line"><span class="comment">//程序块，永远会执行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>throws关键字抛出异常:<br>throws关键字通常应用在声明方法时，用来指定方法可能抛出的异常，多个异常可以用”,”分隔<br>使用throws关键字将异常抛给上级调用者后，如果不想处理，可以继续向上抛出，但是最终一定要有处理该异常的语句<br>eg:<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">//异常处理加不加运行时都不会报错，当出现异常时抛出异常</span><br><span class="line">public class <span class="type">Mytest</span>&#123;</span><br><span class="line">	<span class="keyword">static</span> <span class="type">int</span> pop(<span class="type">int</span> num1,<span class="type">int</span> num2) throws <span class="type">ArithmeticException</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> num1/num2;</span><br><span class="line">	&#125;</span><br><span class="line">	public <span class="keyword">static</span> <span class="type">void</span> main(<span class="type">String</span>[] args) &#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			<span class="type">int</span> <span class="literal">result</span>=pop(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">			<span class="type">System</span>.<span class="keyword">out</span>.print(<span class="literal">result</span>);</span><br><span class="line">		&#125;catch(<span class="type">ArithmeticException</span> e)&#123;</span><br><span class="line">			//e.printStackTrace();</span><br><span class="line">			<span class="type">System</span>.<span class="keyword">out</span>.println(<span class="string">"除数不能为0!"</span>);//除数不能为<span class="number">0</span>!</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>自定义异常：<br>（1）创建自定义异常类，必须继承自Exception类<br>（2）在方法中通过throw(区别于throws)关键字抛出异常对象<br>（3）当前抛出异常的方法中处理可以使用try-catch语句捕获并处理，否则在方法声明处通过throws关键字指明要抛出给方法调用者的异常，继续进行下一步操作<br>（4）在出现异常方法的调用者中捕获并处理异常<br>实例:<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MyException</span> <span class="title">extends</span> <span class="title">Exception</span> &#123;</span><br><span class="line">	String msg;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">MyException</span>(<span class="params">String errorMsg</span>)</span>&#123;</span><br><span class="line">		msg=errorMsg;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span>(<span class="params"></span>)</span>&#123;<span class="comment">//覆盖getMessage()方法</span></span><br><span class="line">		<span class="keyword">return</span> msg;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Mytest</span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">pop</span>(<span class="params"><span class="keyword">int</span> num1,<span class="keyword">int</span> num2</span>) throws MyException</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(num2&lt;<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> MyException(<span class="string">"除数不能&lt;0"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> num1/num2;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</span><br><span class="line">		<span class="keyword">try</span>&#123;</span><br><span class="line">			<span class="keyword">int</span> result=pop(<span class="number">1</span>,-<span class="number">1</span>);</span><br><span class="line">			System.<span class="keyword">out</span>.print(result);</span><br><span class="line">		&#125;<span class="keyword">catch</span>(MyException e)&#123;</span><br><span class="line">			System.<span class="keyword">out</span>.println(e.getMessage());<span class="comment"><span class="xmlDocTag">///</span><span class="xmlDocTag">///</span>输出异常信息</span></span><br><span class="line">		&#125;<span class="keyword">catch</span>(ArithmeticException e)&#123;</span><br><span class="line">			<span class="comment">//e.printStackTrace();</span></span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"除数不能为0!"</span>);<span class="comment">//除数不能为0!</span></span><br><span class="line">		&#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">			System.<span class="keyword">out</span>.println(<span class="string">"发生了其他异常"</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>常见异常列表：<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ClassCastException<span class="comment">----------------------------类型转换异常类</span></span><br><span class="line">ClassNotFoundException<span class="comment">------------------------未找到相应类异常</span></span><br><span class="line">ArithmeticException<span class="comment">---------------------------算术异常类</span></span><br><span class="line">ArrayIndexOutOfBoundsException<span class="comment">----------------数组下标越界异常类</span></span><br><span class="line">ArrayStoreException<span class="comment">---------------------------数组中包含不兼容的值异常类</span></span><br><span class="line">SQLException<span class="comment">----------------------------------操作数据库异常类</span></span><br><span class="line">NullPointerException<span class="comment">-------------------------空指针异常类</span></span><br><span class="line">NoSuchFiledException<span class="comment">--------------------------字节未找到异常类</span></span><br><span class="line">NoSuchMethodException<span class="comment">-------------------------方法未找到异常类</span></span><br><span class="line">NumberFormatException<span class="comment">-------------------------字符串转换为数字异常类</span></span><br><span class="line">NegativeArraySizeException<span class="comment">--------------------数组元素个数为负数异常</span></span><br><span class="line">StringIndexOutOfBoundsException<span class="comment">---------------字符串索引超出范围异常</span></span><br><span class="line">IOException<span class="comment">-----------------------------------输入输出异常</span></span><br><span class="line">IllegalAccessException<span class="comment">------------------------不允许访问某类异常</span></span><br><span class="line">InstantiationException<span class="comment">------------------------使用newInstance方法创建一个类的实例，而指定类无法被实例化时抛出异常</span></span><br><span class="line">EOFException<span class="comment">----------------------------------文件结束异常</span></span><br><span class="line">FileNotFoundException<span class="comment">-------------------------文件未找到异常</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容:JAVA语言学习教程<br>]]>
    
    </summary>
    
      <category term="JAVA" scheme="http://www.bestzhangjin.com/tags/JAVA/"/>
    
      <category term="JAVA" scheme="http://www.bestzhangjin.com/categories/JAVA/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MySql]]></title>
    <link href="http://www.bestzhangjin.com/2016/01/27/MySql/"/>
    <id>http://www.bestzhangjin.com/2016/01/27/MySql/</id>
    <published>2016-01-27T10:00:00.000Z</published>
    <updated>2016-03-25T01:50:22.229Z</updated>
    <content type="html"><![CDATA[<p>主要内容：安装与配置MYSQL<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u5B89_u88C5_u4E0E_u914D_u7F6EMYSQL"><a href="#u7B2C_u4E00_u7AE0__u5B89_u88C5_u4E0E_u914D_u7F6EMYSQL" class="headerlink" title="第一章 安装与配置MYSQL"></a>第一章 安装与配置MYSQL</h1><p>MYSQL是一个开源的关系型数据库管理系统，分社区版和企业版。<br>下载地址：<a href="http://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">http://dev.mysql.com/downloads/mysql/</a><br>我选择Windows (x86, 64-bit), ZIP Archive下载—-自己根据自己电脑版本下载</p>
<h2 id="1-_u914D_u7F6E"><a href="#1-_u914D_u7F6E" class="headerlink" title="1.配置"></a>1.配置</h2><p>将下载文件解压到你的目录，配置环境变量：path：E:\mysql-5.7.10-winx64\bin<br>每个人根据自己的解压目录而定<br>配置完环境变量之后先别忙着启动mysql，我们还需要修改一下配置文件<br>E:\mysql-5.7.10-winx64\my-default.ini<br>在其中修改或添加配置：<br>basedir=E:\mysql-5.7.10-winx64（mysql所在目录）<br>datadir=E:\mysql-5.7.10-winx64\data （mysql所在目录\data）</p>
<h2 id="2-_u5B89_u88C5_u670D_u52A1"><a href="#2-_u5B89_u88C5_u670D_u52A1" class="headerlink" title="2.安装服务"></a>2.安装服务</h2><p>以管理员身份运行cmd（一定要用管理员身份运行，不然权限不够），<br>备注：管理员身份运行cmd<br>方法一：C:\Windows\System32目录下的cmd.exe右键管理员运行<br>方法二：点击左下角的“开始菜单”图标按钮，弹出的菜单列表中的“搜索程序和文件”框里输入cmd，输入后不要回车哦,然后在上面显示的列表中找到cmd字样的程序，紧接着在那个程序上单击鼠标右键并在弹出的菜单中选择“以管理员身份运行”，win10在Cortana中搜索。</p>
<p>进入mysql的bin文件夹，输入mysqld -install(如果不用管理员身份运行，将会因为权限不够而出现错误：Install/Remove of the Service Denied）<br>安装成功后就要启动服务了，继续在cmd中输入:net start mysql（如图）,服务启动成功！</p>
<p>可能错误分析：<br>（1）.MySQL 服务正在启动 ..MySQL 服务无法启动。<br>解决：切换到目录E:\mysql-5.7.10-winx64&gt;<br>执行bin\mysqld –defaults-file=my-default.ini –initialize-insecure<br>之后再执行net start mysql服务器启动<br>备注：如果目录没有data文件夹，不用自己创建，主要my-default.ini配置好了后会自己创建的</p>
<p>（2）net start mysql 发生系统错误 5。  拒绝访问。<br>解决：权限不够，切换到管理员模式就可以启动了。在开始菜单的搜索框张收入cmd，然后右键单击，并选择以管理员身份运行！</p>
<h2 id="3-_u8FDB_u5165MYSQL"><a href="#3-_u8FDB_u5165MYSQL" class="headerlink" title="3.进入MYSQL"></a>3.进入MYSQL</h2><p>dos下：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mysql</span> -u root -p</span><br></pre></td></tr></table></figure></p>
<p>Enter password那里，初始密码为空，直接回车就行,显示<br>mysql&gt;<br>如此则进入了MYSQL</p>
<h1 id="u7B2C_u4E8C_u7AE0_DOS_u4E0B_u7B80_u5355_u64CD_u4F5C_u6570_u636E_u5E93MYSQL"><a href="#u7B2C_u4E8C_u7AE0_DOS_u4E0B_u7B80_u5355_u64CD_u4F5C_u6570_u636E_u5E93MYSQL" class="headerlink" title="第二章 DOS下简单操作数据库MYSQL"></a>第二章 DOS下简单操作数据库MYSQL</h1><h2 id="1-_u670D_u52A1_u7684_u542F_u52A8_u4E0E_u505C_u6B62_u53CA_u7248_u672C_u4FE1_u606F"><a href="#1-_u670D_u52A1_u7684_u542F_u52A8_u4E0E_u505C_u6B62_u53CA_u7248_u672C_u4FE1_u606F" class="headerlink" title="1.服务的启动与停止及版本信息"></a>1.服务的启动与停止及版本信息</h2><p>启动<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="winutils">net</span> <span class="built_in">start</span> mysql</span><br></pre></td></tr></table></figure></p>
<p>停止<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net <span class="literal">stop</span> mysql</span><br></pre></td></tr></table></figure></p>
<p>卸载<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sc <span class="keyword">delete</span> mysql</span><br></pre></td></tr></table></figure></p>
<p>备注：所有的windows服务都可以通过net start/stop启动停止</p>
<p>版本信息<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mysql</span> -V</span><br></pre></td></tr></table></figure></p>
<h2 id="2-_u767B_u5F55_u4E0E_u9000_u51FA"><a href="#2-_u767B_u5F55_u4E0E_u9000_u51FA" class="headerlink" title="2.登录与退出"></a>2.登录与退出</h2><p>登录：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -<span class="keyword">u</span> root -p</span><br><span class="line">MYSQL提示符：\<span class="keyword">D</span>--完整的日期  \<span class="keyword">d</span>--当前数据库 \<span class="keyword">h</span>--服务器名称 \<span class="keyword">u</span>--当前用户</span><br></pre></td></tr></table></figure></p>
<p>退出：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exit</span></span><br><span class="line">quit</span><br><span class="line">\<span class="literal">q</span></span><br></pre></td></tr></table></figure></p>
<h2 id="3-_u5E38_u7528_u547D_u4EE4"><a href="#3-_u5E38_u7528_u547D_u4EE4" class="headerlink" title="3.常用命令"></a>3.常用命令</h2><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> VERSION();<span class="comment">-----------显示当前服务器版本</span></span><br><span class="line"><span class="keyword">SELECT</span> NOW();<span class="comment">---------------显示当前日期时间</span></span><br><span class="line"><span class="keyword">SELECT</span> USER();<span class="comment">--------------显示当前用户</span></span><br><span class="line">shell&gt;mysql -uroot -proot <span class="comment">--prompt------修改MySQL提示符：连接客户端时通过参数指定</span></span><br><span class="line">mysql&gt;prompt 提示符<span class="comment">----------修改MySQL提示符：连接客户端后通过prompt修改</span></span><br><span class="line">eg：prompt \u@\h \d&gt;</span><br></pre></td></tr></table></figure>
<p>备注：规范用大写——–虽然小写也可以运行<br>MYSQL语句的规范：<br>关键字和函数名称全部大写，数据库名称、表名称、字段名称全部小写，SQL语句必须以分号结尾</p>
<h2 id="4-_u6570_u636E_u5E93_u64CD_u4F5C_u547D_u4EE4"><a href="#4-_u6570_u636E_u5E93_u64CD_u4F5C_u547D_u4EE4" class="headerlink" title="4.数据库操作命令"></a>4.数据库操作命令</h2><p>创建数据库：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> &#123;<span class="keyword">DATABASE</span>|<span class="keyword">SCHEMA</span>&#125; [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] db_name [<span class="keyword">DEFAULT</span>] CHARAACTER <span class="keyword">SET</span> [=] charset_name</span><br><span class="line">如：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">test</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>查看当前服务器下的数据表列表：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SHOW</span> &#123;<span class="keyword">DATABASES</span>|SCHEMAS&#125; [<span class="keyword">LINK</span> <span class="string">'pattern'</span> | <span class="keyword">WHERE</span> expr]</span><br><span class="line">如：</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="5-_u4ECE_u6587_u672C_u6587_u4EF6_u6267_u884CSQL_u8BED_u53E5"><a href="#5-_u4ECE_u6587_u672C_u6587_u4EF6_u6267_u884CSQL_u8BED_u53E5" class="headerlink" title="5.从文本文件执行SQL语句"></a>5.从文本文件执行SQL语句</h2><p>这里在D盘下建一个文件my.txt:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mma;</span></span><br><span class="line"><span class="operator"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>打开cmd运行结果如下：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">E</span>:\mysql-5.7.10-winx64\bin&gt;mysql &lt; <span class="keyword">D</span>:\my.txt -<span class="keyword">u</span> root -p</span><br><span class="line">Enter password:</span><br><span class="line">Database</span><br><span class="line">information_schema</span><br><span class="line">mma</span><br><span class="line">mysql</span><br><span class="line">performance_schema</span><br><span class="line">sys</span><br><span class="line"><span class="keyword">test</span></span><br></pre></td></tr></table></figure></p>
<p>如果正在运行mysql，则如下：<br>source D:\my.txt也可以用. D:\my.txt<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; source D:\my.txt</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="code">+--------------------+</span></span><br><span class="line"><span class="header">| Database           |</span><br><span class="line">+--------------------+</span></span><br><span class="line">| information<span class="emphasis">_schema |</span><br><span class="line">| mma                |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_</span>schema |</span><br><span class="line">| sys                |</span><br><span class="line"><span class="header">| test               |</span><br><span class="line">+--------------------+</span></span><br><span class="line">6 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>
<h1 id="u7B2C_u4E09_u7AE0__u6570_u636E_u5E93_u57FA_u672C_u64CD_u4F5C"><a href="#u7B2C_u4E09_u7AE0__u6570_u636E_u5E93_u57FA_u672C_u64CD_u4F5C" class="headerlink" title="第三章 数据库基本操作"></a>第三章 数据库基本操作</h1><h2 id="1-_u521B_u5EFA_u6570_u636E_u5E93"><a href="#1-_u521B_u5EFA_u6570_u636E_u5E93" class="headerlink" title="1.创建数据库"></a>1.创建数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span>] tb_name;</span> </span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> tb_name <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> big5 <span class="keyword">COLLATE</span> big5_chinese_ci;</span>//创建并指定字符集为big5,校对规则为big5_chinese_ci</span><br></pre></td></tr></table></figure>
<h2 id="2-_u67E5_u770B_u6570_u636E_u5E93"><a href="#2-_u67E5_u770B_u6570_u636E_u5E93" class="headerlink" title="2.查看数据库"></a>2.查看数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SHOW</span> <span class="keyword">DATABASE</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> tb_name;</span>//查看某一数据库详细信息</span><br><span class="line"><span class="operator"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> tb_name \<span class="keyword">G</span>;</span>// \G使显示的信息更加直观</span><br></pre></td></tr></table></figure>
<h2 id="3-_u4FEE_u6539_u6570_u636E_u5E93"><a href="#3-_u4FEE_u6539_u6570_u636E_u5E93" class="headerlink" title="3.修改数据库"></a>3.修改数据库</h2><p>注意:储存引擎为MyISAM可以修改数据库名称，但是储存引擎为InnoDB无法修改，可以修改字符集和校对规则：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> ADTABASE tb_name <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> gb2312;</span>//将数据库字符集设置为gb2312</span><br></pre></td></tr></table></figure></p>
<h2 id="4-_u5220_u9664_u6570_u636E_u5E93"><a href="#4-_u5220_u9664_u6570_u636E_u5E93" class="headerlink" title="4.删除数据库"></a>4.删除数据库</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> [<span class="keyword">IF</span> <span class="keyword">EXISTS</span>] tb_name;</span></span><br></pre></td></tr></table></figure>
<h2 id="5-_u5F53_u524D_u6570_u636E_u5E93_u9009_u62E9"><a href="#5-_u5F53_u524D_u6570_u636E_u5E93_u9009_u62E9" class="headerlink" title="5.当前数据库选择"></a>5.当前数据库选择</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SELECT DATABASE();<span class="comment">//显示当前数据库</span></span><br><span class="line"><span class="keyword">USE</span> tb_name;<span class="comment">//运行mysql时选择指定数据库</span></span><br><span class="line"><span class="keyword">shell</span>&gt; mysql -<span class="keyword">u</span> root -p tb_name;<span class="comment">//打开时指定</span></span><br></pre></td></tr></table></figure>
<p>备注：修改显示格式<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; prompt \<span class="keyword">u</span>@\<span class="keyword">h</span> \<span class="keyword">d</span>&gt;</span><br><span class="line">PROMPT <span class="keyword">set</span> to '\<span class="keyword">u</span>@\<span class="keyword">h</span> \<span class="keyword">d</span>&gt;'</span><br><span class="line">root@localhost mma&gt;</span><br></pre></td></tr></table></figure></p>
<h1 id="u7B2C_u56DB_u7AE0__u6570_u636E_u8868_u64CD_u4F5C"><a href="#u7B2C_u56DB_u7AE0__u6570_u636E_u8868_u64CD_u4F5C" class="headerlink" title="第四章 数据表操作"></a>第四章 数据表操作</h1><h2 id="1-_u6570_u636E_u8868_u7C7B_u578B"><a href="#1-_u6570_u636E_u8868_u7C7B_u578B" class="headerlink" title="1.数据表类型"></a>1.数据表类型</h2><p>只有BDB属于事务安全型，其他属于非事务安全型。<br>(1)ISAM<br>现在已经被MyISAM取代<br>(2)MyISAM<br>mysql5.4以前使用<br>(3)Merge<br>一种把相同结构的MyISAM数据表组织为一个逻辑单元的方法<br>(4)HEAP<br>使用内存的数据表，检索速度快，作为一种临时数据表，在指定情况下特别有用<br>(5)BDB<br>支持事务处理机制，具有良好的并发性能。<br>(6)InnoDB<br>新加入mysql的数据表类型，支持事务处理机制，崩溃后能够立即恢复，具有并发功能，支持外键功能，包括级联删除</p>
<h2 id="2-_u5B57_u6BB5_u6570_u636E_u7C7B_u578B"><a href="#2-_u5B57_u6BB5_u6570_u636E_u7C7B_u578B" class="headerlink" title="2.字段数据类型"></a>2.字段数据类型</h2><p>范围自己按位数推： 如TINYINT 1B 8位 有符号时(-2^7~2^7-1) 无符号(UNSIGNED)时(0~2^8-1)<br>(1)整数型</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>TINYINT</td>
<td>1B</td>
<td>小整数</td>
</tr>
<tr>
<td>SMALLINT</td>
<td>2B</td>
<td>大整数</td>
</tr>
<tr>
<td>MEDIUMINT</td>
<td>3B</td>
<td>大整数</td>
</tr>
<tr>
<td>INT或者INTEGER</td>
<td>4B</td>
<td>大整数</td>
</tr>
<tr>
<td>BIGINT</td>
<td>8B</td>
<td>极大整数</td>
</tr>
</tbody>
</table>
<p>(2)浮点型</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>FLOAT</td>
<td>4B</td>
<td>单精度</td>
</tr>
<tr>
<td>DOUBLE</td>
<td>8B</td>
<td>双精度</td>
</tr>
<tr>
<td>DECIMAL</td>
<td></td>
<td>小数</td>
</tr>
</tbody>
</table>
<p>备注：FLOAT(7,3)—-显示值不超过7位，小数点后面有三位小数</p>
<p>(3)字符型</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>CHAR</td>
<td>0~255B</td>
<td>定长字符串</td>
</tr>
<tr>
<td>VARCHAR</td>
<td>0~255B</td>
<td>变长字符串</td>
</tr>
<tr>
<td>TINYBLOB</td>
<td>0~255B</td>
<td>不超过255个字符二进制字符串</td>
</tr>
<tr>
<td>TINYTEXT</td>
<td>0~255B</td>
<td>短文本字符串</td>
</tr>
<tr>
<td>BLOB</td>
<td>0~65535B</td>
<td>二进制长文本数据</td>
</tr>
<tr>
<td>TEXT</td>
<td>0~65535B</td>
<td>长文本数据</td>
</tr>
<tr>
<td>MEDIUMBLOB</td>
<td>0~16777215B</td>
<td>二进制中等长文本数据</td>
</tr>
<tr>
<td>MEDIUMTEXT</td>
<td>0~16777215B</td>
<td>中等长文本数据</td>
</tr>
<tr>
<td>LONGBLOB</td>
<td>0~4294967295B</td>
<td>二进制极大文本数据</td>
</tr>
<tr>
<td>LONGTEXT</td>
<td>0~4294967295B</td>
<td>极大文本数据</td>
</tr>
</tbody>
</table>
<p>备注：<br>CHAR(长度) 而 VARCHAR根据实际内容长度动态改变储存长度，节约磁盘空间和提高储存效率<br>TEXT和BLOB用于储存文本块或者图像声音等二进制文件，TEXT不区分大小写，BLOB区分大小写</p>
<p>(4)时间日期</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>大小</th>
<th>范围</th>
<th>格式</th>
<th>用途</th>
</tr>
</thead>
<tbody>
<tr>
<td>DATE</td>
<td>3</td>
<td>1000-01-01/9999-12-31</td>
<td>YYYY-MM-DD</td>
<td>日期值</td>
</tr>
<tr>
<td>TIME</td>
<td>3</td>
<td>‘-838:59:59’/‘838:59:59’</td>
<td>HH:MM:SS</td>
<td>时间值或持续时间</td>
</tr>
<tr>
<td>YEAR</td>
<td>1</td>
<td>1901/2155</td>
<td>YYYY</td>
<td>年份值</td>
</tr>
<tr>
<td>DATETIME</td>
<td>8</td>
<td>1000-01-01 00:00:00/9999-12-31 23:59:59</td>
<td>YYYY-MM-DD HH:MM:SS</td>
<td>混合日期和时间值</td>
</tr>
<tr>
<td>TIMESTAMP</td>
<td>8</td>
<td>1970-01-01 00:00:00/2037年某时</td>
<td>YYYYMMDD HHMMSS</td>
<td>混合日期和时间值,时间戳</td>
</tr>
</tbody>
</table>
<p>(5)复合类型<br>mysql支持的复合类型为ENUM和SET<br>ENUM只允许在集合中取得一个值，作用类似于单选项，用于处理相互排斥的数据。大小写不匹配时会自动转化为一致的，一个ENUM类型最多包括65536个元素，从1开始索引，其中一个元素被mysql保留，用来储存错误信息，这个错误用索引0或者一个空字符表示。<br>SET从预定义中取任意多个值，类似复选框，与ENUM相同，插入非预定义值会插入一个空字符，一个SET最多可以包含64项元素。</p>
<h2 id="3-_u8868_u7684_u64CD_u4F5C"><a href="#3-_u8868_u7684_u64CD_u4F5C" class="headerlink" title="3.表的操作"></a>3.表的操作</h2><p>(1)创建<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">USE</span> 数据库名称;</span><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表的名称(字段<span class="number">1</span>的名称 字段<span class="number">1</span>的类型 字段<span class="number">1</span>的约束,字段<span class="number">2.</span>..);</span></span><br><span class="line">或者</span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 数据库名称.表的名称(字段<span class="number">1</span>的名称 字段<span class="number">1</span>的类型 字段<span class="number">1</span>的约束,字段<span class="number">2.</span>..);</span></span><br><span class="line">eg:</span><br><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(<span class="keyword">sid</span> <span class="built_in">INT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,<span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,sex <span class="built_in">VARCHAR</span>(<span class="number">4</span>) <span class="literal">NULL</span>);</span></span><br></pre></td></tr></table></figure></p>
<p>(2)查看表结构<br>Field：字段名称<br>Type：字段类型<br>Null：是否可以为null<br>Key：是否编制索引<br>Default：是否默认值，是多少<br>Extra：附加信息如AUTO_INCREMENT<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DESCRIBE 表名;</span><br><span class="line">或者</span><br><span class="line">DESC 表名;</span><br><span class="line">eg:</span><br><span class="line">root<span class="comment">@localhost test&gt;DESC student;</span></span><br><span class="line">+-------+----------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> Field </span>|<span class="string"> Type                 </span>|<span class="string"> Null </span>|<span class="string"> Key </span>|<span class="string"> Default </span>|<span class="string"> Extra          </span>|</span><br><span class="line">+-------+----------------------+------+-----+---------+----------------+</span><br><span class="line">|<span class="string"> id    </span>|<span class="string"> smallint(5) unsigned </span>|<span class="string"> NO   </span>|<span class="string"> PRI </span>|<span class="string"> NULL    </span>|<span class="string"> auto_increment </span>|</span><br><span class="line">|<span class="string"> stuid </span>|<span class="string"> varchar(20)          </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">|<span class="string"> name  </span>|<span class="string"> varchar(20)          </span>|<span class="string"> NO   </span>|<span class="string">     </span>|<span class="string"> NULL    </span>|<span class="string">                </span>|</span><br><span class="line">+-------+----------------------+------+-----+---------+----------------+</span><br><span class="line">3 rows in set (0.39 sec)</span><br></pre></td></tr></table></figure></p>
<p>查看表的详细结构：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root<span class="comment">@localhost test&gt;SHOW CREATE TABLE student \G</span></span><br><span class="line"><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> 1. row <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span></span><br><span class="line">       Table: student</span><br><span class="line">Create Table: CREATE TABLE `student` (</span><br><span class="line">  `id` smallint(5) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `stuid` varchar(20) NOT NULL,</span><br><span class="line">  `name` varchar(20) NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=latin1</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>
<p>(3)添加与查看数据<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@localhost test&gt;INSERT INTO student(stuid,name) VALUES("001","xiangming");</span><br><span class="line">Query OK, 1 row affected (0.16 sec)</span><br><span class="line"></span><br><span class="line"><span class="header">root@localhost test&gt;SELECT * FROM student;</span><br><span class="line">+----+-------+-----------+</span></span><br><span class="line"><span class="header">| id | stuid | name      |</span><br><span class="line">+----+-------+-----------+</span></span><br><span class="line"><span class="header">|  1 | 001   | xiangming |</span><br><span class="line">+----+-------+-----------+</span></span><br><span class="line">1 row in set (0.03 sec)</span><br></pre></td></tr></table></figure></p>
<p>(4)删除表<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> tablename;</span>//删除表中数据</span><br><span class="line"><span class="operator"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> tablename;</span>//删除整个表</span><br></pre></td></tr></table></figure></p>
<p>(5)修改表名<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 旧表名 <span class="keyword">RENAME</span> [<span class="keyword">TO</span>] 新表名;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="4-_u5B57_u6BB5_u64CD_u4F5C"><a href="#4-_u5B57_u6BB5_u64CD_u4F5C" class="headerlink" title="4.字段操作"></a>4.字段操作</h2><p>(1)字段类型修改<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 字段名 数据类型;</span></span><br></pre></td></tr></table></figure></p>
<p>(2)添加字段<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> 新字段名 数据类型 [约束条件] [<span class="keyword">FIRST</span> | <span class="keyword">AFTER</span> 已存在的字段名];</span>//FIRST将字段设置为第一个字段，将字段AFTER添加到已存在的字段名后面</span><br></pre></td></tr></table></figure></p>
<p>(3)删除字段<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> 字段名；</span></span><br></pre></td></tr></table></figure></p>
<p>(4)字段位置修改<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 字段<span class="number">1</span> 数据类型 <span class="keyword">FIRST</span>|<span class="keyword">AFTER</span> 字段<span class="number">2</span>；//将字段<span class="number">1</span>改到第一或者字段<span class="number">2</span>的后面</span></span><br></pre></td></tr></table></figure></p>
<h1 id="u7B2C_u4E94_u7AE0__u5B57_u6BB5_u7EA6_u675F"><a href="#u7B2C_u4E94_u7AE0__u5B57_u6BB5_u7EA6_u675F" class="headerlink" title="第五章 字段约束"></a>第五章 字段约束</h1><h2 id="281_29_u4E3B_u952E_u7EA6_u675F"><a href="#281_29_u4E3B_u952E_u7EA6_u675F" class="headerlink" title="(1)主键约束"></a>(1)主键约束</h2><p>关系库依赖主键，主键用途:唯一地标识一行记录,作为一个可以被外键引用的有效对象。<br>一般设计表的时候，需要额外添加一个字段id，用来作为主键的标识列，同时添加自增约束，确保唯一性<br>单字段主键在字段数据类型后面添加PRIMARY KEY即可<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>)</span><br><span class="line">);</span></span><br></pre></td></tr></table></figure></p>
<p>复合主键在字段创建后，添加PRIMARY KEY(字段列表用,隔开)<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span>,</span><br><span class="line">stuid <span class="built_in">INT</span>,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">PRIMARY <span class="keyword">KEY</span>(<span class="keyword">id</span>,stuid)</span><br><span class="line">);</span></span><br></pre></td></tr></table></figure></p>
<p>删除全部主键<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LTER TABLE 表名 <span class="operator"><span class="keyword">DROP</span> PRIMARY <span class="keyword">KEY</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>删除添加指定主键<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span>/<span class="keyword">ADD</span> PRIMARY <span class="keyword">KEY</span>(字段名)；</span></span><br></pre></td></tr></table></figure></p>
<p>修改字段类型并设为主键<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 字段名 字段类型 PRIMARY <span class="keyword">KEY</span>;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="282_29_u5916_u952E_u7EA6_u675F"><a href="#282_29_u5916_u952E_u7EA6_u675F" class="headerlink" title="(2)外键约束"></a>(2)外键约束</h2><p>主键用于标识表中数据，而外键用于表与表之间字段的联系。<br>外键作用:数据库通过外键保证数据的完整性和一致性，增加数据库表之间的可读性<br>注意:所有表必须是InnoDB表，不能是临时表,对应非InnoDB表，FOREIGN KEY子句会被忽略。建立外键的字段必须建立约束。</p>
<p>拥有外键的表是子表。主键被其它表引用的表是父表<br>tablename:子表 tbl_name：父表<br>添加外键:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tablename</span><br><span class="line"><span class="keyword">ADD</span> [<span class="keyword">CONSTRAINT</span> 外键名] FOREIGN <span class="keyword">KEY</span> [<span class="keyword">id</span>] (index_col_name,...)</span><br><span class="line"><span class="keyword">REFERENCES</span> tbl_name (index_col_name,...)</span><br><span class="line">[<span class="keyword">ON</span> <span class="keyword">DELETE</span> &#123;<span class="keyword">CASCADE</span> | <span class="keyword">SET</span> <span class="literal">NULL</span> | <span class="keyword">NO</span> <span class="keyword">ACTION</span> | RESTRICT&#125;]</span><br><span class="line">[<span class="keyword">ON</span> <span class="keyword">UPDATE</span> &#123;<span class="keyword">CASCADE</span> | <span class="keyword">SET</span> <span class="literal">NULL</span> | <span class="keyword">NO</span> <span class="keyword">ACTION</span> | RESTRICT&#125;]</span></span><br></pre></td></tr></table></figure></p>
<p>CASCADE:外键表中外键字段值会跟随父表被更新，或者所在的列会被删除<br>SET NULL：在父表外键关联字段被修改和删除时，外键表的外键列被设置null<br>NO ACTION：不进行任何关联操作<br>RESTRICT：相当于NO ACTION，拒绝父表修改外键关联列，删除记录</p>
<p>实例：课程表course中任课教师字段ctid对应教师信息表teachers的tid字段<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> course</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> ctid FOREIGN <span class="keyword">KEY</span>(ctid)</span><br><span class="line"><span class="keyword">REFERENCES</span> teachers(tid)</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">DELETE</span> RESTRICT</span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="keyword">CASCADE</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>创建外键注意：<br>外键使用建议用ON DELETE RESTRICT ON UPDATE CASCADE;<br>创建外键时，定义的外键名不能加引号；<br>字段名与对应数据表名不能错误；<br>字段类型必须对应，如上面的ctid和tid类型一致;<br>字段的约束除了主键和外键的约束外其他必须一致;<br>字符集尽量使用utf-8。</p>
<p>查看外键:通过查看创建表代码查看<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 表名;</span></span><br></pre></td></tr></table></figure></p>
<p>删除外键:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> FOREIGN <span class="keyword">KEY</span> 外键名;</span>//只是删除了外键约束，没有删除字段本身</span><br></pre></td></tr></table></figure></p>
<p>若系统报错，那出错信息将显示FOREIGN KEY的系统外键名，使用该外键名来删除指定外键。</p>
<h2 id="283_29_u975E_u7A7A_u7EA6_u675F"><a href="#283_29_u975E_u7A7A_u7EA6_u675F" class="headerlink" title="(3)非空约束"></a>(3)非空约束</h2><p>在字段后面加上NOT NULL即可<br>如：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id <span class="built_in">INT</span> <span class="literal">NOT</span> <span class="literal">NULL</span></span><br></pre></td></tr></table></figure></p>
<p>修改为非空或者空约束:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 字段名 字段类型 <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">MODIFY</span> 字段名 字段类型 <span class="literal">NULL</span>;</span></span><br></pre></td></tr></table></figure></p>
<p>通过查看表结构查看非空字段:<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DESC 表名<span class="comment">;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="284_29_u9ED8_u8BA4_u503C_u7EA6_u675F"><a href="#284_29_u9ED8_u8BA4_u503C_u7EA6_u675F" class="headerlink" title="(4)默认值约束"></a>(4)默认值约束</h2><p>被设置默认值的字段最好不为null<br>默认值修改需要删除再添加<br>添加默认值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ALTER</span> 列名 <span class="keyword">SET</span> <span class="keyword">DEFAULT</span> 默认值数据;</span></span><br></pre></td></tr></table></figure></p>
<p>创建时也可以指定默认值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>(<span class="keyword">id</span> <span class="built_in">INT</span> <span class="literal">NULL</span>,<span class="keyword">year</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">2016</span>)；</span></span><br></pre></td></tr></table></figure></p>
<p>删除默认值<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ALTER</span> 字段名 <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span>;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<p>设置默认值为当前时间：<br>数据类型设置成TIMESTAMP,默认值设置为CURRENT_TIMESTAMP即可。格式xxxx-xx-xx xx:xx:xx</p>
<h2 id="285_29_u552F_u4E00_u6027_u7EA6_u675F"><a href="#285_29_u552F_u4E00_u6027_u7EA6_u675F" class="headerlink" title="(5)唯一性约束"></a>(5)唯一性约束</h2><p>注意：定义为唯一性约束的列，没有定义非空约束时，最好不要填入空值，两个空值将导致列的数据违背唯一性。<br>创建时添加唯一性约束(UNIQUE)：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">user</span>(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>,//方法<span class="number">1</span></span><br><span class="line"><span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">sex VACHER(<span class="number">20</span>),</span><br><span class="line"><span class="keyword">UNIQUE</span>(<span class="keyword">name</span>)//方法<span class="number">2</span></span><br><span class="line">);</span></span><br></pre></td></tr></table></figure></p>
<p>查看用SHOW CREATE TABLE 表名;</p>
<p>添加唯一性约束:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">ADD</span> <span class="keyword">UNIQUE</span>(字段列表);</span>//字段列表中字段间用,隔开</span><br></pre></td></tr></table></figure></p>
<p>删除唯一性约束：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">INDEX</span> 列名;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="286_29_u81EA_u589E_u7EA6_u675F"><a href="#286_29_u81EA_u589E_u7EA6_u675F" class="headerlink" title="(6)自增约束"></a>(6)自增约束</h2><p>使用AUTO_INCREMENT实现<br>注意：<br>AUTO_INCREMENT是数据列的一种属性，只是适用于整数型数据列；<br>设置AUTO_INCREMENT属性的数据列应该是一个正数序列，应该声明为UNSIGNED；<br>AUTO_INCREMENT数据列必须唯一约束，以避免序号重复；<br>MySql表中只能有一个AUTO_INCREMENT字段；<br>自增字段必须定义为键如主键或者外键；<br>AUTO_INCREMENT数据列必须有NOT NULL属性；<br>AUTO_INCREMENT序号最大值受该列数据类型限制，TINYINT最大为127，加上UNSIGNED为255，达到上限AUTO_INCREMENT会失效；<br>全表数据删除时（删除所有数据，保留表结构），AUTO_INCREMENT会从1重新开始编号；<br>要重新排列现有的序列编号，最简单的方法是先删除该列，再创建该列，mysql会重新生成连续的编号序列；<br>自增每次只能加1。<br>每种数据表机制不一样，这里用的是InnDB表</p>
<p>创建自增约束：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> worker(</span><br><span class="line"><span class="keyword">id</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT</span><br><span class="line">);</span></span><br></pre></td></tr></table></figure></p>
<p>添加自增约束:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> worker <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT;</span></span><br></pre></td></tr></table></figure></p>
<p>删除自增约束：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> worker <span class="keyword">MODIFY</span> <span class="keyword">COLUMN</span> <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="287_29_u5220_u9664_u6307_u5B9A_u540D_u79F0_u7684_u7EA6_u675F"><a href="#287_29_u5220_u9664_u6307_u5B9A_u540D_u79F0_u7684_u7EA6_u675F" class="headerlink" title="(7)删除指定名称的约束"></a>(7)删除指定名称的约束</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> 表名 <span class="keyword">DROP</span> <span class="keyword">INDEX</span> 约束名；</span></span><br></pre></td></tr></table></figure>
<p>如：<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="header">root@localhost test&gt;SHOW CREATE TABLE worker;</span><br><span class="line">+-------------------+</span></span><br><span class="line"><span class="header">| Table  | Create Table                                                                                                                                                                                                    |</span><br><span class="line">+-------------------+</span></span><br><span class="line">| worker | CREATE TABLE <span class="code">`worker`</span> (</span><br><span class="line"><span class="code">  `id` int(11) NOT NULL,</span></span><br><span class="line"><span class="code">  `name` varchar(20) NOT NULL,</span></span><br><span class="line"><span class="code">  `sex` varchar(20) DEFAULT NULL,</span></span><br><span class="line"><span class="code">  UNIQUE KEY `id` (`id`),</span></span><br><span class="line"><span class="code">  UNIQUE KEY `name` (`name`)</span></span><br><span class="line"><span class="header">) ENGINE=InnoDB DEFAULT CHARSET=latin1 |</span><br><span class="line">+-------------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">//如上，name 字段上有UNIQUE KEY约束，名称为name</span></span><br><span class="line">删除后：</span><br><span class="line">root@localhost test&gt;ALTER TABLE worker DROP INDEX name;////////</span><br><span class="line">Query OK, 0 rows affected (0.15 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="header">root@localhost test&gt;show create table worker;</span><br><span class="line">+------+</span></span><br><span class="line"><span class="header">| Table  | Create Table                                                                                                                                                                      |</span><br><span class="line">+------+</span></span><br><span class="line">| worker | CREATE TABLE <span class="code">`worker`</span> (</span><br><span class="line"><span class="code">  `id` int(11) NOT NULL,</span></span><br><span class="line"><span class="code">  `name` varchar(20) NOT NULL,</span></span><br><span class="line"><span class="code">  `sex` varchar(20) DEFAULT NULL,</span></span><br><span class="line"><span class="code">  UNIQUE KEY `id` (`id`)</span></span><br><span class="line"><span class="header">) ENGINE=InnoDB DEFAULT CHARSET=latin1 |</span><br><span class="line">+------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure></p>
<h1 id="u7B2C_u516D_u7AE0__u6570_u636E_u8BB0_u5F55_u57FA_u672C_u64CD_u4F5C"><a href="#u7B2C_u516D_u7AE0__u6570_u636E_u8BB0_u5F55_u57FA_u672C_u64CD_u4F5C" class="headerlink" title="第六章 数据记录基本操作"></a>第六章 数据记录基本操作</h1><h2 id="1-SELECT_u57FA_u672C_u8BED_u6CD5"><a href="#1-SELECT_u57FA_u672C_u8BED_u6CD5" class="headerlink" title="1.SELECT基本语法"></a>1.SELECT基本语法</h2><p>使用顺序必须如下：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">SELECT</span> [<span class="keyword">STRAIGHT_JOIN</span>] [<span class="keyword">SQL_SMALL_RESULT</span>] [<span class="keyword">SQL_BIG_RESULT</span>]</span><br><span class="line">[<span class="keyword">HIGH_PRIORITY</span>]</span><br><span class="line">	[<span class="keyword">DISTINCT</span> | <span class="keyword">DISTINCTROW</span> | ALL]</span><br><span class="line"> select_expression,...</span><br><span class="line"> [<span class="keyword">INTO</span> &#123;<span class="keyword">OUTFILE</span> | <span class="keyword">DUMPFILE</span>&#125; <span class="string">'file_name'</span> export_options]</span><br><span class="line"> [<span class="keyword">FROM</span> table_references </span><br><span class="line">	[<span class="keyword">WHERE</span> where_definition]</span><br><span class="line">	[<span class="keyword">GROUP</span> <span class="keyword">BY</span> col_name,...]</span><br><span class="line">	[<span class="keyword">HAVING</span> where_definition]</span><br><span class="line">	[<span class="keyword">ORDER</span> <span class="keyword">BY</span> &#123;unsigned_integer | col_name | formula&#125; [<span class="keyword">ASC</span> | <span class="keyword">DESC</span>] ,...]</span><br><span class="line">	[<span class="keyword">LIMIT</span> [<span class="keyword">offset</span>,] <span class="keyword">rows</span>]</span><br><span class="line">	[<span class="keyword">PROCEDURE</span> procedure_name]]</span></span><br></pre></td></tr></table></figure></p>
<p>select_expression:需要查询的字段名；<br>table_references:从此处指定的表或者视图中查询数据；<br>WHERE where_definition:指定查询的条件；<br>col_name:按照指定的字段进行分组；<br>HAVING where_definition:满足这个条件的表达式才能输出；<br>ORDER BY：按照指定的字段进行排序，ASC-升序 DESC-降序；<br>PROCDURE procedure_name:指定的储存过程名称。</p>
<h2 id="2-_u5355_u8868_u67E5_u8BE2"><a href="#2-_u5355_u8868_u67E5_u8BE2" class="headerlink" title="2.单表查询"></a>2.单表查询</h2><h1 id="u5341_u4E00_u3001_u6570_u636E_u5E93_u754C_u9762_u5316"><a href="#u5341_u4E00_u3001_u6570_u636E_u5E93_u754C_u9762_u5316" class="headerlink" title="十一、数据库界面化"></a>十一、数据库界面化</h1><p>上面安装的mysql没有界面，可以在dos下操作，如果你想要界面化的话可以自己找相关界面化软件，这里用Navicat for MySQL！<br>自己安装好软件Navicat for MySQL！<br>打开软件，点击连接，随便输入一个连接名，密码这里不用输入（因为初始数据库没有密码，如果你的MYSQL数据库加了密码的话输入即可）<br>点击确定即可看见数据库了，里面有MYSQL自带的数据表</p>
<h1 id="u5341_u4E8C_u3001Mysql_u95EE_u9898"><a href="#u5341_u4E8C_u3001Mysql_u95EE_u9898" class="headerlink" title="十二、Mysql问题"></a>十二、Mysql问题</h1><h2 id="1-ERROR_1215__28HY000_29_3A_Cannot_add_foreign_key_constraint"><a href="#1-ERROR_1215__28HY000_29_3A_Cannot_add_foreign_key_constraint" class="headerlink" title="1.ERROR 1215 (HY000): Cannot add foreign key constraint"></a>1.ERROR 1215 (HY000): Cannot add foreign key constraint</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">root@localhost test&gt;ALTER TABLE stu ADD FOREIGN KEY(stuid) REFERENCES stuinfo(stu<span class="emphasis">_id);</span><br><span class="line">ERROR 1215 (HY000): Cannot add foreign key constraint</span><br><span class="line">root@localhost test&gt;show create table stu;</span><br><span class="line">+-------------------------+</span><br><span class="line">| Table | Create Table                                                                                                                                                                                         |</span><br><span class="line">+-------------------------+</span><br><span class="line">| stu   | CREATE TABLE `stu` (</span><br><span class="line">  `id` smallint(5) unsigned NOT NULL AUTO_</span>INCREMENT,</span><br><span class="line"><span class="code">  `stuid` varchar(20) NOT NULL,</span></span><br><span class="line"><span class="code">  `name` varchar(20) NOT NULL,</span></span><br><span class="line"><span class="code">  PRIMARY KEY (`id`)</span></span><br><span class="line"><span class="header">) ENGINE=InnoDB DEFAULT CHARSET=latin1 |</span><br><span class="line">+-------------------------+</span></span><br><span class="line">1 row in set (0.05 sec)</span><br><span class="line"></span><br><span class="line"><span class="header">root@localhost test&gt;show create table stuinfo;</span><br><span class="line">+-------------------------+</span></span><br><span class="line"><span class="header">| Table   | Create Table                                                                                                                   |</span><br><span class="line">+-------------------------+</span></span><br><span class="line">| stuinfo | CREATE TABLE <span class="code">`stuinfo`</span> (</span><br><span class="line"><span class="code">  `stu_id` varchar(20) NOT NULL,</span></span><br><span class="line"><span class="code">  `city` varchar(20) NOT NULL</span></span><br><span class="line"><span class="header">) ENGINE=InnoDB DEFAULT CHARSET=latin1 |</span><br><span class="line">+--------------------------+</span></span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@localhost test&gt;ALTER TABLE stu ADD PRIMARY KEY(stuid);</span><br><span class="line">ERROR 1068 (42000): Multiple primary key defined</span><br><span class="line">root@localhost test&gt;ALTER TABLE stuinfo ADD PRIMARY KEY(stu<span class="emphasis">_id);</span><br><span class="line">Query OK, 0 rows affected (0.53 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line"></span>root@localhost test&gt;ALTER TABLE stu ADD FOREIGN KEY(stuid) REFERENCES stuinfo(stu<span class="emphasis">_id);</span><br><span class="line">Query OK, 0 rows affected (0.77 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span></span><br></pre></td></tr></table></figure>
<h2 id="2-Duplicate_entry__u2018005_u2019_for_key__u2018PRIMARY_u2019"><a href="#2-Duplicate_entry__u2018005_u2019_for_key__u2018PRIMARY_u2019" class="headerlink" title="2.Duplicate entry ‘005’ for key ‘PRIMARY’"></a>2.Duplicate entry ‘005’ for key ‘PRIMARY’</h2><p>数据库中主键不能添加重复值.</p>
<h1 id="u76EE_u5F55_uFF1AMYSQL_u76F8_u5173_u67E5_u8BE2"><a href="#u76EE_u5F55_uFF1AMYSQL_u76F8_u5173_u67E5_u8BE2" class="headerlink" title="目录：MYSQL相关查询"></a>目录：MYSQL相关查询</h1><h2 id="1-_u53C2_u6570"><a href="#1-_u53C2_u6570" class="headerlink" title="1.参数"></a>1.参数</h2><h2 id="2-_u6570_u636E_u7C7B_u578B"><a href="#2-_u6570_u636E_u7C7B_u578B" class="headerlink" title="2.数据类型"></a>2.数据类型</h2><hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：安装与配置MYSQL<br>]]>
    
    </summary>
    
      <category term="MySql" scheme="http://www.bestzhangjin.com/tags/MySql/"/>
    
      <category term="数据库" scheme="http://www.bestzhangjin.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySql" scheme="http://www.bestzhangjin.com/categories/MySql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android studio应用技巧]]></title>
    <link href="http://www.bestzhangjin.com/2016/01/16/android_studio_view/"/>
    <id>http://www.bestzhangjin.com/2016/01/16/android_studio_view/</id>
    <published>2016-01-16T01:29:12.000Z</published>
    <updated>2016-03-15T13:09:59.476Z</updated>
    <content type="html"><![CDATA[<p>主要内容：Android studio应用技巧<br><a id="more"></a></p>
<h1 id="1-_u9879_u76EE_u8DEF_u5F84_u4FEE_u6539"><a href="#1-_u9879_u76EE_u8DEF_u5F84_u4FEE_u6539" class="headerlink" title="1.项目路径修改"></a>1.项目路径修改</h1><p>查看当前项目的路径：navigate-&gt;File path<br>注意：Android Studio的project相当于eclipse的workspace，Android Studio的module相当于eclipse的project，android Stduio，把一个项目比喻成一个工程的一个个模块，外部的依赖也是一个个模块，这样一个项目的结构就很清晰明了。当然也有一个缺点，就是一个窗口只能打开一个project,不能像eclipse那样一次一个窗口打开多个项目。</p>
<h1 id="2-SDK/JDK_u8DEF_u5F84_u4FEE_u6539"><a href="#2-SDK/JDK_u8DEF_u5F84_u4FEE_u6539" class="headerlink" title="2.SDK/JDK路径修改"></a>2.SDK/JDK路径修改</h1><p>查看和修改：Fiew-&gt;project strcture或者View-&gt;open module settings-&gt;SDK Location<br>打开会发现SDK/JDK路径设置</p>
<h1 id="3-_u5DE5_u7A0B_u540D_28apk_u540D_u79F0_29_u4FEE_u6539"><a href="#3-_u5DE5_u7A0B_u540D_28apk_u540D_u79F0_29_u4FEE_u6539" class="headerlink" title="3.工程名(apk名称)修改"></a>3.工程名(apk名称)修改</h1><p>项目右键-&gt;refactor-&gt;rename</p>
<hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：Android studio应用技巧<br>]]>
    
    </summary>
    
      <category term="Android studio" scheme="http://www.bestzhangjin.com/tags/Android-studio/"/>
    
      <category term="应用技巧" scheme="http://www.bestzhangjin.com/tags/%E5%BA%94%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Android studio" scheme="http://www.bestzhangjin.com/categories/Android-studio/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[android studio（APP）常见问题与解决方法]]></title>
    <link href="http://www.bestzhangjin.com/2016/01/15/android_studio_question/"/>
    <id>http://www.bestzhangjin.com/2016/01/15/android_studio_question/</id>
    <published>2016-01-15T05:51:52.000Z</published>
    <updated>2016-01-22T04:17:04.459Z</updated>
    <content type="html"><![CDATA[<p>主要内容：ADB,AVD’s configuration,ANDROID_SDK_ROOT，架包问题<br><a id="more"></a></p>
<h1 id="u4E00-android_studio_u8FD0_u884C_u51FA_u73B0ADB_not_responding-_If_you_u2019d_like_to_retry_2C_then_please_manually_kill__u201Cadb-exe_u201D_and_click__u2018Restart_u2019"><a href="#u4E00-android_studio_u8FD0_u884C_u51FA_u73B0ADB_not_responding-_If_you_u2019d_like_to_retry_2C_then_please_manually_kill__u201Cadb-exe_u201D_and_click__u2018Restart_u2019" class="headerlink" title="一.android studio运行出现ADB not responding. If you’d like to retry, then please manually kill “adb.exe” and click ‘Restart’"></a>一.android studio运行出现ADB not responding. If you’d like to retry, then please manually kill “adb.exe” and click ‘Restart’</h1><p>解决：cmd下：<br>F:\Android\sdk\platform-tools&gt;adb kill-server<br>F:\Android\sdk\platform-tools&gt;adb start-server</p>
<h1 id="u4E8C-android_studio_u8FD0_u884C_u51FA_u73B0This_AVD_u2019s_configuration_is_missing_a_kernel_file_2CANDROID_SDK_ROOT_is_undefined"><a href="#u4E8C-android_studio_u8FD0_u884C_u51FA_u73B0This_AVD_u2019s_configuration_is_missing_a_kernel_file_2CANDROID_SDK_ROOT_is_undefined" class="headerlink" title="二.android studio运行出现This AVD’s configuration is missing a kernel file,ANDROID_SDK_ROOT is undefined"></a>二.android studio运行出现This AVD’s configuration is missing a kernel file,ANDROID_SDK_ROOT is undefined</h1><p>解决：这种错误一般由于Android studio的模拟器错误，将模拟器重新配置使之能够运行起来再利用它运行程序</p>
<h1 id="u4E09-Android_studio_u627E_u4E0D_u5230_u7C7Bactionbaractivity_u6216_u8005AppCompatActivity"><a href="#u4E09-Android_studio_u627E_u4E0D_u5230_u7C7Bactionbaractivity_u6216_u8005AppCompatActivity" class="headerlink" title="三.Android studio找不到类actionbaractivity或者AppCompatActivity"></a>三.Android studio找不到类actionbaractivity或者AppCompatActivity</h1><p>注意：actionbaractivity已经过时，现在一般选择AppCompatActivity<br>  解决：这是因为因为没有导入android-support-v7-appcompat包而导致我找不到相应的类，导入android-support-v7-appcompat.jar包就可以<br>    解压android-support-v7-appcompat.jar包可以查看是不是有对应的类，没有的话建议重新下载版本高一点的包<br>操作步骤：<br>    右键-&gt;open module settings弹出窗口，上面选择Dependencies<br>    点击加号”+”,选择Library dependency<br>    选择appcompat-v7,点击ok</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：ADB,AVD’s configuration,ANDROID_SDK_ROOT，架包问题<br>]]>
    
    </summary>
    
      <category term="APP" scheme="http://www.bestzhangjin.com/tags/APP/"/>
    
      <category term="Android studio" scheme="http://www.bestzhangjin.com/tags/Android-studio/"/>
    
      <category term="常见问题" scheme="http://www.bestzhangjin.com/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
      <category term="APP" scheme="http://www.bestzhangjin.com/categories/APP/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Myeclipse常见问题与解决方法]]></title>
    <link href="http://www.bestzhangjin.com/2016/01/15/myeclipse_question/"/>
    <id>http://www.bestzhangjin.com/2016/01/15/myeclipse_question/</id>
    <published>2016-01-15T05:51:52.000Z</published>
    <updated>2016-03-21T12:21:29.722Z</updated>
    <content type="html"><![CDATA[<p>主要内容：Myeclipse错误及解决方法<br><a id="more"></a></p>
<h1 id="u7B2C_u4E00_u7AE0__u642D_u5EFA_u5B89_u5353_u73AF_u5883_u9519_u8BEF"><a href="#u7B2C_u4E00_u7AE0__u642D_u5EFA_u5B89_u5353_u73AF_u5883_u9519_u8BEF" class="headerlink" title="第一章 搭建安卓环境错误"></a>第一章 搭建安卓环境错误</h1><h2 id="1-Error_when_loading_the_SDK_3A_5Candroid-wear_5Carmeabi-v7a_5Cdevices-xml_u53D1_u73B0_u4EE5_u5143_u7D20_u2019d_3Askin_u2019_u5F00_u5934_u7684_u65E0_u6548_u5185_u5BB9_uFF0C_5Candroid-wear_5Cx86_5Cdevices-xml_u53D1_u73B0_u4EE5_u5143_u7D20_u2019d_3Askin_u2019_u5F00_u5934_u7684_u65E0_u6548_u5185_u5BB9"><a href="#1-Error_when_loading_the_SDK_3A_5Candroid-wear_5Carmeabi-v7a_5Cdevices-xml_u53D1_u73B0_u4EE5_u5143_u7D20_u2019d_3Askin_u2019_u5F00_u5934_u7684_u65E0_u6548_u5185_u5BB9_uFF0C_5Candroid-wear_5Cx86_5Cdevices-xml_u53D1_u73B0_u4EE5_u5143_u7D20_u2019d_3Askin_u2019_u5F00_u5934_u7684_u65E0_u6548_u5185_u5BB9" class="headerlink" title="1.Error when loading the SDK:\android-wear\armeabi-v7a\devices.xml发现以元素’d:skin’开头的无效内容，\android-wear\x86\devices.xml发现以元素’d:skin’开头的无效内容"></a>1.Error when loading the SDK:\android-wear\armeabi-v7a\devices.xml发现以元素’d:skin’开头的无效内容，\android-wear\x86\devices.xml发现以元素’d:skin’开头的无效内容</h2><p>解决：<br>方法1： 在SDK Manager里删除Android-wear相关的image<br>方法2： 进入sdk目录下，把..\android-sdk\system-images\android-22\android-wear\armeabi-v7a\devices.xml<br>和..\android-sdk\system-images\android-22\android-wear\x86\devices.xml文件删除，<br>再把sdk里面..\android-sdk\tools\lib\下的devices.xml拷贝到上述两个文件夹里，重启eclipse即可</p>
<h2 id="2-_u2019Open_Project_u2019_has_encountered_a_problem_2CThe_project_description_file_28-project_29_for__u2018APP_u2019_is_missing"><a href="#2-_u2019Open_Project_u2019_has_encountered_a_problem_2CThe_project_description_file_28-project_29_for__u2018APP_u2019_is_missing" class="headerlink" title="2.’Open Project’ has encountered a problem,The project description file(.project) for ‘APP’ is missing"></a>2.’Open Project’ has encountered a problem,The project description file(.project) for ‘APP’ is missing</h2><p>解决：<br>可能一：这种情况往往是工程文件夹中的.project文件丢失了，所以从别的工程复制过来，就可以用啦。<br>方法二：项目路径改变了，删除项目（不勾选删除文件）后，再重新导入</p>
<h2 id="3-MyEclipse_u4E2D_u5BFC_u5165_u9879_u76EE_u51FA_u73B0Select_at_least_one_project"><a href="#3-MyEclipse_u4E2D_u5BFC_u5165_u9879_u76EE_u51FA_u73B0Select_at_least_one_project" class="headerlink" title="3.MyEclipse中导入项目出现Select at least one project"></a>3.MyEclipse中导入项目出现Select at least one project </h2><p>解决：在导入工程的时候出现的，这是因为有同名的工程的，<br>进入windows-&gt;show view-&gt;project explorer 这里找出来删掉再导入工程即可。</p>
<h1 id="u7B2C_u4E8C_u7AE0__u670D_u52A1_u5668tomcat_u4E0D_u80FD_u542F_u52A8"><a href="#u7B2C_u4E8C_u7AE0__u670D_u52A1_u5668tomcat_u4E0D_u80FD_u542F_u52A8" class="headerlink" title="第二章 服务器tomcat不能启动"></a>第二章 服务器tomcat不能启动</h1><h2 id="1-Publishing_to_Tomcat_Server_at_localhost_Could_not_publish"><a href="#1-Publishing_to_Tomcat_Server_at_localhost_Could_not_publish" class="headerlink" title="1.Publishing to Tomcat Server at localhost Could not publish"></a>1.Publishing to Tomcat Server at localhost Could not publish</h2><p>我出现这个错误是因为Myeclipse的工作目录下项目被我直接删除而Myeclipse不知道。<br>解决：删除工作目录workpace下的.metadata文件夹，重新启动Myecllipse，Myecllipse将生成新的.metadata文件夹，启动tomcat发现问题解决！</p>
<h1 id="u7B2C_u4E09_u7AE0_Struts2_u65B9_u9762_u95EE_u9898"><a href="#u7B2C_u4E09_u7AE0_Struts2_u65B9_u9762_u95EE_u9898" class="headerlink" title="第三章 Struts2方面问题"></a>第三章 Struts2方面问题</h1><h2 id="1-HTTP_Status_500_-_The_Struts_dispatcher_cannot_be_found-_This_is_usually_caused_by_using_Struts_tags"><a href="#1-HTTP_Status_500_-_The_Struts_dispatcher_cannot_be_found-_This_is_usually_caused_by_using_Struts_tags" class="headerlink" title="1.HTTP Status 500 - The Struts dispatcher cannot be found. This is usually caused by using Struts tags"></a>1.HTTP Status 500 - The Struts dispatcher cannot be found. This is usually caused by using Struts tags</h2><p>（1）JSP页面中没有加入类似下面内容： &lt;%@ taglib prefix=”s” uri=”/struts-tags”%&gt;<br>（2）拦截器不是/<em> <filter-mapping> <filter-name>struts2</filter-name> <url-pattern>/</url-pattern></filter-mapping></em> </p>
<h2 id="2-struts-xml_u63D0_u793AThe_content_of_element_type__u201Cpackage_u201D_must_match__u201C_28result-types__2Cinterceptors__2Cdefault-interceptor-ref__2Cdefault-action-ref__2Cdefault-class-ref__2Cglobal-results__2Cglobal-exception-mappings__2Caction*_29_u201D"><a href="#2-struts-xml_u63D0_u793AThe_content_of_element_type__u201Cpackage_u201D_must_match__u201C_28result-types__2Cinterceptors__2Cdefault-interceptor-ref__2Cdefault-action-ref__2Cdefault-class-ref__2Cglobal-results__2Cglobal-exception-mappings__2Caction*_29_u201D" class="headerlink" title="2.struts.xml提示The content of element type “package” must match “(result-types ,interceptors ,default-interceptor-ref ,default-action-ref ,default-class-ref ,global-results ,global-exception-mappings ,action*)”"></a>2.struts.xml提示The content of element type “package” must match “(result-types ,interceptors ,default-interceptor-ref ,default-action-ref ,default-class-ref ,global-results ,global-exception-mappings ,action*)”</h2><p>这个错误的意思是，package里元素必须按照一定的顺序排列。这个顺序<br>就是<br>result-types<br>interceptors<br>default-interceptor-ref<br>default-action-ref<br>default-class-ref<br>global-results<br>global-exception-mappings<br>action*(就是所有的action放到最后)</p>
<hr>
<p>更新中…………</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>主要内容：Myeclipse错误及解决方法<br>]]>
    
    </summary>
    
      <category term="Myeclipse" scheme="http://www.bestzhangjin.com/tags/Myeclipse/"/>
    
      <category term="常见问题" scheme="http://www.bestzhangjin.com/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
      <category term="Myeclipse" scheme="http://www.bestzhangjin.com/categories/Myeclipse/"/>
    
  </entry>
  
</feed>
